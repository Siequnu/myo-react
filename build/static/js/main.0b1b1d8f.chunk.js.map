{"version":3,"sources":["Navbar/Navbar.jsx","components/TopBar/TopBar.jsx","components/SplashScreen/SplashScreen.jsx","components/Auth/LoginButton.jsx","components/Auth/LogoutButton.jsx","components/Auth/Profile.jsx","components/UserMenu/UserMenu.jsx","components/Card/CardComponent.jsx","components/Onboarding/Onboarding.jsx","components/Hero/Hero.jsx","components/HeroList/ActivityAvatarList.jsx","components/HeroList/HeroList.jsx","components/ViewActivities/ViewActivitiesComponent.jsx","components/Activity/ActivityIntroduction.jsx","components/Activity/ActivityCarousel.jsx","components/Activity/Activity.jsx","components/Spark/ActivityBubble.jsx","components/Spark/Spark.jsx","components/Auth/Login.jsx","components/Auth/SignUp.jsx","components/Auth/Reset.jsx","App.js","serviceWorker.js","index.js"],"names":["SimpleBottomNavigation","React","useState","value","setValue","BottomNavigation","onChange","event","newValue","showLabels","className","BottomNavigationAction","component","Link","to","id","label","icon","TopBar","RouterLink","src","alt","fontSize","Component","SplashScreen","LoginButton","loginWithRedirect","useAuth0","onClick","LogoutButton","logout","returnTo","window","location","origin","Profile","user","isAuthenticated","isLoading","picture","name","email","UserMenu","CardComponent","props","activities","map","card","i","activityId","thumbnail","title","description","pathname","style","textDecoration","Onboarding","handleClose","localStorage","setItem","setState","isVisible","state","getItem","story","intro","children","attachToId","this","onClose","Hero","activity","pop","backgroundImage","ActivityAvatarList","Grid","item","List","dense","color","ListItem","ListItemAvatar","Avatar","itemId","ListItemText","primary","secondary","ListItemSecondaryAction","IconButton","edge","Divider","variant","HeroList","half","Math","ceil","length","firstHalf","splice","secondHalf","ViewActivitiesComponent","bounceLoaderCss","css","data","useSWR","loading","size","setActivities","getRandomActivities","count","Array","floor","random","ActivityIntroduction","split","dangerouslySetInnerHTML","__html","Button","handleStartActivity","activityCompleted","setActivityCompleted","spaceBetween","slidesPerView","navigation","pagination","clickable","type","onReachEnd","pages","page","encodeURI","Activity","useParams","showActivityIntroduction","setShowActivityIntroduction","override","SwiperCore","use","Navigation","Pagination","A11y","ActivityBubble","getActivityId","thumbnailUrl","backgroundColor","backgroundColour","opacity","bubbleSize","transition","Spark","options","minSize","gutter","provideProps","numCols","fringeWidth","yRadius","xRadius","cornerRadius","showGuides","compact","gravitation","background_colour","Login","SignUp","Reset","App","splashScreen","setTimeout","rel","href","exact","path","Boolean","hostname","match","ReactDOM","render","domain","clientId","redirectUri","fetcher","fetch","then","res","json","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0b1b1d8f.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Navbar.css';\n\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\n\nimport HomeIcon from '@material-ui/icons/Home';\nimport FireplaceIcon from '@material-ui/icons/Fireplace';\n\n\nexport default function SimpleBottomNavigation() {\n    const [value, setValue] = React.useState(0);\n  \n    return (\n      <BottomNavigation\n        value={value}\n        onChange={(event, newValue) => {\n          setValue(newValue);\n        }}\n        showLabels\n        className=\"navbar\"\n      >\n        <BottomNavigationAction component={Link} to=\"/\" id=\"HomeNavbarIcon\" label=\"Home\" icon={<HomeIcon />} />\n        <BottomNavigationAction component={Link} to=\"/spark\" id=\"SparkNavbarIcon\" label=\"Spark\" icon={<FireplaceIcon />} />\n      </BottomNavigation>\n    );\n  }\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Link } from '@material-ui/core';\n\nimport './TopBar.css';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\n\nclass TopBar extends React.Component {\n  \n  render() {\n      return (\n          <div className=\"TopBar\">\n            <Link component={RouterLink} to=\"/\" className=\"AccountLink\">\n              <img className=\"MyoLogo\" src=\"/assets/logo.png\" alt=\"Myo app logo\" />\n            </Link>\n            <img className=\"MyoText\" src=\"/assets/myo-text.png\" alt=\"Myo app logo\" />\n            <Link component={RouterLink} to=\"/user\" className=\"AccountLink\">\n              <AccountCircleIcon fontSize=\"large\" className=\"AccountCircle\" />\n            </Link>\n          </div>\n      )\n  }\n}\n\nexport default TopBar;","import React, { Suspense } from 'react';\nimport './SplashScreen.css';\n\nexport default function SplashScreen() {\n  return (\n    <div className=\"SplashScreen\">\n      <div className=\"SplashScreenWrapper\">\n        <Suspense>\n          <img src=\"/assets/myo-text-icon.png\" alt=\"Myo icon\" />\n          <p>Spark wonder</p>\n        </Suspense>\n      </div>\n    </div>\n  )\n}\n","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nconst LoginButton = () => {\n    const { loginWithRedirect } = useAuth0();\n\n    return <button onClick={() => loginWithRedirect()}>Log In</button>;\n};\n\nexport default LoginButton;","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nconst LogoutButton = () => {\n    const { logout } = useAuth0();\n\n    return (\n        <button onClick={() => logout({ returnTo: window.location.origin })}>\n            Log Out\n        </button>\n    );\n};\n\nexport default LogoutButton;","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nconst Profile = () => {\n  const { user, isAuthenticated, isLoading } = useAuth0();\n\n  if (isLoading) {\n    return <div>Loading ...</div>;\n  }\n\n  return (\n    isAuthenticated && (\n      <div>\n        <img src={user.picture} alt={user.name} />\n        <h2>{user.name}</h2>\n        <p>{user.email}</p>\n      </div>\n    )\n  );\n};\n\nexport default Profile;","import React from 'react';\nimport './UserMenu.css';\n\nimport LoginButton from '../Auth/LoginButton'\nimport LogoutButton from '../Auth/LogoutButton'\nimport Profile from '../Auth/Profile'\n\nexport default function UserMenu() {\n\n    return (\n        <div className=\"UserMenu\">\n            <h1>Your account</h1>\n            <Profile />\n            <LoginButton />\n            <LogoutButton />\n            \n        </div>\n    )\n}","import React from 'react';\nimport './CardComponent.css'\n\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Link } from '@material-ui/core';\n\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\n\nfunction CardComponent(props) {\n    \n    return (\n        <div className=\"cardComponent\">\n            {props.activities.map((card, i) => (\n                \n                <div className=\"card\" key={i}>\n                    \n                    <div className=\"card-image\">\n                        <img src={`/activities/${card.activityId}/${card.thumbnail}`} alt=\"Header decoration\" />\n                    </div>\n                    \n                    <div className=\"content\">\n                        <h4>{card.title}</h4>\n                        <p>{card.description}</p>\n                    </div>\n                    \n                    <Link component={RouterLink}\n                        to={{pathname: `/activity/${card.activityId}`}}\n                        className=\"read-more\"\n                        style={{ textDecoration: 'none' }}>\n                       <span>Start activity <ChevronRightIcon className=\"chevron-right\" /></span>\n                    </Link>\n\n                </div>\n            ))}\n        </div>\n    )\n}\n\nexport default CardComponent;","import React from 'react';\n\nimport UserOnboarding from 'react-user-onboarding'\nimport 'react-user-onboarding/dist/index.css'\n\nclass Onboarding extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isVisible: (localStorage.getItem('onboardingComplete') === null)\n        }\n\n        this.story = [\n            {\n                component: 'modal',\n                intro: true,\n                children: (\n                    <p>Hey there! Welcome to Myo. As this is your first time, could we show you around?</p>\n                ),\n                className: 'introModal'\n            },\n            {\n                component: 'speech-bubble',\n                attachToId: 'HomeNavbarIcon',\n                children: (\n                    <p>This is the Home tab, where you can view all our activities, or you can click Spark, to start your custom creative journey.</p>\n                )\n            },\n            {\n                component: 'modal',\n                intro: false,\n                children: (\n                    <p>The main feature of Myo is a custom curated journey of creativity exercises, that adapts and matches what you need.</p>\n                )\n            },\n            {\n                component: 'modal',\n                intro: false,\n                children: (\n                    <p>We regularly add more exercises. Good luck with your creativity journey!</p>\n                )\n            }\n        ]\n    }\n\n    handleClose = () => {\n        localStorage.setItem('onboardingComplete', true);\n        this.setState({ isVisible: false })\n    }\n\n    render() {\n        return (\n            <UserOnboarding\n                story={this.story}\n                isVisible={this.state.isVisible}\n                onClose={this.handleClose}\n            />\n        )\n    }\n}\n\nexport default Onboarding;","import React from 'react';\nimport './Hero.css';\n\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Link } from '@material-ui/core';\n\nexport default function Hero(props) {\n\n    const activity = props.activities.pop()\n\n    const thumbnail = `/activities/${activity.activityId}/${activity.thumbnail}`\n    const pathname = `/activity/${activity.activityId}`\n\n    return (\n        <div className=\"Hero\" style={{ backgroundImage: `url(\"${thumbnail}\"`}}>\n            <div className=\"HeroContent\" style={{'background': `linear-gradient(90deg, rgba(241,152,32,1) 35%, rgba(255,255,255,0) 64%)`}}>\n                <h1>{activity.title}</h1>\n                <p>{activity.description}</p>\n\n                <Link component={RouterLink}\n                    to={{\n                        pathname: pathname,\n                        state: { activityId: activity.activityId }\n                    }}\n                    className=\"HeroLink\"\n                    style={{ textDecoration: 'none' }}>\n                    <button className=\"HeroButton\" >Start now</button>\n                </Link>\n\n            </div>\n        </div>\n    )\n}","import React from 'react';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Link } from '@material-ui/core';\n\nimport './ActivityAvatarList.css';\n\nexport default function ActivityAvatarList(props) {\n\n    const getThumbnail = (thumbnail, itemId) => `/activities/${itemId}/${thumbnail}`\n\n    return (\n        <Grid item>\n            <List dense={false}>\n                {props.activities.map((activity, i) => (\n                    <Link \n                        key={i} \n                        component={RouterLink}\n                        to={{ pathname: `/activity/${activity.activityId}` }}\n                        style={{ textDecoration: 'none', color: '#333' }}\n                    >\n                        <ListItem className=\"ListItem\" >\n                            <ListItemAvatar>\n                                <Avatar>\n                                    <img src={getThumbnail(activity.thumbnail, activity.activityId)} alt=\"Activity illustration\" />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={activity.title}\n                                secondary={activity.description}\n                            />\n                            <ListItemSecondaryAction>\n                                <IconButton edge=\"end\">\n                                    <NavigateNextIcon />\n                                </IconButton>\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                        \n                        <Divider variant=\"inset\" component=\"li\" />\n                    </Link>\n                ))}\n            </List>\n        </Grid>\n    );\n}\n","import React from 'react';\nimport './HeroList.css';\n\nimport ActivityAvatarList from './ActivityAvatarList';\n\nexport default function HeroList(props) {\n    \n    // Split the array in half\n    const half = Math.ceil(props.activities.length / 2);    \n    const firstHalf = props.activities.splice(0, half)\n    const secondHalf = props.activities.splice(-half)\n\n    return (\n        <div className=\"HeroList\">\n            <h1>{props.title}</h1>\n            <div className=\"HeroListContent\">\n                <ActivityAvatarList className=\"ActivityAvatarList\" activities={firstHalf} />\n                <ActivityAvatarList className=\"ActivityAvatarList\" activities={secondHalf} />\n            </div>\n        </div>\n    )\n}","import React from \"react\"\nimport useSWR from 'swr'\nimport './ViewActivitiesComponent.css'\n\nimport { css } from \"@emotion/core\";\nimport BounceLoader from \"react-spinners/BounceLoader\";\n\nimport CardComponent from '../Card/CardComponent';\nimport Onboarding from '../Onboarding/Onboarding';\nimport Hero from '../Hero/Hero';\nimport HeroList from '../HeroList/HeroList';\n\nexport default function ViewActivitiesComponent() {\n\n    const bounceLoaderCss = css`display: block; margin: 0 auto;`;\n\n    const { data } = useSWR('/activities/api/list')\n\n    if (!data) return <BounceLoader color='#F19820' loading={true} css={bounceLoaderCss} size={100} />\n    \n    var activities\n    const setActivities = () => {\n        activities=[...data.activities]\n        activities.map((activity, i) => activities[i].activityId = i+1)\n    }\n    setActivities();\n\n\n    // Function to remove from the main array ${count} amount of items\n    const getRandomActivities = (count=false) => {\n        if (activities.length < 1) {setActivities()}\n\n        if (!count) {count = activities.length}\n        return [...Array(count)].map(() => activities.splice(Math.floor(Math.random() * activities.length), 1)[0]);\n    }\n    \n    return (\n        <div className=\"ViewActivitiesComponent\">\n            <Onboarding />\n            <Hero activities={getRandomActivities(1)}/>\n            <HeroList activities={getRandomActivities(4)} title=\"Activities we love right now\"/>\n            <CardComponent activities={getRandomActivities(3)} />\n            <Hero activities={getRandomActivities(1)}/>\n            <HeroList activities={getRandomActivities(4)} title=\"Trending this week\"/>\n            <CardComponent activities={getRandomActivities(6)} />\n            <Hero activities={getRandomActivities(1)}/>\n            <CardComponent activities={getRandomActivities()} />\n        </div>\n    )\n}","import React from \"react\";\nimport { Button } from '@material-ui/core';\n\nimport './ActivityIntroduction.css';\n\nexport default function ActivityIntroduction(props) {\n    return (\n        <div className=\"ActivityIntroduction\">\n            {(props.activity.thumbnail.split('.').pop() === 'mp4') ? (\n                <video src={'/activities/' + (props.activityId) + '/' + props.activity.thumbnail} alt=\"Header decoration\" />\n            ) : (\n                <img src={'/activities/' + (props.activityId) + '/' + props.activity.thumbnail} alt=\"Header decoration\" />\n            )}\n            <h1>{props.activity.title}</h1>\n            <p dangerouslySetInnerHTML={{ __html: props.activity.description }}></p>\n            <Button variant=\"contained\" color=\"primary\" onClick={props.handleStartActivity}>\n                I'm ready\n                </Button>\n        </div>\n    )\n}\n","import React, { useState } from \"react\";\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Link, Button } from '@material-ui/core';\n\nimport './ActivityCarousel.css';\n\n// Import Swiper React components\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport SwiperCore, { Navigation, Pagination, A11y } from 'swiper';\nimport 'swiper/swiper.scss';\nimport 'swiper/components/navigation/navigation.scss';\nimport 'swiper/components/scrollbar/scrollbar.scss';\nimport 'swiper/components/pagination/pagination.scss';\n\nSwiperCore.use([Navigation, Pagination, A11y]);\n\nexport default function ActivityIntroduction(props) {\n\n    const [activityCompleted, setActivityCompleted] = useState(false)\n    const finishedActivity = () => setActivityCompleted(true)\n\n    return (\n        <div className=\"ActivityCarousel\">\n            <Swiper\n                spaceBetween={50}\n                slidesPerView={1}\n                navigation\n                pagination={{ clickable: true, type: 'progressbar', }}\n                onReachEnd={finishedActivity}\n            >\n                {props.activity.pages.map((page, i) => {\n                    return (\n                        <SwiperSlide key={i}>\n                            {(page.thumbnail.split('.').pop() === 'mp4') ? (\n                                <video src={encodeURI('/activities/' + (props.activityId) + '/' + page.thumbnail)} alt=\"Header decoration\" />\n                            ) : (\n                                <img src={encodeURI('/activities/' + (props.activityId) + '/' + page.thumbnail)} alt=\"Header decoration\" />\n                            )}\n                            \n                            <div className=\"text\">\n                                <h1>{page.title}</h1>\n                                <p dangerouslySetInnerHTML={{ __html: page.description }}></p>\n                            </div>\n                        </SwiperSlide>\n                    )\n                })}\n\n            </Swiper>\n            {activityCompleted ? (\n                <Link component={RouterLink}\n                    to={{ pathname: \"/\", }}\n                    style={{ textDecoration: 'none' }}>\n                    <Button variant=\"contained\" color=\"primary\">Done</Button>\n                </Link>\n            ) : null\n            }\n        </div >\n    )\n}\n","import React, { useState } from \"react\";\nimport { useParams } from 'react-router-dom';\n\nimport './Activity.css'\n\nimport useSWR from 'swr'\n\nimport { css } from \"@emotion/core\";\nimport BounceLoader from \"react-spinners/BounceLoader\";\n\nimport ActivityIntroduction from './ActivityIntroduction';\nimport ActivityCarousel from './ActivityCarousel';\n\nexport default function Activity() {\n\n    let { activityId } = useParams();\n\n    const [showActivityIntroduction, setShowActivityIntroduction] = useState(true)\n    \n    const startActivity = () => setShowActivityIntroduction(false)\n    \n    const { data } = useSWR(`/activities/api/get/${activityId-1}`)\n\n    const override = css`display: block; margin: 0 auto;`;\n    if (!data) return <BounceLoader color={\"#F19820\"} loading={true} css={override} size={100} />\n\n    return (\n        <div className=\"Activity\">\n            { showActivityIntroduction ?\n                (\n                    <ActivityIntroduction activityId={activityId} activity={data.activity} handleStartActivity={startActivity}/>\n                )\n                :\n                (\n                    <ActivityCarousel activityId={activityId} activity={data.activity}/>\n                )\n            }\n        </div>\n    )\n}","import React from \"react\";\n\nimport './ActivityBubble.css'\n\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Link } from '@material-ui/core';\n\nexport default function ActivityBubble(props) {\n\n    const getActivityId = () => {\n        return props.activityId + 1;\n    }\n\n    const fullThumbnailPath = '/activities/' + getActivityId() + '/' + props.thumbnail;\n    const thumbnailUrl = \"url('\" + fullThumbnailPath + \"')\";\n\n    return (\n        <Link component={RouterLink}\n            to={{\n                pathname: \"/activity/\" + getActivityId(),\n            }}\n            className=\"ActivityBubble\"\n            style={{ backgroundColor: props.backgroundColour + 'd0', textDecoration: 'none' }}>\n            <div className=\"ActivityDetails\" style={{\n                opacity: props.bubbleSize > 50 ? 1 : 0,\n                transition: \"opacity 0.1s ease\",\n            }}>\n                <div className=\"ActivityThumbnail\" style={{ backgroundImage: thumbnailUrl }}>\n                </div>\n                <h1>{props.title}</h1>\n            </div>\n        </Link>\n    )\n\n}","import React from 'react';\nimport useSWR from 'swr'\n\nimport BubbleUI from \"react-bubble-ui\";\nimport \"react-bubble-ui/dist/index.css\";\n\nimport ActivityBubble from \"./ActivityBubble\";\n\nimport { css } from \"@emotion/core\";\nimport BounceLoader from \"react-spinners/BounceLoader\";\n\nimport \"./Spark.css\";\n\nfunction Spark() {\n\n    const override = css`display: block; margin: 0 auto;`;\n    \n    const options = {\n        size: 165,\n        minSize: 20,\n        gutter: 10,\n        provideProps: true,\n        numCols: 5,\n        fringeWidth: 120,\n        yRadius: 200,\n        xRadius: 100,\n        cornerRadius: 20,\n        showGuides: false,\n        compact: true,\n        gravitation: 5\n    }\n\n    const { data } = useSWR('/activities/api/list')\n\n    if (!data) return <BounceLoader color={\"#F19820\"} loading={true} css={override} size={100} />\n\n    return (\n        <div className=\"Spark\">\n            <BubbleUI options={options} className=\"sparkBubbleUi\">\n                { data.activities.map((activity, i) => {\n                    return (\n                        <ActivityBubble key={i} activityId={i} title={activity.title} thumbnail={activity.thumbnail} backgroundColour={activity.background_colour} />\n                    )\n                })}\n            </BubbleUI>\n        </div>\n    )\n\n}\n\nexport default Spark;","import React from 'react';\n\nclass Login extends React.Component {\n  render () {\n    return <p>Reset</p>\n  }\n}\n\nexport default Login","import React from 'react';\n\nclass SignUp extends React.Component {\n  render () {\n    return <p>SignUp</p>\n  }\n}\nexport default SignUp;","import React from 'react';\n\nclass Reset extends React.Component {\n  render () {\n    return <p>Reset</p>\n  }\n}\n\nexport default Reset;","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport './fonts/font.css';\n\nimport Navbar from './Navbar/Navbar';\nimport TopBar from './components/TopBar/TopBar';\n\nimport SplashScreen from './components/SplashScreen/SplashScreen';\nimport UserMenu from './components/UserMenu/UserMenu.jsx';\nimport ViewActivitiesComponent from './components/ViewActivities/ViewActivitiesComponent';\nimport Activity from './components/Activity/Activity';\nimport Spark from './components/Spark/Spark';\n\nimport Login from './components/Auth/Login';\nimport SignUp from './components/Auth/SignUp';\nimport Reset from './components/Auth/Reset';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      splashScreen: true,\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({ splashScreen: false })\n    }, 1500);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <link rel=\"shortcut icon\" href=\"./favicon.ico\" />\n        <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\n\n        <header className=\"App-header\">\n          {this.state.splashScreen ? (\n            <SplashScreen />\n          ) : (\n            <BrowserRouter>\n              <TopBar />\n              <div className=\"AppWrapper\">\n                <Switch>\n\n                  <Route exact path=\"/\">\n                    <ViewActivitiesComponent />\n                  </Route>\n\n                  <Route exact path=\"/activity/:activityId\">\n                    <Activity />\n                  </Route>\n\n                  <Route exact path=\"/spark\">\n                    <Spark />\n                  </Route>\n\n                  <Route exact path=\"/user\">\n                    <UserMenu />\n                  </Route>\n\n                  <Route exact path=\"/login\">\n                    <Login />\n                  </Route>\n\n                  <Route exact path=\"/signup\">\n                    <SignUp />\n                  </Route>\n\n                  <Route exact path=\"/reset\">\n                    <Reset />\n                  </Route>\n\n\n                </Switch>\n              </div>\n              <Navbar />\n            </BrowserRouter>\n          )}\n\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { SWRConfig } from 'swr'\nimport { Auth0Provider } from \"@auth0/auth0-react\";\n\nconst fetcher = (...args) => fetch(...args).then((res) => res.json())\n\nReactDOM.render(\n    <Auth0Provider\n        domain=\"dev-z4eaow9y.eu.auth0.com\"\n        clientId=\"iBtRx9Hw4263FF4ZXs6MED5Ljb1OlvRx\"\n        redirectUri={window.location.origin}\n    >\n        <SWRConfig value={{ fetcher }}>\n            <App />\n        </SWRConfig>\n    </Auth0Provider>,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}