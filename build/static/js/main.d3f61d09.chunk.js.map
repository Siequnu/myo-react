{"version":3,"sources":["Navbar/Navbar.jsx","components/TopBar/TopBar.jsx","components/SplashScreen/SplashScreen.jsx","components/UserMenu/UserMenu.jsx","components/Card/CardComponent.jsx","components/Onboarding/Onboarding.jsx","components/ViewActivities/ViewActivitiesComponent.jsx","components/Activity/Activity.jsx","components/Spark/ActivityBubble.jsx","components/Spark/Spark.jsx","App.js","serviceWorker.js","index.js"],"names":["SimpleBottomNavigation","React","useState","value","setValue","BottomNavigation","onChange","event","newValue","showLabels","className","BottomNavigationAction","component","Link","to","id","label","icon","TopBar","src","alt","RouterLink","fontSize","Component","SplashScreen","UserMenu","CardComponent","props","getActivityId","iteration","cards","map","card","i","thumbnail","title","description","pathname","state","activityId","style","textDecoration","Onboarding","handleClose","localStorage","setItem","setState","isVisible","getItem","story","intro","children","attachToId","this","onClose","ViewActivitiesComponent","activities","setActivities","useEffect","getActivities","fetch","then","res","json","data","SwiperCore","use","Navigation","Pagination","A11y","Activity","useParams","activity","setActivity","activityCompleted","setActivityCompleted","showActivityIntroduction","setShowActivityIntroduction","dangerouslySetInnerHTML","__html","Button","variant","color","onClick","spaceBetween","slidesPerView","navigation","pagination","clickable","type","onReachEnd","pages","page","exitCallback","ActivityBubble","fullThumbnailPath","thumbnailUrl","backgroundColour","setBackgroundColour","getProminentColour","image","prominent","amount","format","sample","colour","backgroundColor","opacity","bubbleSize","transition","backgroundImage","Spark","options","size","minSize","gutter","provideProps","numCols","fringeWidth","yRadius","xRadius","cornerRadius","showGuides","compact","gravitation","App","splashScreen","setTimeout","rel","href","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d3f61d09.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Navbar.css';\n\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\n\nimport HomeIcon from '@material-ui/icons/Home';\nimport FireplaceIcon from '@material-ui/icons/Fireplace';\n\n\nexport default function SimpleBottomNavigation() {\n    const [value, setValue] = React.useState(0);\n  \n    return (\n      <BottomNavigation\n        value={value}\n        onChange={(event, newValue) => {\n          setValue(newValue);\n        }}\n        showLabels\n        className=\"navbar\"\n      >\n        <BottomNavigationAction component={Link} to=\"/\" id=\"HomeNavbarIcon\" label=\"Home\" icon={<HomeIcon />} />\n        <BottomNavigationAction component={Link} to=\"/spark\" id=\"SparkNavbarIcon\" label=\"Spark\" icon={<FireplaceIcon />} />\n      </BottomNavigation>\n    );\n  }\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Link } from '@material-ui/core';\n\nimport './TopBar.css';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\n\nclass TopBar extends React.Component {\n  \n  render() {\n      return (\n          <div className=\"TopBar\">\n            <img className=\"MyoLogo\" src=\"/assets/logo.png\" alt=\"Myo app logo\" />\n            <img className=\"MyoText\" src=\"/assets/myo-text.png\" alt=\"Myo app logo\" />\n            <Link component={RouterLink} to=\"/user\" className=\"AccountLink\">\n              <AccountCircleIcon fontSize=\"large\" className=\"AccountCircle\" />\n            </Link>\n          </div>\n      )\n  }\n}\n\nexport default TopBar;","import React, { Suspense } from 'react';\nimport './SplashScreen.css';\n\nexport default function SplashScreen() {\n  return (\n    <div className=\"SplashScreen\">\n      <div className=\"SplashScreenWrapper\">\n        <Suspense>\n          <img src=\"/assets/myo-text-icon.png\" alt=\"Myo icon\" />\n          <p>Spark wonder</p>\n        </Suspense>\n      </div>\n    </div>\n  )\n}\n","import React from 'react';\nimport './UserMenu.css';\n\nclass UserMenu extends React.Component {\n    render() {\n        return (\n            <div className=\"UserMenu\">\n                <h1>Your account</h1>\n            </div>\n        )\n    }\n}\n\nexport default UserMenu;","import React from 'react';\nimport './CardComponent.css'\n\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Link } from '@material-ui/core';\n\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\n\nfunction CardComponent(props) {\n    \n    const getActivityId = (iteration) => {\n        return iteration + 1;\n    }\n    \n    return (\n        <div className=\"cardComponent\">\n            {props.cards.map((card, i) => (\n                \n                <div className=\"card\" key={i}>\n                    \n                    <div className=\"card-image\">\n                        <img src={'/static/activities/' + getActivityId(i) + '/' + card.thumbnail} alt=\"Header decoration\" />\n                    </div>\n                    \n                    <div className=\"content\">\n                        <h4>{card.title}</h4>\n                        <p>{card.description}</p>\n                    </div>\n                    \n                    <Link component={RouterLink}\n                        to={{\n                            pathname: \"/activity/\" + getActivityId(i),\n                            state: { activityId: props.activityId }\n                        }}\n                        className=\"read-more\"\n                        style={{ textDecoration: 'none' }}>\n                       <span>Start activity <ChevronRightIcon className=\"chevron-right\" /></span>\n                    </Link>\n\n                </div>\n            ))}\n        </div>\n    )\n}\n\nexport default CardComponent;","import React from 'react';\n\nimport UserOnboarding from 'react-user-onboarding'\nimport 'react-user-onboarding/dist/index.css'\n\nclass Onboarding extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isVisible: (localStorage.getItem('onboardingComplete') === null)\n        }\n\n        this.story = [\n            {\n                component: 'modal',\n                intro: true,\n                children: (\n                    <p>Hey there! Welcome to Myo. As this is your first time, could we show you around?</p>\n                ),\n                className: 'introModal'\n            },\n            {\n                component: 'speech-bubble',\n                attachToId: 'HomeNavbarIcon',\n                children: (\n                    <p>This is the Home tab, where you can view all our activities, or you can click Spark, to start your custom creative journey.</p>\n                )\n            },\n            {\n                component: 'modal',\n                intro: false,\n                children: (\n                    <p>The main feature of Myo is a custom curated journey of creativity exercises, that adapts and matches what you need.</p>\n                )\n            },\n            {\n                component: 'modal',\n                intro: false,\n                children: (\n                    <p>We regularly add more exercises. Good luck with your creativity journey!</p>\n                )\n            }\n        ]\n    }\n\n    handleClose = () => {\n        localStorage.setItem('onboardingComplete', true);\n        this.setState({ isVisible: false })\n    }\n\n    render() {\n        return (\n            <UserOnboarding\n                story={this.story}\n                isVisible={this.state.isVisible}\n                onClose={this.handleClose}\n            />\n        )\n    }\n}\n\nexport default Onboarding;","import React, { useEffect, useState } from \"react\";\nimport './ViewActivitiesComponent.css'\n\nimport CardComponent from '../Card/CardComponent';\nimport Onboarding from '../Onboarding/Onboarding'\n\nfunction ViewActivitiesComponent() {\n\n    const [activities, setActivities] = useState([]);\n\n    useEffect(() => {\n        getActivities();\n    }, [])\n\n    const getActivities = () => {\n        fetch('/activities/api/get').then(res => res.json()).then(data => {\n            setActivities(data.activities);\n        });\n    }\n\n    return (\n        <div className=\"ViewActivitiesComponent\">\n            <Onboarding />\n            <CardComponent cards={activities} />\n        </div>\n    )\n}\n\nexport default ViewActivitiesComponent;","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport './Activity.css'\n\nimport Button from '@material-ui/core/Button';\n\n// Import Swiper React components\nimport { Swiper, SwiperSlide } from 'swiper/react';\n\n// import Swiper core and required modules\nimport SwiperCore, { Navigation, Pagination, A11y } from 'swiper';\n\nimport 'swiper/swiper.scss';\nimport 'swiper/components/navigation/navigation.scss';\nimport 'swiper/components/scrollbar/scrollbar.scss';\nimport 'swiper/components/pagination/pagination.scss';\n\n// install Swiper modules\nSwiperCore.use([Navigation, Pagination, A11y]);\n\nfunction Activity(props) {\n    let { activityId } = useParams();\n\n    const [activity, setActivity] = useState(null)\n    const [activityCompleted, setActivityCompleted] = useState(false)\n    const [showActivityIntroduction, setShowActivityIntroduction] = useState(true)\n\n    useEffect(() => {\n        fetch('/activities/api/get').then(res => res.json()).then(data => {\n            setActivity(data.activities[activityId - 1]);\n        });\n    }, [activityId])\n\n    const startActivity = () => {\n        setShowActivityIntroduction(false);\n    }\n\n    const finishedActivity = () => {\n        setActivityCompleted(true);\n    }\n\n    if (activity === null) {\n        return null;\n    }\n    \n    if (showActivityIntroduction) {\n        return (\n            <div className=\"Activity\">\n                <div className=\"ActivityIntroduction\">\n                    <img src={'/static/activities/' + (activityId) + '/' + activity.thumbnail} alt=\"Header decoration\" />\n                    <h1>{activity.title}</h1>\n                    <p dangerouslySetInnerHTML={{ __html: activity.description }}></p>\n                    <Button variant=\"contained\" color=\"primary\" onClick={startActivity}>\n                        Start now\n                         </Button>\n                </div>\n            </div>\n        )\n    } else {\n        return (\n            <div className=\"ActivityCarousel\">\n                <Swiper\n                    spaceBetween={50}\n                    slidesPerView={1}\n                    navigation\n                    pagination={{ clickable: true, type: 'progressbar', }}\n                    onReachEnd={finishedActivity}\n                >\n                    {activity.pages.map((page, i) => {\n                        return (\n                            <SwiperSlide key={i}>\n                                <img src={'/static/activities/' + (activityId) + '/' + page.thumbnail} alt=\"Header decoration\" />\n                                <h1>{page.title}</h1>\n                                <p dangerouslySetInnerHTML={{ __html: page.description }}></p>\n                            </SwiperSlide>\n                        )\n                    })}\n\n                </Swiper>\n                { activityCompleted ? (\n                    <Button variant=\"contained\" color=\"primary\" onClick={() => props.exitCallback()}>\n                        Done\n                    </Button>\n                ) : null}\n            </div>\n        )\n    }\n}\n\nexport default Activity;","import React, { useEffect, useState } from \"react\";\nimport { prominent } from 'color.js'\n\nimport './ActivityBubble.css'\n\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Link } from '@material-ui/core';\n\nfunction ActivityBubble(props) {\n\n    const getActivityId = () => {\n        return props.activityId + 1;\n    }\n\n    const fullThumbnailPath = '/static/activities/' + getActivityId() + '/' + props.thumbnail;\n    const thumbnailUrl = \"url('\" + fullThumbnailPath + \"')\";\n\n    const [backgroundColour, setBackgroundColour] = useState('#eee')\n\n    useEffect(() => {\n        getProminentColour(fullThumbnailPath);\n    }, [fullThumbnailPath])\n\n    const getProminentColour = (image) => {\n        prominent(image, { amount: 1, format: 'hex', sample: 12000 }).then(colour => {\n            setBackgroundColour(colour + 'd0');\n        })\n    }\n\n    return (\n        <Link component={RouterLink}\n            to={{\n                pathname: \"/activity/\" + getActivityId(),\n            }}\n            className=\"ActivityBubble\"\n            style={{ backgroundColor: backgroundColour, textDecoration: 'none' }}>\n            <div className=\"ActivityDetails\" style={{\n                opacity: props.bubbleSize > 50 ? 1 : 0,\n                transition: \"opacity 0.1s ease\",\n            }}>\n                <div className=\"ActivityThumbnail\" style={{ backgroundImage: thumbnailUrl }}>\n                </div>\n                <h1>{props.title}</h1>\n            </div>\n        </Link>\n    )\n\n}\n\nexport default ActivityBubble;","import React from 'react';\n\nimport BubbleUI from \"react-bubble-ui\";\nimport \"react-bubble-ui/dist/index.css\";\n\nimport ActivityBubble from \"./ActivityBubble\";\n\nimport \"./Spark.css\";\n\nclass Spark extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.options = {\n            size: 165,\n            minSize: 20,\n            gutter: 10,\n            provideProps: true,\n            numCols: 5,\n            fringeWidth: 120,\n            yRadius: 200,\n            xRadius: 100,\n            cornerRadius: 50,\n            showGuides: false,\n            compact: true,\n            gravitation: 5\n        }\n\n        this.state = {\n            activities: [],\n        }\n\n    }\n\n    componentDidMount() {\n        this.getActivities();\n    }\n\n\n    getActivities = () => {\n        fetch('/activities/api/get').then(res => res.json()).then(data => {\n            this.setState({ activities: data.activities });\n        })\n    }\n\n    render() {\n        return (\n            <BubbleUI options={this.options} className=\"sparkBubbleUi\">\n                { this.state.activities.map((activity, i) => {\n                    return (\n                        <ActivityBubble key={i} activityId={i} title={activity.title} thumbnail={activity.thumbnail}/>\n                    )\n                })}\n            </BubbleUI>\n        )\n    }\n}\n\nexport default Spark;","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport './fonts/font.css';\n\nimport Navbar from './Navbar/Navbar';\nimport TopBar from './components/TopBar/TopBar';\n\nimport SplashScreen from './components/SplashScreen/SplashScreen';\nimport UserMenu from './components/UserMenu/UserMenu.jsx';\nimport ViewActivitiesComponent from './components/ViewActivities/ViewActivitiesComponent';\nimport Activity from './components/Activity/Activity';\nimport Spark from './components/Spark/Spark';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      splashScreen: true,\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({ splashScreen: false })\n    }, 1500);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <link rel=\"shortcut icon\" href=\"./favicon.ico\" /> \n        <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\n\n        <header className=\"App-header\">\n          {this.state.splashScreen ? (\n            <SplashScreen />\n          ) : (\n            <BrowserRouter>\n              <TopBar />\n              <div className=\"AppWrapper\">\n                <Switch>\n                  \n                  <Route exact path=\"/\">\n                    <ViewActivitiesComponent />\n                  </Route>\n\n                  <Route exact path=\"/activity/:activityId\">\n                    <Activity />\n                  </Route>\n\n                  <Route exact path=\"/spark\">\n                    <Spark />\n                  </Route>\n\n                  <Route exact path=\"/user\">\n                    <UserMenu />\n                  </Route>\n\n                </Switch>\n              </div>\n              <Navbar />\n            </BrowserRouter>\n          )}\n\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}