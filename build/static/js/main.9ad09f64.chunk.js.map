{"version":3,"sources":["helpers/auth-header.js","helpers/handle-response.js","config.js","services/authentication.service.js","services/api.service.js","services/axios-fetcher.service.js","components/Auth/PrivateRoute.jsx","components/Auth/Login.jsx","components/Auth/Logout.jsx","components/Auth/ResetWithToken.jsx","components/Auth/Reset.jsx","components/Auth/SignUp.jsx","components/Auth/ConfirmEmail.jsx","components/UserOnboarding/OnboardingLoading.jsx","components/UserOnboarding/OnboardingHero.jsx","components/UserOnboarding/UserOnboarding.jsx","components/Navbar/Navbar.jsx","components/TopBar/TopBar.jsx","components/PhotoDivider/PhotoDividerComponent.jsx","components/Home/Home.jsx","components/SplashScreen/SplashScreen.jsx","components/UserMenu/UserHero.jsx","components/UserMenu/UserTabs.jsx","components/UserMenu/UserAwards.jsx","components/UserMenu/UserMenu.jsx","components/Card/CardComponent.jsx","components/Onboarding/Onboarding.jsx","components/Hero/Hero.jsx","components/HeroList/ActivityAvatarList.jsx","components/HeroList/HeroList.jsx","components/ViewActivities/ViewActivitiesComponent.jsx","components/Activity/ActivityIntroduction.jsx","components/Activity/Slider.jsx","components/Activity/ReviewDialog.jsx","components/Activity/ActivityCarousel.jsx","components/Activity/Activity.jsx","components/ActivityPreviewDialog/ActivityPreviewDialog.jsx","components/Spark/Parallax.jsx","components/Spark/Spark.jsx","components/Create/ActivityBubble.jsx","components/Create/CreateHero.jsx","components/Create/BubbleUI.jsx","components/Create/CategoryButton.jsx","components/Create/CreateTabs.jsx","components/Create/Create.jsx","components/Dashboard/DashboardTabs.jsx","components/Dashboard/DashboardActivities.jsx","components/Dashboard/DashboardUsers.jsx","components/Dashboard/DashboardStats.jsx","components/Dashboard/Dashboard.jsx","App.js","serviceWorker.js","interceptors/axios-interceptor.js","index.js","components/Spark/styles.module.css"],"names":["authHeader","currentUser","authenticationService","currentUserValue","access_token","Authorization","accessToken","refreshToken","refresh_token","handleResponse","response","text","then","data","JSON","parse","ok","indexOf","status","logout","error","statusText","Promise","reject","config","authLogin","authRefresh","afterLogout","resetWithToken","authSignUp","authValidate","confirmEmail","userProfileUrl","getRoles","getUsers","activitiesListUrl","activityGetUrl","activityCompleteUrl","activityStats","getSparkPlan","onboardingStatusUrl","onboardingSteps","onboardingQuestions","question","answers","currentUserSubject","BehaviorSubject","localStorage","getItem","login","removeItem","next","signUp","updateUser","userObject","setItem","stringify","validateRegistration","asObservable","value","username","password","a","requestOptions","method","headers","body","fetch","user","email","validation","token","hasOwnProperty","postApiData","url","values","axios","post","PrivateRoute","Component","component","rest","render","props","to","pathname","state","from","location","withRouter","setSnackbar","React","useContext","SnackbarContext","history","push","formik","useFormik","initialValues","onSubmit","open","severity","catch","className","handleSubmit","TextField","fullWidth","id","name","label","onChange","handleChange","touched","Boolean","errors","type","helperText","Button","color","variant","Link","onClick","useParams","json","success","validate","includes","username_exists","email_exists","Object","entries","map","pop","result","bounceLoaderCss","css","loading","size","useState","loadingDone","setLoadingDone","progress","setProgress","setText","titles","useEffect","timer","setInterval","oldProgress","diff","Math","random","newProgress","min","percent","titleIndex","floor","length","getText","clearInterval","style","animation","onComplete","LinearProgress","intensity","width","height","cx","cy","fill","r","OnboardingHero","backgroundImage","showIntroHero","setShowIntroHero","questionsDone","setQuestionsDone","activeStep","setActiveStep","steps","questions","currentQuestionIndex","setCurrentQuestionIndex","selectedAnswerIndices","setSelectedAnswerIndices","questionAnswerObject","setQuestionAnswerObject","newQuestionAnswerObject","questionIndex","answer","goToNextQuestion","nextQuestion","nextPercentage","nextStep","ceil","handleSaveOnboarding","onboarding_json","useSWR","Stepper","alternativeLabel","Step","StepLabel","List","aria-label","i","ListItem","selected","index","button","ListItemText","align","primary","disabled","SimpleBottomNavigation","setValue","devicePlatform","setDevicePlatform","Device","getInfo","info","platform","getDeviceInfo","BottomNavigation","event","newValue","showLabels","paddingBottom","BottomNavigationAction","icon","TopBar","paddingTop","RouterLink","src","alt","fontSize","PhotoDividerComponent","thumbnail","getRandomThumbnail","activity","activities","activityId","activeClass","spy","smooth","offset","duration","margin","display","endIcon","class","padding","SplashScreen","userProfile","isAdmin","jwt_decode","admin","maximised","registered","useStyles","makeStyles","root","flexGrow","CenteredTabs","classes","Paper","Tabs","currentTab","setCurrentTab","indicatorColor","textColor","centered","Tab","UserAwards","awards","title","medal","award","awardObject","UserMenu","currentTabContent","setCurrentTabContent","CardComponent","card","description","skipIntro","textDecoration","Onboarding","handleClose","setState","isVisible","story","intro","children","attachToId","this","onClose","Hero","ActivityAvatarList","Grid","item","dense","ListItemAvatar","Avatar","itemId","secondary","ListItemSecondaryAction","IconButton","edge","Divider","HeroList","half","firstHalf","splice","secondHalf","ViewActivitiesComponent","setActivities","getRandomActivities","count","Array","ActivityIntroduction","split","autoPlay","muted","loop","playsInline","controls","dangerouslySetInnerHTML","__html","handleStartActivity","theme","spacing","iOSBoxShadow","marks","IOSSlider","withStyles","thumb","backgroundColor","boxShadow","marginTop","marginLeft","active","valueLabel","left","top","background","track","rail","opacity","mark","markActive","Slider","FeedbackSlider","defaultValue","valueLabelDisplay","ReviewDialog","feelingSliderValue","setFeelingSliderValue","sliderValue","setSliderValue","userFeedback","setUserFeedback","submitWithoutData","Dialog","disableEnforceFocus","DialogTitle","DialogContent","DialogContentText","multiline","target","DialogActions","feedback","feeling","slider","ActivityCarousel","reviewDialogOpen","setReviewDialogOpen","activityCompleted","setActivityCompleted","spaceBetween","slidesPerView","navigation","pagination","clickable","onReachEnd","pages","page","encodeURI","activity_id","activity_feedback","Activity","showActivityIntroduction","setShowActivityIntroduction","override","SwiperCore","use","Navigation","Pagination","A11y","Transition","forwardRef","ref","Slide","direction","ActivityPreviewDialog","TransitionComponent","wrap","leftMargin","window","innerWidth","topMargins","Page","gradient","handleClick","speed","styles","slopeBegin","factor","backgroundSize","slopeEnd","number","marginBottom","quoteAuthor","activityIcon","dialogOpen","setDialogOpen","selectedActivity","setSelectedActivity","parallax","useRef","container","horizontal","onboarding","mutate","Parallax","ActivityBubble","thumbnailUrl","backgroundColour","bubbleSize","transition","CreateHero","Fab","float","handleBack","category","options","minSize","gutter","provideProps","numCols","fringeWidth","yRadius","xRadius","cornerRadius","showGuides","compact","gravitation","background_colour","CategoryButton","Create","currentCategory","setCurrentCategory","categories","tags","viewBubbles","setViewBubbles","handleViewBubbles","creators","creator","DashboardActivities","columns","field","headerName","sortable","disableClickEventBubbling","renderCell","params","row","refreshInterval","autoPageSize","rows","pageSize","DashboardUsers","DashboardStats","stats","statistic","Card","CardContent","Typography","gutterBottom","Dashboard","createContext","App","splashScreen","setSplashScreen","setTimeout","createMuiTheme","palette","useMediaQuery","main","typography","fontFamily","join","overrides","MuiTouchRipple","child","snackbar","ThemeProvider","CssBaseline","rel","href","Provider","Snackbar","autoHideDuration","exact","path","Spark","UserOnboarding","Login","Logout","Reset","SignUp","ConfirmEmail","ResetWithToken","hostname","match","interceptors","resolve","originalRequest","refreshTokenString","__isRetryRequest","_retry","refresh","res","reload","ReactDOM","fetcher","get","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.9ad09f64.chunk.js","sourcesContent":["import { authenticationService } from '../services';\n\nexport function authHeader() {\n    // Return authorization header with jwt token\n    const currentUser = authenticationService.currentUserValue;\n    if (currentUser && currentUser.access_token) {\n        return { Authorization: `Bearer ${currentUser.access_token}` };\n    } else {\n        return {};\n    }\n}\n\nexport function refreshHeader() {\n    // Return authorization header with jwt token\n    const currentUser = authenticationService.currentUserValue;\n    if (currentUser && currentUser.refresh_token) {\n        return { Authorization: `Bearer ${currentUser.refresh_token}` };\n    } else {\n        return {};\n    }\n}\n\nexport function accessToken() {\n    // Return jwt token\n    const currentUser = authenticationService.currentUserValue;\n    if (currentUser && currentUser.access_token) {\n        return currentUser.access_token;\n    } else {\n        return {};\n    }\n}\n\nexport function refreshToken() {\n    // Return jwt refresh token\n    const currentUser = authenticationService.currentUserValue;\n    if (currentUser && currentUser.refresh_token) {\n        return currentUser.refresh_token;\n    } else {\n        return false;\n    }\n}","import { authenticationService } from '../services';\n\n// Handle Sign-in response\nexport function handleResponse(response) {\n    return response.text().then(text => {\n        const data = text && JSON.parse(text);\n        if (!response.ok) {\n            if ([401, 403].indexOf(response.status) !== -1) {\n                // Auto logout if 401 Unauthorized or 403 Forbidden response returned from api\n                authenticationService.logout();\n                //window.location.reload();\n            }\n            \n            const error = (data && data.error) || response.statusText;\n            return Promise.reject(error);\n        }\n\n        return data;\n    });\n}","const config = \n{\n    authLogin: '/auth/login',\n    authRefresh: '/auth/refresh',\n    afterLogout: '/login',\n    resetWithToken: '/auth/reset/token',\n    authSignUp: '/auth/register',\n    authValidate: '/auth/validate',\n    confirmEmail: '/auth/confirm',\n    userProfileUrl: '/auth/profile',\n    \n    getRoles: '/auth/roles',\n    getUsers: '/auth/users/get',\n\n    activitiesListUrl: '/activities/api/list',\n    activityGetUrl: '/activities/api/get/',// +/${activityId}\n    activityCompleteUrl: '/activities/api/complete',\n    activityStats: '/activities/api/stats/get',\n\n    getSparkPlan: '/activities/api/spark/get',\n\n    onboardingStatusUrl: '/onboarding/status',\n\n    onboardingSteps: ['About yourself', 'You and art', 'Final details'],\n    onboardingQuestions: [\n        {\n            question: \"What kind of creative activity are you most interested in?\",\n            answers:[\n                \"Drawing\",\n                \"Writing\",\n                \"Painting\",\n                \"Crafts\",\n                \"Photography\"\n            ]\n        },\n        {\n            question: \"What would you like to use Myo for?\",\n            answers :[\n                \"To relax\",\n                \"To learn new skills\",\n                \"To use my imagination\",\n                \"To better express myself\",\n                \"To discover new arts\"\n            ]\n        },\n        {\n            question: \"What would you like Myo to offer?\",\n            answers: [\n                \"Breadth of activities\",\n                \"In depth skill building\",\n                \"Global perspectives\",\n                \"Interaction with artists & users\"\n            ]\n        },\n        {\n            question: \"What skills are you most interested in developing?\",\n            answers: [\n                \"Imagination\",\n                \"Persistence\",\n                \"Discipline\",\n                \"Inquisitiveness\",\n                \"Collaboration\"\n            ]\n        },\n        {\n            question: \"Generally, how often do you engage in creative activities?\",\n            answers: [\n                \"Everyday\",\n                \"Two or three times a week\",\n                \"Once every now and again\",\n                \"Never!\"\n            ]\n        },\n        {\n            question: \"How often would you like to engage in creative activities?\",\n            answers: [\n                \"Everyday\",\n                \"Two or three times a week\",\n                \"Once every now and again\",\n                \"Never!\"\n            ]\n        },\n        {\n            question: \"For how long?\",\n            answers: [\n                \"No more than 5mins at a time\",\n                \"5mins to 10mins\",\n                \"10mins to 20mins\",\n                \"20mins to 40mins\",\n                \"Sky’s the limit!\"\n            ]\n        },\n        {\n            question: \"How ‘experienced’ do you think you are?\",\n            answers: [\n                \"Complete beginner\",\n                \"Want to take it easy\",\n                \"I like a challenge!\",\n                \"Experience grrrr!!\"\n            ]\n        },\n        {\n            question:\"What materials do you have access to?\",\n            answers: [\n                \"Pens and paper only\",\n                \"Own some pencils\",\n                \"Watercolour paints\",\n                \"Acrylic paints\",\n                \"General arts & crafts stuff\",\n                \"Camera (phone will do)\"\n            ],\n            //type: 'multiple'\n        }\n    ]\n}\n\nexport default config","import { BehaviorSubject } from 'rxjs';\nimport { handleResponse } from '../helpers';\nimport config from '../config';\n\nconst currentUserSubject = new BehaviorSubject(JSON.parse(localStorage.getItem('currentUser')));\n\nexport const authenticationService = {\n    login,\n    logout,\n    signUp,\n    updateUser,\n    validateRegistration,\n    confirmEmail,\n    currentUser: currentUserSubject.asObservable(),\n    get currentUserValue() { return currentUserSubject.value }\n};\n\nasync function login(username, password) {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username, password })\n    };\n\n    const response = await fetch(config.authLogin, requestOptions);\n    const user = await handleResponse(response);\n\n    // Store user details and JWT token in local storage to keep user logged in between page refreshes\n    localStorage.setItem('currentUser', JSON.stringify(user));\n    currentUserSubject.next(user);\n    return user;\n}\n\n\nasync function signUp(username, email, password) {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username, password, email })\n    };\n\n    const response = await fetch(config.authSignUp, requestOptions);\n    const user = await handleResponse(response);\n\n    return user;\n}\n\nasync function validateRegistration(username, email) {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username, email })\n    };\n\n    const response = await fetch(config.authValidate, requestOptions);\n    const validation = await handleResponse(response);\n    \n    return validation;\n}\n\nasync function confirmEmail(token) {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ token })\n    };\n\n    const response = await fetch(config.confirmEmail, requestOptions);\n    const validation = await handleResponse(response);\n\n    if (validation.hasOwnProperty('success')) {\n        return true;\n    } else {\n        return false\n    }\n}\n\nfunction updateUser(userObject) {\n    localStorage.setItem('currentUser', JSON.stringify(userObject));\n    currentUserSubject.next(userObject);\n}\n\nfunction logout() {\n    // Remove user from local storage to log user out\n    localStorage.removeItem('currentUser');\n    currentUserSubject.next(null);\n}\n","import { authHeader } from '../helpers';\nimport axios from 'axios';\n\nexport async function postApiData (url, values) {\n    try {\n        const response = await axios.post(url, values, { headers: authHeader() });\n        const data = response.data;\n        return data;\n    } catch (error) {\n        return error;\n    }\n}","import axios from 'axios';\nimport { accessToken } from '../helpers';\n\n// Automatically include token with fetcher\nexport const fetcher = (url) =>\n  axios\n    .get(url, { headers: { Authorization: \"Bearer \" + accessToken() } })\n    .then((res) => res.data);","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nimport { authenticationService } from '../../services';\r\n\r\nexport const PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route {...rest} render={props => {\r\n        const currentUser = authenticationService.currentUserValue;\r\n        if (!currentUser) {\r\n            // Not logged in so redirect to login page with the return url\r\n            return <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\r\n        }\r\n\r\n        // Authorised so return component\r\n        return <Component {...props} />\r\n    }} />\r\n)","import React from 'react';\nimport { withRouter, Link } from 'react-router-dom';\n\nimport './Auth.css';\n\nimport { useFormik } from 'formik';\nimport { Button, TextField } from '@material-ui/core';\nimport { authenticationService } from '../../services';\n\nimport { SnackbarContext } from '../../App';\n\nfunction Login(props) {\n\n    const { setSnackbar } = React.useContext(SnackbarContext);\n\n    if (authenticationService.currentUserValue) {\n        props.history.push('/app');\n    }\n\n\n    const formik = useFormik({\n        initialValues: {\n            username: '',\n            password: '',\n        },\n        onSubmit: (values) => {\n            authenticationService.login(values.username, values.password)\n                .then(\n                    (response) => {\n                        const { from } = props.location.state || { from: { pathname: \"/app\" } };\n                        props.history.push(from);\n\n                        setSnackbar({\n                            text: `Welcome, ${values.username}`,\n                            open: true,\n                            severity: 'success'\n                        })\n                    }\n                ).catch((error) => {\n                    setSnackbar({\n                        text: error || `An error occured.`,\n                        open: true,\n                        severity: 'error'\n                    })\n                });\n        }\n    });\n\n\n    return (\n        <div className=\"AuthForm\">\n            <form onSubmit={formik.handleSubmit}>\n                <TextField\n                    fullWidth\n                    id=\"username\"\n                    name=\"username\"\n                    label=\"Username\"\n                    value={formik.values.username}\n                    onChange={formik.handleChange}\n                    error={formik.touched.username && Boolean(formik.errors.username)}\n                />\n                <TextField\n                    fullWidth\n                    id=\"password\"\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    value={formik.values.password}\n                    onChange={formik.handleChange}\n                    error={formik.touched.password && Boolean(formik.errors.password)}\n                    helperText={formik.touched.password && formik.errors.password}\n                />\n                <Button className=\"SubmitButton\" color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n                    Submit\n                </Button>\n                <Button component={Link} to=\"/reset\" className=\"ResetPasswordButton\">\n                    Forgot password\n                </Button>\n                <Button component={Link} to=\"/register\">\n                    New account\n                </Button>\n            </form>\n        </div>\n    )\n}\n\nexport default withRouter(Login);","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport { authenticationService } from '../../services';\n\nimport { SnackbarContext } from '../../App';\n\nimport { Button } from '@material-ui/core';\n\nimport config from '../../config';\n\nfunction Logout(props) {\n    const { setSnackbar } = React.useContext(SnackbarContext);\n\n    const handleClick = () => {\n\n        setSnackbar({\n            text: `You have logged out.`,\n            open: true,\n            severity: 'success'\n        })\n\n        authenticationService.logout();\n        props.history.push(config.afterLogout);\n    }\n\n    return (\n        <Button variant=\"contained\" onClick={() => handleClick()}>\n            Logout\n        </Button>\n    )\n}\n\nexport default withRouter (Logout);","import React from 'react';\nimport { withRouter, useParams } from 'react-router-dom';\n\nimport { useFormik } from 'formik';\n\nimport { Button, TextField } from '@material-ui/core';\n\nimport './Auth.css';\n\nimport { SnackbarContext } from '../../App';\n\nimport config from '../../config';\n\nfunction ResetWithToken(props) {\n\n    const { setSnackbar } = React.useContext(SnackbarContext);\n\n    const { token } = useParams();\n\n    const formik = useFormik({\n        initialValues: {\n            password: '',\n        },\n        //validationSchema: validationSchema,\n        onSubmit: (values) => {\n            // Add in the token\n            values.token = token;\n\n            // Fetch the data\n            fetch(config.resetWithToken, {\n                method: 'POST',\n                body: JSON.stringify(values),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            })\n                .then(response => response.json())\n                .then(data => {\n                    if (data.hasOwnProperty('error')) {\n                        throw data.error;\n                    }\n                    setSnackbar({\n                        text: data.success,\n                        open: true,\n                        severity: 'success'\n                    })\n                    \n                    // Show the login screen\n                    props.history.push('/login');\n                })\n                .catch(function (error) {\n                    setSnackbar({\n                        text: error,\n                        open: true,\n                        severity: 'error'\n                    })\n                })\n        },\n    });\n\n    // Display a password reset form\n    return (\n        <div className=\"AuthForm\">\n            <form onSubmit={formik.handleSubmit}>\n                <TextField\n                    fullWidth\n                    id=\"password\"\n                    name=\"password\"\n                    label=\"New password\"\n                    type=\"password\"\n                    value={formik.values.password}\n                    onChange={formik.handleChange}\n                    error={formik.touched.password && Boolean(formik.errors.password)}\n                    helperText={formik.touched.password && formik.errors.password}\n                />\n                <Button variant=\"contained\" fullWidth type=\"submit\">\n                    Set new password\n                </Button>\n            </form>\n        </div>\n    )\n}\n\nexport default withRouter(ResetWithToken)","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport { useFormik } from 'formik';\n\nimport { Button, TextField } from '@material-ui/core';\n\nimport { SnackbarContext } from '../../App';\n\nfunction Reset(props) {\n\n    const { setSnackbar } = React.useContext(SnackbarContext);\n\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n        },\n        onSubmit: (values) => {\n            fetch('/auth/reset', {\n                method: 'POST',\n                body: JSON.stringify(values),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            })\n                .then(response => response.json())\n                .then(data => {\n                    if (data.hasOwnProperty('error')) {\n                        throw data.error;\n                    }\n                    \n                    setSnackbar({\n                        text: data.success,\n                        open: true,\n                        severity: 'success'\n                    })\n\n                    props.history.push('login');\n                    \n                })\n                .catch(function (error) {\n                    \n                    setSnackbar({\n                        text: error,\n                        open: true,\n                        severity: 'error'\n                    })\n\n                })\n        },\n    });\n\n    // Display an email form, to which reset email can be sent\n    return (\n        <div className=\"AuthForm\">\n            <form onSubmit={formik.handleSubmit}>\n                <TextField\n                    fullWidth\n                    id=\"email\"\n                    name=\"email\"\n                    label=\"Email\"\n                    type=\"email\"\n                    value={formik.values.email}\n                    onChange={formik.handleChange}\n                    error={formik.touched.email && Boolean(formik.errors.email)}\n                    helperText={formik.touched.email && formik.errors.email}\n                />\n\n                <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n                    Send password reset email\n                </Button>\n\n                <Button component={Link} to=\"/login\">\n                    Back to Login\n                </Button>\n            </form>\n        </div>\n    )\n}\n\nexport default withRouter(Reset)","import React from 'react';\nimport { withRouter, Link } from 'react-router-dom';\n\nimport './Auth.css';\n\nimport { useFormik } from 'formik';\nimport { Button, TextField } from '@material-ui/core';\nimport { authenticationService } from '../../services';\n\nimport { SnackbarContext } from '../../App';\n\nfunction SignUp(props) {\n\n    const { setSnackbar } = React.useContext(SnackbarContext);\n\n    if (authenticationService.currentUserValue) {\n        props.history.push('/');\n    }\n\n    // Async validation\n    const validate = async (values, props) => {\n        const validation = await authenticationService.validateRegistration(values.username, values.email);\n        \n        const errors = {};\n        \n        if (['admin', 'null', 'god'].includes(values.username)) {\n            errors.username = 'Please choose a different username';\n        }\n        if (validation.username_exists)\n            errors.username = 'This username is already taken';\n        if (validation.email_exists)\n            errors.email = 'This email is already registered';\n\n        Object.entries(errors).map(error => {\n            setSnackbar({\n                text: error.pop(),\n                open: true,\n                severity: 'warning'\n            })\n            return true\n        })\n        \n        return errors;\n    };\n\n\n    const formik = useFormik({\n        initialValues: {\n            username: '',\n            email: '',\n            password: '',\n        },\n        onSubmit: (values) => {\n            authenticationService.signUp(values.username, values.email, values.password)\n                .then(\n                    (user) => {\n                        props.history.push('/login');\n\n                        setSnackbar({\n                            text: `An email has been sent to ${values.email}. Please open it to continue.`,\n                            open: true,\n                            severity: 'success'\n                        })\n                    }\n                );\n        },\n        validate: validate,\n    });\n\n    return (\n        <div className=\"AuthForm\">\n            <form onSubmit={formik.handleSubmit}>\n                <TextField\n                    fullWidth\n                    id=\"username\"\n                    name=\"username\"\n                    label=\"Username\"\n                    value={formik.values.username}\n                    onChange={formik.handleChange}\n                    error={formik.touched.username && Boolean(formik.errors.username)}\n                />\n                <TextField\n                    fullWidth\n                    id=\"email\"\n                    name=\"email\"\n                    label=\"Email\"\n                    value={formik.values.email}\n                    onChange={formik.handleChange}\n                    error={formik.touched.email && Boolean(formik.errors.email)}\n                />\n                <TextField\n                    fullWidth\n                    id=\"password\"\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    value={formik.values.password}\n                    onChange={formik.handleChange}\n                    error={formik.touched.password && Boolean(formik.errors.password)}\n                    helperText={formik.touched.password && formik.errors.password}\n                />\n                <Button className=\"SubmitButton\" color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n                    Submit\n                </Button>\n                <Button component={Link} to=\"/login\" className=\"ResetPasswordButton\">\n                    Back to log-in\n                </Button>\n            </form>\n        </div>\n    )\n}\n\nexport default withRouter(SignUp);","import React from 'react';\nimport { withRouter, useParams } from 'react-router-dom';\n\nimport { authenticationService } from '../../services';\n\nimport { SnackbarContext } from '../../App';\n\nimport { css } from \"@emotion/core\";\nimport BounceLoader from \"react-spinners/BounceLoader\";\n\nfunction ConfirmEmail(props) {\n\n    const { setSnackbar } = React.useContext(SnackbarContext);\n\n    const { token } = useParams();\n     \n    authenticationService.confirmEmail(token)\n        .then((result) => {\n            const message = ( result ? `Your email has been confirmed. You can now log-in.` : `We could not confirm your email.`)\n            setSnackbar({\n                text: message,\n                open: true,\n                severity: ( result ? 'success' : 'error')\n            })  \n            props.history.push('/login');    \n        })\n\n    const bounceLoaderCss = css`display: block; margin: 0 auto;`;\n\n    return (\n        <BounceLoader color='#F19820' loading={true} css={bounceLoaderCss} size={100} />\n    )\n}\n\nexport default withRouter(ConfirmEmail);","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport './OnboardingLoading.css'\nimport 'animate.css'\n\nimport Goo from 'gooey-react'\n\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Button from '@material-ui/core/Button';\n\nfunction OnboardingLoading(props) {\n\n    const [loadingDone, setLoadingDone] = React.useState(false);\n    \n    const [progress, setProgress] = React.useState(0);\n    const [text, setText] = React.useState('')\n\n    const titles = [\n        'Myo is AI creativity in your pocket',\n        `Right now, we're analysing the experience of 35,892 users`,\n        'To make sure your plan fits you perfectly',\n        'Your personalised creativity plan is almost ready. Are you?'\n    ]\n\n    const getText = (percent) => {\n        const titleIndex = Math.floor(percent * titles.length / 100)\n        return titles[titleIndex]\n    }\n    \n    React.useEffect(() => {\n        const timer = setInterval(() => {\n            setProgress((oldProgress) => {\n                if (oldProgress === 100) {\n                    setLoadingDone(true)\n                }\n                const diff = Math.random() * 6;\n                const newProgress =  Math.min(oldProgress + diff, 100);\n                \n                if (newProgress > 95) {\n                    setLoadingDone(true)\n                }\n                \n                setText(getText(newProgress));\n                return newProgress;\n            });\n            }, 500);\n\n            return () => {\n                clearInterval(timer);\n            };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    if (loadingDone) {\n        return (\n            <div>\n                <h2 className=\"animate__animated animate__backInDown\">Your custom training plan is ready</h2>\n                <Button \n                    style={{ animation: 'pulse 3s ease infinite', 'margin': '20px 0' }} \n                    className=\"StartButton animate__animated animate__fadeIn animate__delay-1s\"\n                    variant=\"contained\" size=\"large\" color=\"primary\" \n                    onClick={()=> props.onComplete()}\n                >\n                Let's go\n                </Button>\n            </div>\n        )\n    }\n\n    return (\n        <div style={{'margin': '0 20px'}}>\n            <h3 className=\"animate__animated animate__backInDown animate__delay-1s\" >{text}</h3>\n            <LinearProgress className=\"animate__animated animate__fadeIn\" variant=\"determinate\" value={progress} />\n            \n            <Goo className=\"animate__animated animate__fadeIn goo\" intensity=\"strong\"> \n                <svg width=\"500\" height=\"500\">\n                    <circle cx=\"29%\" cy=\"50%\" fill=\"#FFB339\" r=\"49\" style={{ animation: 'right 3s ease infinite' }} />\n                    <circle cx=\"44%\" cy=\"34%\" fill=\"#C6302C\" r=\"23\" style={{ animation: 'left 7s linear infinite' }} />\n                    <circle cx=\"34%\" cy=\"74%\" fill=\"#F19821\" r=\"59\" style={{ animation: 'left 4s linear infinite' }} />\n                    <circle cx=\"56%\" cy=\"59%\" fill=\"mediumorchid\" r=\"46\" style={{ animation: 'right 5s ease infinite' }} />\n                </svg>\n            </Goo>\n        </div>\n    )\n}\n\nexport default withRouter(OnboardingLoading);","import React from 'react';\nimport './OnboardingHero.css';\n\nimport Button from '@material-ui/core/Button';\nimport EmojiObjectsIcon from '@material-ui/icons/EmojiObjects';\n\nexport default function OnboardingHero(props) {\n\n    return (\n        <div className=\"OnboardingHero\" style={{ backgroundImage: `url(\"/activities/20/Thumbnail.jpeg\"` }}>\n            <div className=\"UserHeroContent\" style={{ 'background': `linear-gradient(90deg, rgba(241,152,32,1) 40%, rgba(255,255,255,0) 90%)` }}>\n                \n                <h2>Spark is a totally custom creativity journey, designed for you.</h2>\n                <p><EmojiObjectsIcon className=\"Icon\" /> To get started, we need to know a little bit more about you.</p>\n                <Button className=\"OnboardingHeroButton\" onClick={props.onClick}>Next</Button>\n                \n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport './UserOnboarding.css'\nimport 'animate.css'\n\nimport useSWR from 'swr'\nimport { css } from \"@emotion/core\";\nimport BounceLoader from \"react-spinners/BounceLoader\";\n\nimport { List, ListItem, ListItemText, Stepper, Step, StepLabel, Button } from '@material-ui/core';\n\nimport OnboardingLoading from './OnboardingLoading';\nimport OnboardingHero from './OnboardingHero';\n\nimport config from '../../config';\n\nimport { postApiData } from '../../services/api.service';\nimport { SnackbarContext } from '../../App';\n\nfunction UserOnboarding(props) {\n\n    const { setSnackbar } = React.useContext(SnackbarContext);\n\n    // Visual state of onboarding\n    const [showIntroHero, setShowIntroHero] = React.useState(true)\n    const [questionsDone, setQuestionsDone] = React.useState(false)\n\n    // Store the steps in state\n    const [activeStep, setActiveStep] = React.useState(0);\n    const steps = config.onboardingSteps;\n\n    // Store questions in state\n    const questions = config.onboardingQuestions;\n    const [currentQuestionIndex, setCurrentQuestionIndex] = React.useState(0);\n    const [selectedAnswerIndices, setSelectedAnswerIndices] = React.useState([]);\n    const [questionAnswerObject, setQuestionAnswerObject] = React.useState([]);\n\n    // If the current question index changes, save the answer\n    React.useEffect(() => {\n        if (!selectedAnswerIndices.length) return\n\n        const newQuestionAnswerObject = {\n            questionIndex: currentQuestionIndex,\n            question: questions[currentQuestionIndex].question,\n            answer: selectedAnswerIndices\n        }\n\n        setQuestionAnswerObject ([...questionAnswerObject, newQuestionAnswerObject])\n        setSelectedAnswerIndices([]);\n\n        if (questions[currentQuestionIndex].type !== 'multiple') goToNextQuestion();\n    \n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [selectedAnswerIndices]);\n\n    const goToNextQuestion = () => {\n        const nextQuestion = currentQuestionIndex + 1;\n        const nextPercentage = nextQuestion * 100 / questions.length;\n        const nextStep = Math.ceil(nextPercentage * steps.length / 100);\n        if (currentQuestionIndex < (questions.length - 1)) {\n            setCurrentQuestionIndex(nextQuestion);\n            setSelectedAnswerIndices([]);\n            setActiveStep (nextStep);\n        } else {\n            handleSaveOnboarding(JSON.stringify(questionAnswerObject))\n            setQuestionsDone(true)\n        }\n    }\n\n    const handleQuestionClick = (index) => {\n        setSelectedAnswerIndices([...selectedAnswerIndices, index]);\n    };\n\n    const handleSaveOnboarding = (json) => {\n        postApiData('/onboarding/save', {onboarding_json: json}).then(\n          response => setSnackbar({\n            text: response.success || response.error,\n            open: (response.error),\n            severity: (response.success ? 'success' : 'error')\n          })\n        )\n      };\n\n    // Checks the current question index and returns a list item\n    const renderQuestion = () => {\n        return (\n            <List component=\"nav\" aria-label=\"Onboarding answers\">\n            {questions[currentQuestionIndex].answers.map((answer, i) =>\n                <ListItem\n                    selected={selectedAnswerIndices.includes(i)}\n                    onClick={() => handleQuestionClick(i)}\n                    button key={i}\n                >\n                    <ListItemText align=\"center\" primary={answer} />\n                </ListItem>\n            )}\n            {questions[currentQuestionIndex].type === 'multiple' ? \n                <Button \n                    variant=\"contained\" \n                    color=\"primary\" \n                    onClick={goToNextQuestion}\n                    disabled={!selectedAnswerIndices.length}>Next</Button>\n                : null\n            }\n            </List>\n        )\n    }\n\n    // ☑️ Check and redirect if user has already done onboarding\n    const bounceLoaderCss = css`display: block; margin: 0 auto;`;\n    const { data } = useSWR(config.onboardingStatusUrl)\n    if (!data) return <BounceLoader color='#F19820' loading={true} css={bounceLoaderCss} size={100} />\n    if (data.hasOwnProperty('success')) props.onComplete();\n    \n    // At the start, show the onboarding intro\n    if (showIntroHero) return <OnboardingHero onClick={() => setShowIntroHero(false)} />\n    \n    // If the questions are done, show the post-loading screen\n    if (questionsDone) return <OnboardingLoading onComplete={props.onComplete}/>\n\n    return (\n        <div className=\"UserOnboarding\">\n            <Stepper activeStep={activeStep} alternativeLabel style={{'backgroundColor': 'transparent'}}>\n                {steps.map((label) => (\n                <Step key={label}>\n                    <StepLabel>{label}</StepLabel>\n                </Step>\n                ))}\n            </Stepper>\n            <h2>{questions[currentQuestionIndex].question}</h2>\n\n            {renderQuestion(questions[currentQuestionIndex])}\n        </div>\n    )\n}\n\nexport default withRouter(UserOnboarding);","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Navbar.css';\n\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\n\nimport HomeIcon from '@material-ui/icons/Home';\nimport EmojiObjectsIcon from '@material-ui/icons/EmojiObjects';\nimport BrushIcon from '@material-ui/icons/Brush';\n\nimport { Device } from '@capacitor/device';\n\nexport default function SimpleBottomNavigation() {\n    const [value, setValue] = React.useState(0);\n\n    const [devicePlatform, setDevicePlatform] = React.useState('web')\n    const getDeviceInfo = async () => {\n      const info = await Device.getInfo();\n      setDevicePlatform(info.platform)\n    };\n    getDeviceInfo()\n  \n    return (\n      <BottomNavigation\n        value={value}\n        onChange={(event, newValue) => {\n          setValue(newValue);\n        }}\n        showLabels\n        className=\"navbar\"\n        style={{\n          paddingBottom : devicePlatform === 'web' ? '0' : '20px',\n          height: devicePlatform === 'web' ? 'auto' : '80px'\n          }}\n      >\n        <BottomNavigationAction component={Link} to=\"/app\" id=\"HomeNavbarIcon\" label=\"Home\" icon={<HomeIcon />} />\n        <BottomNavigationAction component={Link} to=\"/spark\" id=\"SparkNavbarIcon\" label=\"Spark\" icon={<EmojiObjectsIcon />} />\n        <BottomNavigationAction component={Link} to=\"/create\" id=\"CreateNavbarIcon\" label=\"Create\" icon={<BrushIcon />} />\n        \n      </BottomNavigation>\n    );\n  }\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Link } from '@material-ui/core';\n\nimport './TopBar.css';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\n\nimport { Device } from '@capacitor/device';\n\nexport default function TopBar(props) {\n\n  const [devicePlatform, setDevicePlatform] = React.useState('web')\n  const getDeviceInfo = async () => {\n    const info = await Device.getInfo();\n    setDevicePlatform(info.platform)\n  };\n  getDeviceInfo()\n\n  return (\n    <div className=\"TopBar\" style={{\n        paddingTop : devicePlatform === 'web' ? '0' : '35px',\n        height: devicePlatform === 'web' ? '75px' : '75px'\n        }}\n      >\n      <Link component={RouterLink} to=\"/\" className=\"AccountLink\">\n        <img className=\"MyoLogo\" src=\"/assets/logo.png\" alt=\"Myo app logo\" />\n      </Link>\n      <img className=\"MyoText\" src=\"/assets/myo-text.png\" alt=\"Myo app logo\" />\n      <Link component={RouterLink} to=\"/user\" className=\"AccountLink\">\n        <AccountCircleIcon fontSize=\"large\" className=\"AccountCircle\" />\n      </Link>\n    </div>\n  )\n}\n\n","import React from 'react';\nimport './PhotoDividerComponent.css';\n\nexport default function PhotoDividerComponent(props) {\n    return (\n        <div className=\"PhotoDividerComponent\" style={{backgroundImage: `url(\"${props.thumbnail}\"`}}></div>\n    )\n}","/* eslint-disable jsx-a11y/alt-text */\nimport React from 'react'\nimport { withRouter, Link as RouterLink } from 'react-router-dom';\n\nimport PhotoDividerComponent from '../PhotoDivider/PhotoDividerComponent';\n\nimport useSWR from 'swr'\nimport { css } from \"@emotion/core\";\nimport BounceLoader from \"react-spinners/BounceLoader\";\n\nimport config from '../../config';\n\nimport Button from '@material-ui/core/Button';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\n\nimport { Link, Element } from 'react-scroll'\n\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport BrushIcon from '@material-ui/icons/Brush';\nimport ColorLensIcon from '@material-ui/icons/ColorLens';\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\n\nimport { authenticationService } from '../../services';\n\nimport './Home.css';\n\nfunction Home(props) {\n\n  if (authenticationService.currentUserValue) {\n    props.history.push('/app');\n  }\n\n  const bounceLoaderCss = css`display: block; margin: 0 auto;`;\n  const { data } = useSWR(config.activitiesListUrl)\n  if (!data) return <BounceLoader color='#F19820' loading={true} css={bounceLoaderCss} size={100} />\n\n  const getRandomThumbnail = () => {\n    const activity = data.activities[Math.floor(Math.random() * data.activities.length)];\n    return `/activities/${activity.activityId}/${activity.thumbnail}`\n\n  }\n\n  return (\n    <>\n      <h1>Myo</h1>\n      <p>AI-powered creativity tutor in your pocket</p>\n      <img src=\"/assets/myo-mockup.png\" alt=\"Mockup of Myo on Mac, iPad and iPhone\" style={{width: '100%'}}/>\n      <Button className=\"GoToAppButton\" size=\"large\" variant=\"contained\" color=\"primary\" component={RouterLink} to=\"/app\">\n        Go to App\n        <ChevronRightIcon />\n      </Button>\n      <Link\n        activeClass=\"active\" to=\"about\" spy={true} smooth={true} offset={-110} duration={500} style={{margin: '100px', display: 'block'}} >\n        <Button size=\"Large\" variant=\"contained\" endIcon={<KeyboardArrowDownIcon />}> Learn more </Button>\n      </Link>\n      \n      <PhotoDividerComponent thumbnail={getRandomThumbnail()} style={{margin: '200px', display: 'block'}}/>\n      \n      <Element name=\"about\" className=\"element\">\n        <div class=\"secondary-text\">\n          <h2>Powerful tutor, fun exercises</h2>\n          <p>Myo helps you improve your creativity, with daily exercises.</p>\n          <div class=\"icon-grid\">\n            <div class=\"icon-grid-item\">\n              <AccountCircleIcon className=\"icon\" />\n              <p>Custom plan made uniquely for you</p>\n            </div>\n            <div class=\"icon-grid-item\">\n              <BrushIcon className=\"icon\" />\n              <p>Get better at writing, painting, and drawing</p>\n            </div>\n            <div class=\"icon-grid-item\">\n              <ColorLensIcon className=\"icon\" />\n              <p>Future-proof your career with transferrable skills</p>\n            </div>\n            <div class=\"icon-grid-item\">\n              <EmojiEmotionsIcon className=\"icon\" />\n              <p>Boost your mental health with colourful exercises</p>\n            </div>\n          </div>\n        </div>\n      </Element>\n\n      <PhotoDividerComponent thumbnail={getRandomThumbnail()} style={{margin: '200px', display: 'block'}}/>\n\n      <Element name=\"who\" className=\"element\">\n        <div class=\"secondary-text\">\n          <h2>What is Myo, and who is it for?</h2>\n          <p style={{padding: '0 50px'}}>It's a app for learning how to draw, write, and paint. It’s for anyone who is interested in quickly and dramatically improving their creativity.</p>\n        </div>\n      </Element>\n\n\n    </>\n  )\n}\n\nexport default withRouter(Home)","import React, { Suspense } from 'react';\nimport './SplashScreen.css';\n\nimport 'animate.css'\n\nexport default function SplashScreen() {\n  return (\n    <div className=\"SplashScreen\">\n      <div className=\"SplashScreenWrapper\">\n        <Suspense>\n          <img src=\"/assets/myo-text-icon.png\" alt=\"Myo icon\" />\n          <p className=\"animate__animated animate__bounceIn\">Spark wonder</p>\n        </Suspense>\n      </div>\n    </div>\n  )\n}\n","import React from 'react';\nimport './UserHero.css';\nimport { withRouter } from 'react-router-dom';\n\nimport useSWR from 'swr'\nimport { css } from \"@emotion/core\";\nimport BounceLoader from \"react-spinners/BounceLoader\";\n\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport LocalActivityIcon from '@material-ui/icons/LocalActivity';\nimport Button from '@material-ui/core/Button';\n\nimport Logout from '../Auth/Logout';\nimport config from '../../config';\n\nimport { authenticationService } from '../../services';\nimport jwt_decode from \"jwt-decode\";\n\nexport function UserHero(props) {\n\n    const { data: userProfile } = useSWR(config.userProfileUrl)\n    const { data: activities } = useSWR(config.activitiesListUrl)\n    \n    const bounceLoaderCss = css`display: block; margin: 0 auto;`;\n    if (!userProfile) return <BounceLoader color={\"#F19820\"} loading={true} css={bounceLoaderCss} size={100} />\n    if (!activities) return <BounceLoader color={\"#F19820\"} loading={true} css={bounceLoaderCss} size={100} />\n    \n    const activity = activities.activities[Math.floor(Math.random()*activities.activities.length)];\n    const thumbnail = activities ? `/activities/${activity.activityId}/${activity.thumbnail}` : ''\n\n    const currentUser = authenticationService.currentUserValue;\n    const decodedToken = jwt_decode(currentUser.access_token)\n    const isAdmin = decodedToken.admin\n\n    const redirectToDashboard = () => {props.history.push('dashboard');}\n\n    return (\n        <div className=\"UserHero\" style={{ backgroundImage: `url(\"${thumbnail}\"` }}>\n            <div className=\"UserHeroContent\" style={{ 'background': `linear-gradient(90deg, rgba(241,152,32,1) 40%, rgba(255,255,255,0) 90%)` }}>\n                \n                {props.maximised ? \n                    <>\n                        <Logout className=\"UserHeroLink\" />\n                        {isAdmin ? \n                            <Button color=\"primary\" variant=\"contained\" onClick={redirectToDashboard}>Dashboard</Button>\n                        : null\n                        }\n                    </>\n                : \n                    null \n                }\n\n                <h1>{userProfile.username}</h1>\n                \n                {props.maximised ?\n                <>\n                    <p><AccountCircleIcon className=\"Icon\" /> Member since:</p>\n                    <p className=\"caption\">{userProfile.registered}</p>\n\n                    <p><LocalActivityIcon className=\"Icon\" /> Total activities:</p>\n                    <p className=\"caption\">52</p>\n                    <span className=\"stamp is-nope\">{isAdmin ? 'Admin' : 'Member' }</span>\n                </>\n                : \n                    null\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default withRouter(UserHero);","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nconst useStyles = makeStyles({\n    root: {\n        flexGrow: 1,\n    },\n});\n\nexport default function CenteredTabs(props) {\n    const classes = useStyles();\n\n    const handleChange = (event, newValue) => {\n        props.setCurrentTab(newValue);\n    };\n\n    return (\n        <Paper className={classes.root}>\n            <Tabs\n                value={props.currentTab}\n                onChange={handleChange}\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                centered\n            >\n                <Tab label=\"My account\" />\n                <Tab label=\"Awards\" />\n            </Tabs>\n        </Paper>\n    );\n}","import React from 'react';\n\nimport './UserAwards.css';\n\nexport default function UserAwards(props) {\n\n    const medalUrlPrefix = '/assets/medals/'\n    const awards = [\n        {\n            type: 'Activities',\n            awards: [\n                {\n                    title: 'Completed your first activity',\n                    medal: 'medal17.svg'\n                },\n                {\n                    title: 'Completed 5 activities',\n                    medal: 'medal13.svg'\n                },\n                {\n                    title: 'Completed 10 activities',\n                    medal: 'medal14.svg'\n                },\n                {\n                    title: 'Completed your first Spark plan',\n                    medal: 'medal11.svg'\n                },\n                {\n                    title: 'Completed all activities 🤩',\n                    medal: 'medal16.svg'\n                },\n            ]\n        },\n        {\n            type: 'Learning',\n            awards: [\n                {\n                    title: 'Completed one activity of each type',\n                    medal: 'medal25.svg'\n                },\n                {\n                    title: 'Completed an activity two times',\n                    medal: 'medal26.svg'\n                },\n                {\n                    title: 'Completed 2 activities in a day',\n                    medal: 'medal27.svg'\n                },\n                {\n                    title: 'Completed 5 activities in one day',\n                    medal: 'medal24.svg'\n                },\n            ]\n        },\n        {\n            type: 'Myo',\n            awards: [\n                {\n                    title: 'Member for a week',\n                    medal: 'medal.svg'\n                },\n                {\n                    title: 'Member for a month',\n                    medal: 'medal2.svg'\n                },\n                {\n                    title: 'Member for 3 months',\n                    medal: 'medal3.svg'\n                },\n                {\n                    title: 'Member for a year!!',\n                    medal: 'medal4.svg'\n                },\n            ]\n        },\n    ]\n\n    return (\n        <>\n            {awards.map((award, i) => {\n                return (\n                <>\n                    <h3 style={{margin: '20px'}}>{award.type}</h3>\n                    {award.awards.map((awardObject, i) =>\n                    (\n                        <div class=\"AwardDiv\">\n                            <img className={`Award ${Math.random() > 0.3 ? '' : 'Disabled'}`} key={i} src={`${medalUrlPrefix}${awardObject.medal}`} alt=\"Graphic of an award\" />\n                            <p>{awardObject.title}</p>\n                        </div>\n                    )\n                    )}\n                </>\n                )\n            }\n\n            )}\n\n\n        </>\n    )\n}","import React from 'react';\nimport './UserMenu.css';\n\nimport UserHero from './UserHero';\nimport UserTabs from './UserTabs';\nimport UserAwards from './UserAwards';\n\nexport default function UserMenu() {\n\n    const [currentTab, setCurrentTab] = React.useState(0)\n    const [currentTabContent, setCurrentTabContent] = React.useState(null)\n    \n    React.useEffect(() => {\n        const tabContent = () => {\n            switch (currentTab) {\n                case 0:\n                    return <UserHero maximised={true}/>\n                case 1: \n                    return <UserAwards />\n                default:\n                    return <UserHero maximised={true} />\n            }\n        }\n        setCurrentTabContent (tabContent)\n    }, [currentTab])\n\n    return (\n        <div className=\"UserMenu\">\n            <UserTabs currentTab={currentTab} setCurrentTab={setCurrentTab}/>\n            {currentTabContent}\n        </div>\n    )\n}","import React from 'react';\nimport './CardComponent.css'\n\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Link } from '@material-ui/core';\n\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\n\nfunction CardComponent(props) {\n    \n    const to = (activityId) => props.skipIntro ? `/activity/${activityId}/go` : `/activity/${activityId}`\n    \n    return (\n        <div className=\"cardComponent\">\n            {props.activities.map((card, i) => (\n                \n                \n                <div className=\"card\" key={i} style={{margin: props.margin}}>\n                    \n                    <div className=\"card-image\">\n                        <img src={`/activities/${card.activityId}/${card.thumbnail}`} alt=\"Header decoration\" />\n                    </div>\n                    \n                    <div className=\"content\">\n                        <h4>{card.title}</h4>\n                        <p>{card.description}</p>\n                    </div>\n                    \n                    <Link component={RouterLink}\n                        to={{pathname: to(card.activityId)}}\n                        className=\"read-more\"\n                        style={{ textDecoration: 'none' }}>\n                       <span>Start activity <ChevronRightIcon className=\"chevron-right\" /></span>\n                    </Link>\n\n                </div>\n            ))}\n        </div>\n    )\n}\n\nexport default CardComponent;","import React from 'react';\n\nimport UserOnboarding from 'react-user-onboarding'\nimport 'react-user-onboarding/dist/index.css'\n\nclass Onboarding extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isVisible: (localStorage.getItem('onboardingComplete') === null)\n        }\n\n        this.story = [\n            {\n                component: 'modal',\n                intro: true,\n                children: (\n                    <p>Hey there! Welcome to Myo. As this is your first time, could we show you around?</p>\n                ),\n                className: 'introModal'\n            },\n            {\n                component: 'speech-bubble',\n                attachToId: 'HomeNavbarIcon',\n                children: (\n                    <>\n                        <p>This is the <strong>Home</strong> tab, where you can view all our activities.</p> \n                        <p><strong>Spark</strong> is our custom AI creative journey.</p>\n                        <p>In the <strong>Create</strong> section, you'll find our exercises, organised by theme.</p>\n                    </>\n                )\n            },\n            {\n                component: 'modal',\n                intro: false,\n                children: (\n                    <p>Spark is an AI powered creativity tutor. Once you've answered a few questions, we will design a <strong>custom</strong> creativity journey for you.</p>\n                )\n            },\n            {\n                component: 'modal',\n                intro: false,\n                children: (\n                    <p>We regularly add more exercises. Good luck with your creativity journey!</p>\n                )\n            }\n        ]\n    }\n\n    handleClose = () => {\n        localStorage.setItem('onboardingComplete', true);\n        this.setState({ isVisible: false })\n    }\n\n    render() {\n        return (\n            <UserOnboarding style={{color: 'black'}}\n                story={this.story}\n                isVisible={this.state.isVisible}\n                onClose={this.handleClose}\n            />\n        )\n    }\n}\n\nexport default Onboarding;","import React from 'react';\nimport './Hero.css';\n\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Link } from '@material-ui/core';\n\nexport default function Hero(props) {\n\n    const activity = props.activities[Math.floor(Math.random()*props.activities.length)];\n\n    const thumbnail = `/activities/${activity.activityId}/${activity.thumbnail}`\n    const pathname = `/activity/${activity.activityId}`\n\n    return (\n        <div className=\"Hero\" style={{ backgroundImage: `url(\"${thumbnail}\"`}}>\n            <div className=\"HeroContent\" style={{'background': `linear-gradient(90deg, rgba(241,152,32,1) 35%, rgba(255,255,255,0) 64%)`}}>\n                <h1>{activity.title}</h1>\n                <p>{activity.description}</p>\n\n                <Link component={RouterLink}\n                    to={{\n                        pathname: pathname,\n                        state: { activityId: activity.activityId }\n                    }}\n                    className=\"HeroLink\"\n                    style={{ textDecoration: 'none' }}>\n                    <button className=\"HeroButton\" >Start now</button>\n                </Link>\n\n            </div>\n        </div>\n    )\n}","import React from 'react';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Link } from '@material-ui/core';\n\nimport './ActivityAvatarList.css';\n\nexport default function ActivityAvatarList(props) {\n\n    const getThumbnail = (thumbnail, itemId) => `/activities/${itemId}/${thumbnail}`\n\n    return (\n        <Grid item>\n            <List dense={false}>\n                {props.activities.map((activity, i) => (\n                    <Link \n                        key={i} \n                        component={RouterLink}\n                        to={{ pathname: `/activity/${activity.activityId}` }}\n                        style={{ textDecoration: 'none', color: '#333' }}\n                    >\n                        <ListItem className=\"ListItem\" >\n                            <ListItemAvatar>\n                                <Avatar>\n                                    <img src={getThumbnail(activity.thumbnail, activity.activityId)} alt=\"Activity illustration\" />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={activity.title}\n                                secondary={activity.description}\n                            />\n                            <ListItemSecondaryAction>\n                                <IconButton edge=\"end\">\n                                    <NavigateNextIcon />\n                                </IconButton>\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                        \n                        <Divider variant=\"inset\" component=\"li\" />\n                    </Link>\n                ))}\n            </List>\n        </Grid>\n    );\n}\n","import React from 'react';\nimport './HeroList.css';\n\nimport ActivityAvatarList from './ActivityAvatarList';\n\nexport default function HeroList(props) {\n    \n    // Split the array in half\n    const half = Math.ceil(props.activities.length / 2);    \n    const firstHalf = props.activities.splice(0, half)\n    const secondHalf = props.activities.splice(-half)\n\n    return (\n        <div className=\"HeroList\">\n            <h1>{props.title}</h1>\n            <div className=\"HeroListContent\">\n                <ActivityAvatarList className=\"ActivityAvatarList\" activities={firstHalf} />\n                <ActivityAvatarList className=\"ActivityAvatarList\" activities={secondHalf} />\n            </div>\n        </div>\n    )\n}","import React from \"react\"\nimport useSWR from 'swr'\nimport './ViewActivitiesComponent.css'\n\nimport { css } from \"@emotion/core\";\nimport BounceLoader from \"react-spinners/BounceLoader\";\n\nimport CardComponent from '../Card/CardComponent';\nimport Onboarding from '../Onboarding/Onboarding';\nimport Hero from '../Hero/Hero';\nimport HeroList from '../HeroList/HeroList';\n\nimport config from '../../config';\n\nexport default function ViewActivitiesComponent() {\n\n    const bounceLoaderCss = css`display: block; margin: 0 auto;`;\n\n    const { data } = useSWR(config.activitiesListUrl)\n\n    if (!data) return <BounceLoader color='#F19820' loading={true} css={bounceLoaderCss} size={100} />\n    \n    var activities;\n    const setActivities = () => {\n        activities=[...data.activities];\n    }\n    setActivities();\n\n\n    // Function to remove from the main array ${count} amount of items\n    const getRandomActivities = (count=false) => {\n        if (activities.length < 1) {setActivities()}\n        if (activities.length < count) {setActivities()}\n\n        if (!count) {count = activities.length}\n        return [...Array(count)].map(() => activities.splice(Math.floor(Math.random() * activities.length), 1)[0]);\n    }\n    \n    return (\n        <div className=\"ViewActivitiesComponent\">\n            <Onboarding />\n            <Hero activities={getRandomActivities(1)}/>\n            <HeroList activities={getRandomActivities(4)} title=\"Activities we love right now\"/>\n            <CardComponent activities={getRandomActivities(3)} />\n            <Hero activities={getRandomActivities(1)}/>\n            <HeroList activities={getRandomActivities(4)} title=\"Trending this week\"/>\n            <CardComponent activities={getRandomActivities(6)} />\n            <Hero activities={getRandomActivities(1)}/>\n            <CardComponent activities={getRandomActivities(3)} />\n        </div>\n    )\n}","import React from \"react\";\nimport { Button } from '@material-ui/core';\n\nimport './ActivityIntroduction.css';\n\nexport default function ActivityIntroduction(props) {\n    return (\n        <div className=\"ActivityIntroduction\">\n            {(props.activity.thumbnail.split('.').pop() === 'mp4') ? (\n                <video className=\"ActivityVideo\" autoPlay muted loop playsInline controls >\n                    <source src={`/activities/${props.activityId}/${props.activity.thumbnail}`} type=\"video/mp4\" />\n                </video>\n            ) : (\n                <img src={'/activities/' + (props.activityId) + '/' + props.activity.thumbnail} alt=\"Header decoration\" />\n            )}\n            <h1>{props.activity.title}</h1>\n            <p dangerouslySetInnerHTML={{ __html: props.activity.description }}></p>\n            <Button variant=\"contained\" color=\"primary\" onClick={props.handleStartActivity}>\n                I'm ready\n                </Button>\n        </div>\n    )\n}\n","import React from 'react';\n\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: 150 + theme.spacing(3) * 2\n    },\n    margin: {\n        height: theme.spacing(3),\n    },\n}));\n\nconst iOSBoxShadow =\n    '0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.13),0 0 0 1px rgba(0,0,0,0.02)';\n\nconst marks = [\n    {\n        value: 0,\n        label: '😟'\n    },\n    {\n        value: 50,\n        label: '😌'\n    },\n    {\n        value: 100,\n        label: '🧑‍🎨'\n    },\n];\n\nconst IOSSlider = withStyles({\n    root: {\n        color: '#F19820',\n        height: 2,\n        padding: '15px 0',\n    },\n    thumb: {\n        height: 28,\n        width: 28,\n        backgroundColor: '#fff',\n        boxShadow: iOSBoxShadow,\n        marginTop: -14,\n        marginLeft: -14,\n        '&:focus, &:hover, &$active': {\n            boxShadow: '0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.3),0 0 0 1px rgba(0,0,0,0.02)',\n            // Reset on touch devices, it doesn't add specificity\n            '@media (hover: none)': {\n                boxShadow: iOSBoxShadow,\n            },\n        },\n    },\n    active: {},\n    valueLabel: {\n        left: 'calc(-50% + 12px)',\n        top: -22,\n        '& *': {\n            background: 'transparent',\n            color: '#000',\n        },\n    },\n    track: {\n        height: 2,\n    },\n    rail: {\n        height: 2,\n        opacity: 0.5,\n        backgroundColor: '#bfbfbf',\n    },\n    mark: {\n        backgroundColor: '#bfbfbf',\n        height: 8,\n        width: 1,\n        marginTop: -3,\n    },\n    markActive: {\n        opacity: 1,\n        backgroundColor: '#F19820',\n    },\n})(Slider);\n \nexport default function FeedbackSlider(props) {\n    const { value, onChange} = props;\n    \n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <IOSSlider \n                aria-label=\"How did you feel slider\" \n                defaultValue={75} \n                marks={marks} \n                value={value}\n                onChange={onChange}\n                valueLabelDisplay=\"off\" />\n        </div>\n    );\n}\n","import React from 'react';\n\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Link, Button, TextField } from '@material-ui/core';\n\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\n\nimport Rate from 'rc-rate';\nimport 'rc-rate/assets/index.css';\n\nimport FeedbackSlider from './Slider';\n\nimport './ReviewDialog.css';\n\nexport default function ReviewDialog(props) {\n\n    const [feelingSliderValue, setFeelingSliderValue] = React.useState(70);\n    const [sliderValue, setSliderValue] = React.useState(0);\n    const [userFeedback, setUserFeedback] = React.useState('');\n\n    const handleSliderChange = (event, value) => setFeelingSliderValue(value)\n\n    const gatherData = () => {\n        const feedback = \n            {\n                feeling: feelingSliderValue,\n                slider: sliderValue,\n                userFeedback: userFeedback\n            }\n\n        props.onSubmit(feedback)\n    }\n\n    const submitWithoutData = () => {\n        const feedback = {}\n        props.onSubmit(feedback)\n    }\n\n    return (\n        <Dialog  onClose={submitWithoutData} open={props.open} disableEnforceFocus>\n            <DialogTitle align=\"center\" id=\"dialog-title\">Congratulations! 🎉</DialogTitle>\n            <DialogContent align=\"center\"  className=\"ReviewDialogContent\">\n                <DialogContentText>\n                    How did you feel?\n                        <FeedbackSlider value={feelingSliderValue} onChange={handleSliderChange}/>\n                </DialogContentText>\n                <DialogContentText>\n                    How would you rate this activity?\n                        <br />\n                    <Rate value={sliderValue} onChange={setSliderValue}/>\n                </DialogContentText>\n                <DialogContentText>\n\n                    <TextField\n                        fullWidth\n                        align=\"center\" \n                        id=\"feedbackText\"\n                        multiline\n                        name=\"feedbackText\"\n                        label=\"Any notes to yourself?\"\n                        value={userFeedback}\n                        onChange={event => setUserFeedback(event.target.value)}\n                    />\n                </DialogContentText>\n\n            </DialogContent>\n            <DialogActions>\n                <Link component={RouterLink} to={{ pathname: \"/\" }} style={{ textDecoration: 'none' }}>\n                    <Button onClick={submitWithoutData}>\n                        Skip\n                    </Button>\n                </Link>\n                <Link component={RouterLink} to={{ pathname: \"/\" }} style={{ textDecoration: 'none' }}>\n                    <Button variant=\"contained\" onClick={gatherData} color=\"primary\" type=\"submit\">\n                    Done\n                    </Button>\n                </Link>\n            </DialogActions>\n        </Dialog>\n    )\n}","import React, { useState } from \"react\";\nimport { Button } from '@material-ui/core';\n\nimport './ActivityCarousel.css';\n\n// Import Swiper React components\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport SwiperCore, { Navigation, Pagination, A11y } from 'swiper';\nimport 'swiper/swiper.scss';\nimport 'swiper/components/navigation/navigation.scss';\nimport 'swiper/components/scrollbar/scrollbar.scss';\nimport 'swiper/components/pagination/pagination.scss';\n\nimport ReviewDialog from './ReviewDialog';\n\nimport { postApiData } from '../../services/api.service';\nimport config from '../../config';\n\nSwiperCore.use([Navigation, Pagination, A11y]);\n\nexport default function ActivityCarousel(props) {\n\n    const [reviewDialogOpen, setReviewDialogOpen] = React.useState(false)\n\n    const [activityCompleted, setActivityCompleted] = useState(false)\n    const finishedActivity = () => setActivityCompleted(true)\n\n    // API handler for submitting feedback\n    const handleSubmitFeedback = (feedback) => {\n        setReviewDialogOpen(false)\n        postApiData(config.activityCompleteUrl, { activity_id: props.activityId, activity_feedback: JSON.stringify(feedback) })\n    }\n\n\n    return (\n        <div className=\"ActivityCarousel\">\n            <Swiper\n                spaceBetween={50}\n                slidesPerView={1}\n                navigation\n                pagination={{ clickable: true, type: 'progressbar', }}\n                onReachEnd={finishedActivity}\n            >\n                {JSON.parse(props.activity.pages).map((page, i) => {\n                    return (\n                        <SwiperSlide key={i}>\n                            {(page.thumbnail.split('.').pop() === 'mp4') ? (\n                                <video className=\"ActivityVideo\" autoPlay muted loop playsInline controls >\n                                    <source src={`/activities/${props.activityId}/${page.thumbnail}`} type=\"video/mp4\" />\n                                </video>\n                            ) : (\n                                <img src={encodeURI('/activities/' + (props.activityId) + '/' + page.thumbnail)} alt=\"Header decoration\" />\n                            )}\n\n                            <div className=\"text\">\n                                <h1>{page.title}</h1>\n                                <p dangerouslySetInnerHTML={{ __html: page.description }}></p>\n                            </div>\n                        </SwiperSlide>\n                    )\n                })}\n\n            </Swiper>\n            {activityCompleted ? (\n                <Button variant=\"contained\" onClick={() => setReviewDialogOpen(true)} color=\"primary\">Finish</Button>\n            ) : null\n            }\n\n            {reviewDialogOpen ?\n                <ReviewDialog open={reviewDialogOpen} onSubmit={handleSubmitFeedback} />\n                : null}\n        </div >\n    )\n}\n","import React, { useState } from \"react\";\nimport { useParams } from 'react-router-dom';\n\nimport './Activity.css'\n\nimport useSWR from 'swr'\nimport { css } from \"@emotion/core\";\nimport BounceLoader from \"react-spinners/BounceLoader\";\n\nimport ActivityIntroduction from './ActivityIntroduction';\nimport ActivityCarousel from './ActivityCarousel';\n\nimport config from '../../config';\n\nexport default function Activity(props) {\n\n    let { activityId } = useParams();\n\n    const [showActivityIntroduction, setShowActivityIntroduction] = useState(true)\n\n    const startActivity = () => setShowActivityIntroduction(false)\n\n    const { data } = useSWR(`${config.activityGetUrl}${activityId - 1}`)\n\n    const override = css`display: block; margin: 0 auto;`;\n    if (!data) return <BounceLoader color={\"#F19820\"} loading={true} css={override} size={100} />\n\n    return (\n        <div className=\"Activity\">\n            {showActivityIntroduction && !props.skipIntro ?\n                (\n                    <ActivityIntroduction activityId={activityId} activity={data.activity} handleStartActivity={startActivity} />\n                )\n                :\n                (\n                    <ActivityCarousel activityId={activityId} activity={data.activity} />\n                )\n            }\n        </div>\n    )\n}","import React from 'react';\nimport Slide from '@material-ui/core/Slide';\nimport Dialog from '@material-ui/core/Dialog';\n\nimport CardComponent from '../Card/CardComponent';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function ActivityPreviewDialog(props) {\n  const { onClose, activity, open } = props;\n\n  return (\n    <Dialog onClose={onClose} open={open} TransitionComponent={Transition}>\n        <CardComponent activities={[activity]} skipIntro={true} margin={0}/>\n    </Dialog>\n  );\n}","/* eslint-disable jsx-a11y/alt-text */\nimport React, { useRef } from 'react'\nimport { Parallax, ParallaxLayer } from '@react-spring/parallax'\nimport styles from './styles.module.css'\n\nimport { withRouter } from 'react-router-dom';\n\nimport ActivityPreviewDialog from '../ActivityPreviewDialog/ActivityPreviewDialog';\n\nconst url = (name, wrap) =>\n  `${wrap ? 'url(' : ''}https://awv3node-homepage.surge.sh/build/assets/${name}.svg${wrap ? ')' : ''}`\n\nvar leftMargin = (window.innerWidth > 600 ? 150 : window.innerWidth / 6);\nconst progressiveLeftMargin = () => {\n  leftMargin += (window.innerWidth > 600 ? 250 : window.innerWidth / 4);\n  return leftMargin\n}\n\nconst topMargins = ['30vh', '40vh', '50vh', '60vh', '65vh', '60vh', '50vh', '45vh', '40vh', '35vh', '40vh', '50vh', '60vh', '65vh', '60vh', '50vh', '40vh', '35vh', '40vh', '45vh']\n\nconst Page = ({ activities, offset, gradient, handleClick }) => (\n  <>\n    <ParallaxLayer offset={offset} speed={0.2}>\n      <div className={styles.slopeBegin} />\n    </ParallaxLayer>\n\n    <ParallaxLayer\n      offset={0} speed={0} factor={3} style={{\n        backgroundImage: url('stars', true),\n        backgroundSize: 'cover',\n      }}\n    />\n\n    <ParallaxLayer offset={offset} speed={0.6}>\n      <div className={`${styles.slopeEnd} ${styles[gradient]}`} />\n    </ParallaxLayer>\n\n    <ParallaxLayer className={`${styles.text} ${styles.number}`} offset={0} speed={0.3}>\n      <span>Spark</span>\n    </ParallaxLayer>\n\n    <ParallaxLayer className={`${styles.text} ${styles.description}`} offset={0} speed={0.3}>\n      <p>Your personalised creative journey</p>\n    </ParallaxLayer>\n\n    <ParallaxLayer offset={0.5} speed={0.2} style={{ opacity: 0.2 }}>\n      <img src={url('cloud')} style={{ display: 'block', width: '10%', marginBottom: '34%' }} />\n      <img src={url('cloud')} style={{ display: 'block', width: '20%', marginBottom: '50%' }} />\n    </ParallaxLayer>\n\n    <ParallaxLayer offset={0.7} speed={-0.1} style={{ opacity: 0.4 }}>\n      <img src={url('cloud')} style={{ display: 'block', width: '20%', marginBottom: '26%' }} /> \n    </ParallaxLayer>\n\n    <ParallaxLayer offset={1.5} speed={0.4} style={{ opacity: 0.6 }}>\n      <img src={url('cloud')} style={{ display: 'block', width: '20%', marginBottom: '30%' }} />\n    </ParallaxLayer>\n\n    <ParallaxLayer offset={2.0} speed={0.4} style={{ opacity: 1}}>\n      <h1>“Every child is an artist. The problem is how to remain an artist once he grows up.” </h1>\n    </ParallaxLayer>\n    \n    <ParallaxLayer offset={2.0} speed={0.4} style={{ opacity: 0.6 }}>\n      <p className={`${styles.quoteAuthor}`}>- Pablo Picasso</p>\n    </ParallaxLayer>\n\n    {activities.map((activity, i) => (\n      (offset === 0 ?\n\n        <ParallaxLayer \n          key={i} \n          className={`${styles.activityIcon}`} \n          style={{ marginTop: topMargins[i], marginLeft: progressiveLeftMargin() , backgroundImage: `url(\"/activities/${activity.activityId}/${activity.thumbnail}\"` }} \n          offset={0} speed={1} \n          onClick={() => handleClick(i)}>\n            <span></span>\n        </ParallaxLayer>\n        : null\n      )\n    ))}\n\n  </>\n)\n\nfunction ParallaxView(props) {\n\n  const activities = props.activities\n  \n  const [dialogOpen, setDialogOpen] = React.useState(false);\n  const [selectedActivity, setSelectedActivity] = React.useState([])\n  \n  const handleClick = (i) => {\n    setSelectedActivity (activities[i])\n    setDialogOpen(true)\n  }\n\n  // Reset left margin if we are not refreshing the page\n  leftMargin = (window.innerWidth > 600 ? 150 : window.innerWidth / 6);\n\n  const parallax = useRef(null)\n\n  return (\n    <div style={{ background: '#dfdfdf' }}>\n      <ActivityPreviewDialog activity={selectedActivity} open={dialogOpen} onClose={() => setDialogOpen(false)}/>\n\n      <Parallax className={styles.container} ref={parallax} pages={3} horizontal>\n        <Page handleClick={handleClick} activities={activities} offset={0} gradient=\"pink\" />\n        <Page handleClick={handleClick} activities={activities} offset={1} gradient=\"teal\" />\n        <Page handleClick={handleClick} activities={activities} offset={2} gradient=\"tomato\" />\n      </Parallax>\n    </div>\n  )\n}\n\nexport default withRouter(ParallaxView)","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport useSWR from 'swr'\n\nimport { css } from \"@emotion/core\";\nimport BounceLoader from \"react-spinners/BounceLoader\";\n\nimport UserOnboarding from '../UserOnboarding/UserOnboarding'\n\nimport './Spark.css';\nimport Parallax from './Parallax.jsx';\n\nimport config from '../../config';\n\n\nfunction Spark() {\n\n    const bounceLoaderCss = css`display: block; margin: 0 auto;`;\n\n    // Check if user has completed onboarding\n    var { data: onboarding, mutate } = useSWR(config.onboardingStatusUrl);\n    var { data: activities } = useSWR(config.getSparkPlan);\n\n    if (!onboarding) return <BounceLoader color=\"#F19820\" loading={true} css={bounceLoaderCss} size={100} />\n    if (!activities) return <BounceLoader color=\"#F19820\" loading={true} css={bounceLoaderCss} size={100} />\n\n    if (onboarding.hasOwnProperty('error')) {\n        return (\n            <UserOnboarding onComplete={mutate} />\n        )\n    }\n\n    return (\n        <div className=\"Spark\">\n            <Parallax activities={activities.activities} />\n        </div>\n    )\n}\n\nexport default withRouter(Spark);","import React from \"react\";\n\nimport './ActivityBubble.css'\n\nexport default function ActivityBubble(props) {\n\n    const getActivityId = () => {\n        return props.activityId + 1;\n    }\n\n    const fullThumbnailPath = '/activities/' + getActivityId() + '/' + props.thumbnail;\n    const thumbnailUrl = \"url('\" + fullThumbnailPath + \"')\";\n\n    return (\n        <div\n            className=\"ActivityBubble\"\n            style={{ backgroundColor: props.backgroundColour + 'd0', textDecoration: 'none' }}\n            onClick={() => props.onClick(props.activityId)}\n        >\n            <div className=\"ActivityDetails\" style={{\n                opacity: props.bubbleSize > 50 ? 1 : 0,\n                transition: \"opacity 0.1s ease\",\n            }}>\n                <div className=\"ActivityThumbnail\" style={{ backgroundImage: thumbnailUrl }}>\n                </div>\n                <h1>{props.title}</h1>\n            </div>\n        </div>\n    )\n\n}","import React from 'react';\nimport './CreateHero.css';\n\nimport Fab from '@material-ui/core/Fab';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\n\nexport default function CreateHero(props) {\n\n    const activity = props.activities[Math.floor(Math.random()*props.activities.length)];\n    const thumbnail = `/activities/${activity.activityId}/${activity.thumbnail}`\n\n    return (\n        <div className=\"CreateHero\" style={{ backgroundImage: `url(\"${thumbnail}\"` }}>\n            <div className=\"CreateHeroContent\" style={{ 'background': `linear-gradient(90deg, rgba(241,152,32,1) 40%, rgba(255,255,255,0) 90%)` }}>\n                <Fab style={{float: 'left', margin: '12.5px'}} variant=\"extended\" onClick={props.handleBack}><ChevronLeftIcon /> Back</Fab>\n                <h1>{props.category.title}</h1>\n                <p>{props.category.icon} {props.category.description}</p>\n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport BubbleUI from \"react-bubble-ui\";\nimport \"react-bubble-ui/dist/index.css\";\n\nimport ActivityBubble from \"./ActivityBubble\";\nimport ActivityPreviewDialog from '../ActivityPreviewDialog/ActivityPreviewDialog';\nimport CreateHero from './CreateHero';\n\n\n\nimport \"./BubbleUI.css\";\n\nfunction CreateBubbleUI(props) {\n\n    var options;\n    if (window.innerWidth <415) {\n        options = {\n            size: 165,\n            minSize: 20,\n            gutter: 10,\n            provideProps: true,\n            numCols: 5,\n            fringeWidth: 120,\n            yRadius: 200,\n            xRadius: 100,\n            cornerRadius: 20,\n            showGuides: false,\n            compact: true,\n            gravitation: 5\n        }\n    } else {\n        options = {\n            size: 200,\n            minSize: 100,\n            gutter: 40,\n            provideProps: true,\n            numCols: 5,\n            fringeWidth: 150,\n            yRadius: 300,\n            xRadius: 100,\n            cornerRadius: 0,\n            showGuides: false,\n            compact: false,\n            gravitation: 2\n        }\n    }\n\n    const [dialogOpen, setDialogOpen] = React.useState(false);\n    const [selectedActivity, setSelectedActivity] = React.useState([])\n    \n    const handleClick = (i) => {\n      setSelectedActivity (props.activities[i])\n      setDialogOpen(true)\n    }\n\n    return (\n        <>\n        <CreateHero category={props.category} handleBack={props.handleBack} activities={props.activities}/>\n        <ActivityPreviewDialog activity={selectedActivity} open={dialogOpen} onClose={() => setDialogOpen(false)}/>\n        <BubbleUI options={options} className=\"CreateBubbleUi\">\n            {props.activities.map((activity, i) => {\n                return (\n                    <ActivityBubble onClick={handleClick} key={i} activityId={i} title={activity.title} thumbnail={activity.thumbnail} backgroundColour={activity.background_colour} />\n                )\n            })}\n        </BubbleUI>\n        </>\n    )\n\n}\n\nexport default withRouter(CreateBubbleUI);","import React from 'react';\nimport './CategoryButton.css';\n\nexport default function CategoryButton(props) {\n\n    const activity = props.activities[Math.floor(Math.random()*props.activities.length)];\n    const thumbnail = `/activities/${activity.activityId}/${activity.thumbnail}`\n\n    return (\n        <div className=\"CategoryButton\" style={{ backgroundImage: `url(\"${thumbnail}\"` }} onClick={props.onClick}>\n            <div className=\"CategoryButtonContent\" style={{ 'background': `linear-gradient(90deg,  rgba(241,152,32,0) 0%, rgba(0,0,0,1) 100%)` }}>\n                <h1 style={{'mix-blend-mode': 'color-dodge'}}>{props.category.icon} {props.category.title}</h1>\n                <p style={{'mix-blend-mode': 'color-dodge'}}>{props.category.description}</p>\n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nconst useStyles = makeStyles({\n    root: {\n        flexGrow: 1,\n    },\n});\n\nexport default function CenteredTabs(props) {\n    const classes = useStyles();\n\n    const handleChange = (event, newValue) => {\n        props.setCurrentTab(newValue);\n    };\n\n    return (\n        <Paper className={classes.root}>\n            <Tabs\n                value={props.currentTab}\n                onChange={handleChange}\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                centered\n            >\n                <Tab label=\"Draw\" />\n                <Tab label=\"Write\" />\n                <Tab label=\"Creators\" />\n            </Tabs>\n        </Paper>\n    );\n}","import React from \"react\"\nimport useSWR from 'swr'\nimport './Create.css'\n\nimport { css } from \"@emotion/core\";\nimport BounceLoader from \"react-spinners/BounceLoader\";\n\nimport FastForwardIcon from '@material-ui/icons/FastForward';\nimport CategoryIcon from '@material-ui/icons/Category';\nimport EmojiObjectsIcon from '@material-ui/icons/EmojiObjects';\nimport EmojiNatureIcon from '@material-ui/icons/EmojiNature';\nimport FingerprintIcon from '@material-ui/icons/Fingerprint';\n\nimport BubbleUI from './BubbleUI';\nimport CategoryButton from './CategoryButton';\nimport CreateTabs from './CreateTabs';\n\nimport config from '../../config';\n\nexport default function Create() {\n\n    const [currentTab, setCurrentTab] = React.useState(0);\n\n    const [currentCategory, setCurrentCategory] = React.useState({})\n    const categories = [\n        {\n            title: 'Quick',\n            tags: 'quick',\n            description: 'Fast exercises you can do in less than five minutes',\n            icon: <FastForwardIcon className=\"Icon\" />\n        },\n        {\n            title: 'Skill',\n            tags: 'skill',\n            description: 'Learn new techniques to improve your creativity',\n            icon: <CategoryIcon className=\"Icon\" />\n        },\n        {\n            title: 'Play',\n            tags: 'play',\n            description: 'Let your mind free and have some fun',\n            icon: <EmojiNatureIcon className=\"Icon\" />\n        },\n        {\n            title: 'Expression',\n            tags: 'expression',\n            description: 'Express yourself in new ways',\n            icon: <FingerprintIcon className=\"Icon\" />\n        },\n        {\n            title: 'Imagination',\n            tags: 'quick',\n            description: 'Cultivate your imagination',\n            icon: <EmojiObjectsIcon className=\"Icon\" />\n        }\n    ]\n    \n    const [viewBubbles, setViewBubbles] = React.useState(false);\n    const handleViewBubbles = (i) => {\n        if (currentTab === 2) {\n            setCurrentCategory(data?.creators[i]);\n        } else {\n            setCurrentCategory(categories[i]);\n        }\n        setViewBubbles(!viewBubbles);\n    };\n\n    const bounceLoaderCss = css`display: block; margin: 0 auto;`;\n    const { data } = useSWR(config.activitiesListUrl)\n    if (!data) return <BounceLoader color='#F19820' loading={true} css={bounceLoaderCss} size={100} />\n\n    return (\n        <div className=\"CreateContainer\">\n            {viewBubbles ?\n                <BubbleUI category={currentCategory} activities={data.activities} handleBack={() => setViewBubbles(false)}/> \n                :\n                <>\n                    <CreateTabs currentTab={currentTab} setCurrentTab={setCurrentTab}/>\n                   \n                    {currentTab === 2 ? \n                    data?.creators.map((creator, i) =>\n                        <CategoryButton onClick={() => handleViewBubbles(i)} key={i} category={creator} activities={data.activities}/>\n                    )\n                    :\n                    categories.map((category, i) => \n                        <CategoryButton onClick={() => handleViewBubbles(i)} key={i} category={category} activities={data.activities}/>\n                    )\n                    }\n                </>\n            }\n        </div>\n    )\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nconst useStyles = makeStyles({\n    root: {\n        flexGrow: 1,\n    },\n});\n\nexport default function CenteredTabs(props) {\n    const classes = useStyles();\n\n    const handleChange = (event, newValue) => {\n        props.setCurrentTab(newValue);\n    };\n\n    return (\n        <Paper className={classes.root}>\n            <Tabs\n                value={props.currentTab}\n                onChange={handleChange}\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                centered\n            >\n                <Tab label=\"Activities\" />\n                <Tab label=\"Stats\" />\n                <Tab label=\"Users\" />\n            </Tabs>\n        </Paper>\n    );\n}","import React from 'react';\n\nimport { DataGrid } from '@material-ui/data-grid';\n\nimport useSWR from 'swr'\nimport { css } from \"@emotion/core\";\nimport BounceLoader from \"react-spinners/BounceLoader\";\n\nimport { ListItemAvatar, Avatar } from '@material-ui/core';\n\nimport config from '../../config';\n\nexport default function DashboardActivities() {\n\n    const columns = [\n        { field: 'activityId', headerName: 'ID', width: 70 },\n        {\n            field: \"thumbnail\",\n            headerName: \"Picture\",\n            sortable: false,\n            width: 100,\n            disableClickEventBubbling: true,\n            renderCell: (params) => {\n                return (\n                    <ListItemAvatar>\n                        <Avatar>\n                            <img className=\"ShoppingListImage\" src={`/activities/${params.row.activityId}/${params.value}`} alt=\"Product illustration\" />\n                        </Avatar>\n                    </ListItemAvatar>\n                )\n            }\n        },\n        { field: 'title', headerName: 'Title', width: 200 },\n        { field: 'description', headerName: 'Description', width: 300 },\n    ];\n\n\n    const bounceLoaderCss = css`display: block; margin: 0 auto;`;\n    const { data } = useSWR(config.activitiesListUrl, { refreshInterval: 2 })\n    if (!data) return <BounceLoader color={\"#10253E\"} loading={true} css={bounceLoaderCss} size={100} />\n\n    return (\n        <div className=\"DashboardActivities\">\n\n            <h1>Activities</h1>\n\n            <div className=\"DataGridContainer\" style={{ height: '600px' }}>\n                <DataGrid\n                    autoPageSize\n                    rows={data.activities}\n                    columns={columns}\n                    pageSize={10}\n                    className=\"ActivitiesGrid\"\n                />\n            </div>\n\n        </div>\n    );\n}","import React from 'react';\n\nimport { DataGrid } from '@material-ui/data-grid';\n\nimport useSWR from 'swr'\nimport { css } from \"@emotion/core\";\nimport BounceLoader from \"react-spinners/BounceLoader\";\n\nimport config from '../../config';\n\nexport default function DashboardUsers() {\n\n    const columns = [\n        { field: 'id', headerName: 'ID', width: 70 },\n        { field: 'username', headerName: 'Username', width: 200 },\n        { field: 'registered', headerName: 'Registered', width: 300 },\n        { field: 'last_seen', headerName: 'Last seen', width: 300 },\n    ];\n\n\n    const bounceLoaderCss = css`display: block; margin: 0 auto;`;\n    const { data } = useSWR(config.getUsers, { refreshInterval: 2 })\n    if (!data) return <BounceLoader color={\"#10253E\"} loading={true} css={bounceLoaderCss} size={100} />\n\n    return (\n        <div className=\"DashboardUsers\">\n\n            <h1>Users</h1>\n\n            <div className=\"DataGridContainer\" style={{ height: '600px' }}>\n                <DataGrid\n                    autoPageSize\n                    rows={data}\n                    columns={columns}\n                    pageSize={10}\n                    className=\"UsersGrid\"\n                />\n            </div>\n\n        </div>\n    );\n}","import React from 'react';\n\nimport useSWR from 'swr'\nimport { css } from \"@emotion/core\";\nimport BounceLoader from \"react-spinners/BounceLoader\";\n\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nimport config from '../../config';\n\nexport default function DashboardStats() {\n\n    const bounceLoaderCss = css`display: block; margin: 0 auto;`;\n    const { data } = useSWR(config.activityStats, { refreshInterval: 2 })\n    if (!data) return <BounceLoader color={\"#10253E\"} loading={true} css={bounceLoaderCss} size={100} />\n\n    return (\n        <div className=\"DashboardStats\">\n\n            <h1>Stats</h1>\n\n            {data.stats.map((statistic, i) => (\n                <Card key={i} style={{margin: '20px', width: '400px', display: 'inline-block'}}>\n                <CardContent>\n                  <Typography color=\"textSecondary\" gutterBottom>\n                    {statistic.title}\n                  </Typography>\n                  <Typography variant=\"h5\" component=\"h2\">\n                    {statistic.data}\n                  </Typography>\n\n                  <Typography variant=\"body2\" component=\"p\">\n                    {statistic.description}\n                  </Typography>\n                </CardContent>\n              </Card>\n            ))\n            \n            }\n\n        </div>\n    );\n}","import React from \"react\"\nimport { Redirect } from 'react-router-dom';\n\nimport useSWR from 'swr'\nimport { css } from \"@emotion/core\";\nimport BounceLoader from \"react-spinners/BounceLoader\";\n\nimport config from '../../config';\n\nimport DashboardTabs from './DashboardTabs';\nimport MemoizedDashboardActivities from './DashboardActivities';\nimport MemoizedUserList from './DashboardUsers';\nimport DashboardStats from './DashboardStats';\n\nexport default function Dashboard(props) {\n\n    const [currentTab, setCurrentTab] = React.useState(0)\n    const [currentTabContent, setCurrentTabContent] = React.useState(null)\n\n    React.useEffect(() => {\n        const tabContent = () => {\n            switch (currentTab) {\n                case 0:\n                    return <MemoizedDashboardActivities />\n                case 1:\n                    return <DashboardStats />\n                case 2:\n                    return <MemoizedUserList />\n                default:\n                    return <MemoizedDashboardActivities />\n            }\n        }\n        setCurrentTabContent (tabContent)\n    }, [currentTab])\n    \n    const { data: isAdmin } = useSWR(config.getRoles)\n    const bounceLoaderCss = css`display: block; margin: 0 auto;`;\n    if (!isAdmin) return <BounceLoader color={\"#F19820\"} loading={true} css={bounceLoaderCss} size={100} />\n\n    if (!isAdmin.admin) {\n        return <Redirect to={{ pathname: '/', state: { from: props.location } }} />\n    }\n\n    return (\n        <div style={{height: '-webkit-fill-available', padding: '15px'}}>\n            <DashboardTabs currentTab={currentTab} setCurrentTab={setCurrentTab}/>\n            {currentTabContent}\n        </div>\n    )\n}","// React imports\nimport React, { useEffect } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\n// Authentication imports\nimport { PrivateRoute } from './components/Auth/PrivateRoute';\nimport Login from './components/Auth/Login';\nimport Logout from './components/Auth/Logout';\nimport ResetWithToken from './components/Auth/ResetWithToken';\nimport Reset from './components/Auth/Reset';\nimport SignUp from './components/Auth/SignUp';\nimport ConfirmEmail from './components/Auth/ConfirmEmail';\nimport UserOnboarding from './components/UserOnboarding/UserOnboarding'\n\n// App styling\nimport './App.css';\nimport './fonts/font.css';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles'\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\n// Navigation components\nimport Navbar from './components/Navbar/Navbar';\nimport TopBar from './components/TopBar/TopBar';\n\n// Page components\nimport Home from './components/Home/Home.jsx'\nimport SplashScreen from './components/SplashScreen/SplashScreen';\nimport UserMenu from './components/UserMenu/UserMenu.jsx';\nimport ViewActivitiesComponent from './components/ViewActivities/ViewActivitiesComponent';\nimport Activity from './components/Activity/Activity';\nimport Spark from './components/Spark/Spark';\nimport Create from './components/Create/Create';\n\n// Admin components\nimport Dashboard from './components/Dashboard/Dashboard';\n\n// Notifications\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nexport const SnackbarContext = React.createContext();\n\n\nexport default function App() {\n\n  const [splashScreen, setSplashScreen] = React.useState(true)\n\n  useEffect(() => {\n    setTimeout(() => {\n      setSplashScreen(false)\n    }, 1500);\n  }, []);\n\n  const theme = createMuiTheme({\n    palette: {\n      type: (useMediaQuery('(prefers-color-scheme: dark)') ? 'dark' : 'light'),\n      primary: {\n        main: '#F19820'\n      },\n      secondary: {\n        main: '#CAE8FF'\n      }\n    },\n    typography: {\n      fontFamily: [\n        'F37 Ginger',\n        '-apple-system',\n        'BlinkMacSystemFont',\n        '\"Segoe UI\"',\n        'Roboto',\n        '\"Helvetica Neue\"',\n        'Arial',\n        'sans-serif',\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"',\n      ].join(',')\n    },\n    overrides: {\n      MuiTouchRipple: {\n        child: {\n          backgroundColor: '#F19820'\n        }\n      }\n    }\n  });\n\n  // Snackbar\n  const [snackbar, setSnackbar] = React.useState({\n    text: '',\n    severity: '',\n    open: false,\n  });\n  const handleClose = () => {\n    setSnackbar({ open: false });\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <div className=\"App\">\n        <link rel=\"shortcut icon\" href=\"./favicon.ico\" />\n        <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\n\n\n        <header className=\"App-header\">\n\n          <SnackbarContext.Provider value={{ snackbar, setSnackbar }}>\n\n            <Snackbar open={snackbar.open} autoHideDuration={6000} onClose={handleClose}>\n              <MuiAlert onClose={handleClose} severity={snackbar.severity}>\n                {snackbar.text}\n              </MuiAlert>\n            </Snackbar>\n\n            {splashScreen ? (<SplashScreen />) : (\n\n              <BrowserRouter>\n\n                <TopBar />\n\n                <div className=\"AppWrapper\">\n\n                  <Switch>\n                  <Route exact path=\"/\"> <Home /> </Route>\n                    \n                    <Route exact path=\"/app\"> <ViewActivitiesComponent /> </Route>\n\n                    <Route exact path=\"/activity/:activityId\"> <Activity /> </Route>\n                    <Route exact path=\"/activity/:activityId/go\"> <Activity skipIntro={true} /> </Route>\n\n                    <PrivateRoute exact path=\"/spark\" component={Spark} />\n                    <Route exact path=\"/create\" component={Create} />\n                    <PrivateRoute exact path=\"/onboarding\" component={UserOnboarding} />\n\n                    <PrivateRoute exact path=\"/user\" component={UserMenu} />\n\n                    <Route exact path=\"/login\" component={Login} />\n                    <Route exact path=\"/logout\" component={Logout} />\n                    <Route exact path=\"/reset\" component={Reset} />\n                    <Route exact path=\"/register\" component={SignUp} />\n                    <Route exact path=\"/confirm/:token\" component={ConfirmEmail} />\n                    <Route exact path=\"/reset/:token\" component={ResetWithToken} />\n\n                    <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n                  </Switch>\n\n                </div>\n\n                <Navbar />\n\n              </BrowserRouter>\n            )}\n\n          </SnackbarContext.Provider>\n        </header>\n      </div>\n    </ThemeProvider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import axios from 'axios';\n\nimport { authenticationService } from '../services';\nimport { refreshToken } from '../helpers';\nimport config from '../config';\n\naxios.interceptors.response.use(\n  (response) => {\n    return response\n  },\n  (error) => {\n    return new Promise((resolve) => {\n      const originalRequest = error.config\n      const refreshTokenString = refreshToken()\n\n      if (error.response && error.response.status === 401 && error.config && !error.config.__isRetryRequest && refreshTokenString) {\n        originalRequest._retry = true\n\n        const response = fetch(config.authRefresh, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${refreshTokenString}`\n          },\n          body: JSON.stringify({\n            refresh: refreshToken,\n          }),\n        })\n          .then((res) => res.json())\n          .then((data) => {\n            const currentUser = JSON.parse(localStorage.getItem('currentUser'));\n            currentUser['access_token'] = data.access_token;\n            authenticationService.updateUser(currentUser);\n\n            window.location.reload();\n          })\n        resolve(response)\n      }\n\n      return Promise.reject(error)\n    })\n  },\n)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { SWRConfig } from 'swr'\n\nimport './interceptors/axios-interceptor';\nimport { fetcher } from './services';\n\nReactDOM.render(\n\n    <SWRConfig value={{ fetcher }}>\n        <App />\n    </SWRConfig>\n    ,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__GYYmZ\",\"text\":\"styles_text__2nqlF\",\"number\":\"styles_number__Uxrv2\",\"description\":\"styles_description__1M0dc\",\"activityIcon\":\"styles_activityIcon__2PYIz\",\"quoteAuthor\":\"styles_quoteAuthor__2dO-i\",\"slopeBegin\":\"styles_slopeBegin__C_PD3\",\"slopeEnd\":\"styles_slopeEnd__3hgvL\",\"pink\":\"styles_pink__23YfJ\",\"teal\":\"styles_teal__1Wtgr\",\"tomato\":\"styles_tomato__1VsmE\"};"],"sourceRoot":""}