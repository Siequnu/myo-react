{"version":3,"sources":["helpers/auth-header.js","helpers/handle-response.js","config.js","services/authentication.service.js","services/api.service.js","services/axios-fetcher.service.js","components/Auth/PrivateRoute.jsx","components/Auth/Login.jsx","components/Auth/ResetWithToken.jsx","components/Auth/Reset.jsx","components/Auth/SignUp.jsx","components/Auth/ConfirmEmail.jsx","components/UserOnboarding/OnboardingLoading.jsx","components/UserOnboarding/OnboardingHero.jsx","components/UserOnboarding/UserOnboarding.jsx","components/Navbar/Navbar.jsx","components/TopBar/TopBar.jsx","components/SplashScreen/SplashScreen.jsx","components/Auth/Logout.jsx","components/UserMenu/UserHero.jsx","components/UserMenu/UserMenu.jsx","components/Card/CardComponent.jsx","components/Onboarding/Onboarding.jsx","components/Hero/Hero.jsx","components/HeroList/ActivityAvatarList.jsx","components/HeroList/HeroList.jsx","components/ViewActivities/ViewActivitiesComponent.jsx","components/Activity/ActivityIntroduction.jsx","components/Activity/Slider.jsx","components/Activity/ReviewDialog.jsx","components/Activity/ActivityCarousel.jsx","components/Activity/Activity.jsx","components/Spark/ActivityBubble.jsx","components/Spark/Spark.jsx","App.js","serviceWorker.js","interceptors/axios-interceptor.js","index.js"],"names":["authHeader","currentUser","authenticationService","currentUserValue","access_token","Authorization","accessToken","refreshToken","refresh_token","handleResponse","response","text","then","data","JSON","parse","ok","indexOf","status","logout","error","message","statusText","Promise","reject","config","authLogin","authRefresh","afterLogout","resetWithToken","authSignUp","authValidate","confirmEmail","activitiesListUrl","onboardingStatusUrl","onboardingSteps","onboardingQuestions","question","answers","currentUserSubject","BehaviorSubject","localStorage","getItem","login","removeItem","next","signUp","updateUser","userObject","setItem","stringify","validateRegistration","asObservable","value","username","password","a","requestOptions","method","headers","body","fetch","user","email","validation","token","hasOwnProperty","postApiData","url","values","axios","post","PrivateRoute","Component","component","rest","render","props","to","pathname","state","from","location","withRouter","setSnackbar","React","useContext","SnackbarContext","history","push","formik","useFormik","initialValues","onSubmit","open","severity","className","handleSubmit","TextField","fullWidth","id","name","label","onChange","handleChange","touched","Boolean","errors","type","helperText","Button","color","variant","Link","useParams","json","success","catch","validate","includes","username_exists","email_exists","Object","entries","map","pop","result","bounceLoaderCss","css","loading","size","useState","loadingDone","setLoadingDone","progress","setProgress","setText","titles","useEffect","timer","setInterval","oldProgress","diff","Math","random","newProgress","min","percent","titleIndex","floor","length","getText","clearInterval","style","animation","onClick","onComplete","LinearProgress","intensity","width","height","cx","cy","fill","r","OnboardingHero","backgroundImage","showIntroHero","setShowIntroHero","questionsDone","setQuestionsDone","activeStep","setActiveStep","steps","questions","currentQuestionIndex","setCurrentQuestionIndex","selectedAnswerIndices","setSelectedAnswerIndices","questionAnswerObject","setQuestionAnswerObject","newQuestionAnswerObject","questionIndex","answer","goToNextQuestion","nextQuestion","nextPercentage","nextStep","ceil","handleSaveOnboarding","onboarding_json","useSWR","Stepper","alternativeLabel","Step","StepLabel","List","aria-label","i","ListItem","selected","index","button","ListItemText","align","primary","disabled","SimpleBottomNavigation","setValue","BottomNavigation","event","newValue","showLabels","BottomNavigationAction","icon","TopBar","RouterLink","src","alt","fontSize","SplashScreen","UserHero","activities","activity","thumbnail","activityId","registered","UserMenu","CardComponent","card","title","description","textDecoration","Onboarding","handleClose","setState","isVisible","story","intro","children","attachToId","this","onClose","Hero","ActivityAvatarList","Grid","item","dense","ListItemAvatar","Avatar","itemId","secondary","ListItemSecondaryAction","IconButton","edge","Divider","HeroList","half","firstHalf","splice","secondHalf","ViewActivitiesComponent","setActivities","getRandomActivities","count","Array","ActivityIntroduction","split","autoPlay","muted","loop","playsInline","controls","dangerouslySetInnerHTML","__html","handleStartActivity","useStyles","makeStyles","theme","root","spacing","margin","iOSBoxShadow","marks","IOSSlider","withStyles","padding","thumb","backgroundColor","boxShadow","marginTop","marginLeft","active","valueLabel","left","top","background","track","rail","opacity","mark","markActive","Slider","FeedbackSlider","classes","defaultValue","valueLabelDisplay","ReviewDialog","feedback","setFeedback","Dialog","disableEnforceFocus","DialogTitle","DialogContent","DialogContentText","multiline","target","DialogActions","ActivityCarousel","reviewDialogOpen","setReviewDialogOpen","activityCompleted","setActivityCompleted","spaceBetween","slidesPerView","navigation","pagination","clickable","onReachEnd","pages","page","encodeURI","Activity","showActivityIntroduction","setShowActivityIntroduction","override","SwiperCore","use","Navigation","Pagination","A11y","ActivityBubble","getActivityId","thumbnailUrl","backgroundColour","bubbleSize","transition","onboarding","mutate","options","minSize","gutter","provideProps","numCols","fringeWidth","yRadius","xRadius","cornerRadius","showGuides","compact","gravitation","background_colour","createContext","App","splashScreen","setSplashScreen","setTimeout","createMuiTheme","palette","useMediaQuery","main","typography","fontFamily","join","overrides","MuiTouchRipple","child","snackbar","ThemeProvider","CssBaseline","rel","href","Provider","Snackbar","autoHideDuration","exact","path","Spark","UserOnboarding","Login","Reset","SignUp","ConfirmEmail","ResetWithToken","window","hostname","match","interceptors","resolve","originalRequest","refreshTokenString","__isRetryRequest","_retry","refresh","res","reload","ReactDOM","fetcher","get","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bb9befbb.chunk.js","sourcesContent":["import { authenticationService } from '../services';\n\nexport function authHeader() {\n    // Return authorization header with jwt token\n    const currentUser = authenticationService.currentUserValue;\n    if (currentUser && currentUser.access_token) {\n        return { Authorization: `Bearer ${currentUser.access_token}` };\n    } else {\n        return {};\n    }\n}\n\nexport function refreshHeader() {\n    // Return authorization header with jwt token\n    const currentUser = authenticationService.currentUserValue;\n    if (currentUser && currentUser.refresh_token) {\n        return { Authorization: `Bearer ${currentUser.refresh_token}` };\n    } else {\n        return {};\n    }\n}\n\nexport function accessToken() {\n    // Return jwt token\n    const currentUser = authenticationService.currentUserValue;\n    if (currentUser && currentUser.access_token) {\n        return currentUser.access_token;\n    } else {\n        return {};\n    }\n}\n\nexport function refreshToken() {\n    // Return jwt refresh token\n    const currentUser = authenticationService.currentUserValue;\n    if (currentUser && currentUser.refresh_token) {\n        return currentUser.refresh_token;\n    } else {\n        return false;\n    }\n}","import { authenticationService } from '../services';\n\n// Handle Sign-in response\nexport function handleResponse(response) {\n    return response.text().then(text => {\n        const data = text && JSON.parse(text);\n        if (!response.ok) {\n            if ([401, 403].indexOf(response.status) !== -1) {\n                // Auto logout if 401 Unauthorized or 403 Forbidden response returned from api\n                authenticationService.logout();\n                //window.location.reload();\n            }\n\n            const error = (data && data.message) || response.statusText;\n            return Promise.reject(error);\n        }\n\n        return data;\n    });\n}","const config = \n{\n    authLogin: '/auth/login',\n    authRefresh: '/auth/refresh',\n    afterLogout: '/',\n    resetWithToken: '/auth/reset/token',\n    authSignUp: '/auth/register',\n    authValidate: '/auth/validate',\n    confirmEmail: '/auth/confirm',\n\n    activitiesListUrl: '/activities/api/list',\n\n    onboardingStatusUrl: '/onboarding/status',\n    onboardingSteps: ['About yourself', 'You and art', 'Final details'],\n    onboardingQuestions: [\n        {\n            question: \"What kind of creative activity are you most interested in?\",\n            answers:[\n                \"Drawing\",\n                \"Writing\",\n                \"Painting\",\n                \"Crafts\",\n                \"Photography\"\n            ]\n        },\n        {\n            question: \"What would you like to use Myo for?\",\n            answers :[\n                \"To relax\",\n                \"To learn new skills\",\n                \"To use my imagination\",\n                \"To better express myself\",\n                \"To discover new arts\"\n            ]\n        },\n        {\n            question: \"What would you like Myo to offer?\",\n            answers: [\n                \"Breadth of activities\",\n                \"In depth skill building\",\n                \"Global perspectives\",\n                \"Interaction with artists & users\"\n            ]\n        },\n        {\n            question: \"What skills are you most interested in developing?\",\n            answers: [\n                \"Imagination\",\n                \"Persistence\",\n                \"Discipline\",\n                \"Inquisitiveness\",\n                \"Collaboration\"\n            ]\n        },\n        {\n            question: \"Generally, how often do you engage in creative activities?\",\n            answers: [\n                \"Everyday\",\n                \"Two or three times a week\",\n                \"Once every now and again\",\n                \"Never!\"\n            ]\n        },\n        {\n            question: \"How often would you like to engage in creative activities?\",\n            answers: [\n                \"Everyday\",\n                \"Two or three times a week\",\n                \"Once every now and again\",\n                \"Never!\"\n            ]\n        },\n        {\n            question: \"For how long?\",\n            answers: [\n                \"No more than 5mins at a time\",\n                \"5mins to 10mins\",\n                \"10mins to 20mins\",\n                \"20mins to 40mins\",\n                \"Sky’s the limit!\"\n            ]\n        },\n        {\n            question: \"How ‘experienced’ do you think you are?\",\n            answers: [\n                \"Complete beginner\",\n                \"Want to take it easy\",\n                \"I like a challenge!\",\n                \"Experience grrrr!!\"\n            ]\n        },\n        {\n            question:\"What materials do you have access to?\",\n            answers: [\n                \"Pens and paper only\",\n                \"Own some pencils\",\n                \"Watercolour paints\",\n                \"Acrylic paints\",\n                \"General arts & crafts stuff\",\n                \"Camera (phone will do)\"\n            ],\n            //type: 'multiple'\n        }\n    ]\n}\n\nexport default config","import { BehaviorSubject } from 'rxjs';\nimport { handleResponse } from '../helpers';\nimport config from '../config';\n\nconst currentUserSubject = new BehaviorSubject(JSON.parse(localStorage.getItem('currentUser')));\n\nexport const authenticationService = {\n    login,\n    logout,\n    signUp,\n    updateUser,\n    validateRegistration,\n    confirmEmail,\n    currentUser: currentUserSubject.asObservable(),\n    get currentUserValue() { return currentUserSubject.value }\n};\n\nasync function login(username, password) {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username, password })\n    };\n\n    const response = await fetch(config.authLogin, requestOptions);\n    const user = await handleResponse(response);\n\n    // Store user details and JWT token in local storage to keep user logged in between page refreshes\n    localStorage.setItem('currentUser', JSON.stringify(user));\n    currentUserSubject.next(user);\n    return user;\n}\n\n\nasync function signUp(username, email, password) {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username, password, email })\n    };\n\n    const response = await fetch(config.authSignUp, requestOptions);\n    const user = await handleResponse(response);\n\n    return user;\n}\n\nasync function validateRegistration(username, email) {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username, email })\n    };\n\n    const response = await fetch(config.authValidate, requestOptions);\n    const validation = await handleResponse(response);\n    \n    return validation;\n}\n\nasync function confirmEmail(token) {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ token })\n    };\n\n    const response = await fetch(config.confirmEmail, requestOptions);\n    const validation = await handleResponse(response);\n\n    if (validation.hasOwnProperty('success')) {\n        return true;\n    } else {\n        return false\n    }\n}\n\nfunction updateUser(userObject) {\n    localStorage.setItem('currentUser', JSON.stringify(userObject));\n    currentUserSubject.next(userObject);\n}\n\nfunction logout() {\n    // Remove user from local storage to log user out\n    localStorage.removeItem('currentUser');\n    currentUserSubject.next(null);\n}\n","import { authHeader } from '../helpers';\nimport axios from 'axios';\n\nexport async function postApiData (url, values) {\n    try {\n        const response = await axios.post(url, values, { headers: authHeader() });\n        const data = response.data;\n        return data;\n    } catch (error) {\n        return error;\n    }\n}","import axios from 'axios';\nimport { accessToken } from '../helpers';\n\n// Automatically include token with fetcher\nexport const fetcher = (url) =>\n  axios\n    .get(url, { headers: { Authorization: \"Bearer \" + accessToken() } })\n    .then((res) => res.data);","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nimport { authenticationService } from '../../services';\r\n\r\nexport const PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route {...rest} render={props => {\r\n        const currentUser = authenticationService.currentUserValue;\r\n        if (!currentUser) {\r\n            // Not logged in so redirect to login page with the return url\r\n            return <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\r\n        }\r\n\r\n        // Authorised so return component\r\n        return <Component {...props} />\r\n    }} />\r\n)","import React from 'react';\nimport { withRouter, Link } from 'react-router-dom';\n\nimport './Auth.css';\n\nimport { useFormik } from 'formik';\nimport { Button, TextField } from '@material-ui/core';\nimport { authenticationService } from '../../services';\n\nimport { SnackbarContext } from '../../App';\n\nfunction Login(props) {\n\n    const { setSnackbar } = React.useContext(SnackbarContext);\n\n    if (authenticationService.currentUserValue) {\n        props.history.push('/');\n    }\n\n\n    const formik = useFormik({\n        initialValues: {\n            username: '',\n            password: '',\n        },\n        onSubmit: (values) => {\n            authenticationService.login(values.username, values.password)\n                .then(\n                    (user) => {\n                        const { from } = props.location.state || { from: { pathname: \"/\" } };\n                        props.history.push(from);\n\n                        setSnackbar({\n                            text: `Welcome, ${values.username}`,\n                            open: true,\n                            severity: 'success'\n                        })\n                    }\n                );\n        }\n    });\n\n\n    return (\n        <div className=\"AuthForm\">\n            <form onSubmit={formik.handleSubmit}>\n                <TextField\n                    fullWidth\n                    id=\"username\"\n                    name=\"username\"\n                    label=\"Username\"\n                    value={formik.values.username}\n                    onChange={formik.handleChange}\n                    error={formik.touched.username && Boolean(formik.errors.username)}\n                />\n                <TextField\n                    fullWidth\n                    id=\"password\"\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    value={formik.values.password}\n                    onChange={formik.handleChange}\n                    error={formik.touched.password && Boolean(formik.errors.password)}\n                    helperText={formik.touched.password && formik.errors.password}\n                />\n                <Button className=\"SubmitButton\" color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n                    Submit\n                </Button>\n                <Button component={Link} to=\"/reset\" className=\"ResetPasswordButton\">\n                    Forgot password\n                </Button>\n                <Button component={Link} to=\"/register\">\n                    New account\n                </Button>\n            </form>\n        </div>\n    )\n}\n\nexport default withRouter(Login);","import React from 'react';\nimport { withRouter, useParams } from 'react-router-dom';\n\nimport { useFormik } from 'formik';\n\nimport { Button, TextField } from '@material-ui/core';\n\nimport './Auth.css';\n\nimport { SnackbarContext } from '../../App';\n\nimport config from '../../config';\n\nfunction ResetWithToken(props) {\n\n    const { setSnackbar } = React.useContext(SnackbarContext);\n\n    const { token } = useParams();\n\n    const formik = useFormik({\n        initialValues: {\n            password: '',\n        },\n        //validationSchema: validationSchema,\n        onSubmit: (values) => {\n            // Add in the token\n            values.token = token;\n\n            // Fetch the data\n            fetch(config.resetWithToken, {\n                method: 'POST',\n                body: JSON.stringify(values),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            })\n                .then(response => response.json())\n                .then(data => {\n                    if (data.hasOwnProperty('error')) {\n                        throw data.error;\n                    }\n                    setSnackbar({\n                        text: data.success,\n                        open: true,\n                        severity: 'success'\n                    })\n                    \n                    // Show the login screen\n                    props.history.push('/login');\n                })\n                .catch(function (error) {\n                    setSnackbar({\n                        text: error,\n                        open: true,\n                        severity: 'error'\n                    })\n                })\n        },\n    });\n\n    // Display a password reset form\n    return (\n        <div className=\"AuthForm\">\n            <form onSubmit={formik.handleSubmit}>\n                <TextField\n                    fullWidth\n                    id=\"password\"\n                    name=\"password\"\n                    label=\"New password\"\n                    type=\"password\"\n                    value={formik.values.password}\n                    onChange={formik.handleChange}\n                    error={formik.touched.password && Boolean(formik.errors.password)}\n                    helperText={formik.touched.password && formik.errors.password}\n                />\n                <Button variant=\"contained\" fullWidth type=\"submit\">\n                    Set new password\n                </Button>\n            </form>\n        </div>\n    )\n}\n\nexport default withRouter(ResetWithToken)","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport { useFormik } from 'formik';\n\nimport { Button, TextField } from '@material-ui/core';\n\nimport { SnackbarContext } from '../../App';\n\nfunction Reset(props) {\n\n    const { setSnackbar } = React.useContext(SnackbarContext);\n\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n        },\n        onSubmit: (values) => {\n            fetch('/auth/reset', {\n                method: 'POST',\n                body: JSON.stringify(values),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            })\n                .then(response => response.json())\n                .then(data => {\n                    if (data.hasOwnProperty('error')) {\n                        throw data.error;\n                    }\n                    \n                    setSnackbar({\n                        text: data.success,\n                        open: true,\n                        severity: 'success'\n                    })\n\n                    props.history.push('login');\n                    \n                })\n                .catch(function (error) {\n                    \n                    setSnackbar({\n                        text: error,\n                        open: true,\n                        severity: 'error'\n                    })\n\n                })\n        },\n    });\n\n    // Display an email form, to which reset email can be sent\n    return (\n        <div className=\"AuthForm\">\n            <form onSubmit={formik.handleSubmit}>\n                <TextField\n                    fullWidth\n                    id=\"email\"\n                    name=\"email\"\n                    label=\"Email\"\n                    type=\"email\"\n                    value={formik.values.email}\n                    onChange={formik.handleChange}\n                    error={formik.touched.email && Boolean(formik.errors.email)}\n                    helperText={formik.touched.email && formik.errors.email}\n                />\n\n                <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n                    Send password reset email\n                </Button>\n\n                <Button component={Link} to=\"/login\">\n                    Back to Login\n                </Button>\n            </form>\n        </div>\n    )\n}\n\nexport default withRouter(Reset)","import React from 'react';\nimport { withRouter, Link } from 'react-router-dom';\n\nimport './Auth.css';\n\nimport { useFormik } from 'formik';\nimport { Button, TextField } from '@material-ui/core';\nimport { authenticationService } from '../../services';\n\nimport { SnackbarContext } from '../../App';\n\nfunction SignUp(props) {\n\n    const { setSnackbar } = React.useContext(SnackbarContext);\n\n    if (authenticationService.currentUserValue) {\n        props.history.push('/');\n    }\n\n    // Async validation\n    const validate = async (values, props) => {\n        const validation = await authenticationService.validateRegistration(values.username, values.email);\n        \n        const errors = {};\n        \n        if (['admin', 'null', 'god'].includes(values.username)) {\n            errors.username = 'Please choose a different username';\n        }\n        if (validation.username_exists)\n            errors.username = 'This username is already taken';\n        if (validation.email_exists)\n            errors.email = 'This email is already registered';\n\n        Object.entries(errors).map(error => {\n            setSnackbar({\n                text: error.pop(),\n                open: true,\n                severity: 'warning'\n            })\n            return true\n        })\n        \n        return errors;\n    };\n\n\n    const formik = useFormik({\n        initialValues: {\n            username: '',\n            email: '',\n            password: '',\n        },\n        onSubmit: (values) => {\n            authenticationService.signUp(values.username, values.email, values.password)\n                .then(\n                    (user) => {\n                        props.history.push('/login');\n\n                        setSnackbar({\n                            text: `An email has been sent to ${values.email}. Please open it to continue.`,\n                            open: true,\n                            severity: 'success'\n                        })\n                    }\n                );\n        },\n        validate: validate,\n    });\n\n    return (\n        <div className=\"AuthForm\">\n            <form onSubmit={formik.handleSubmit}>\n                <TextField\n                    fullWidth\n                    id=\"username\"\n                    name=\"username\"\n                    label=\"Username\"\n                    value={formik.values.username}\n                    onChange={formik.handleChange}\n                    error={formik.touched.username && Boolean(formik.errors.username)}\n                />\n                <TextField\n                    fullWidth\n                    id=\"email\"\n                    name=\"email\"\n                    label=\"Email\"\n                    value={formik.values.email}\n                    onChange={formik.handleChange}\n                    error={formik.touched.email && Boolean(formik.errors.email)}\n                />\n                <TextField\n                    fullWidth\n                    id=\"password\"\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    value={formik.values.password}\n                    onChange={formik.handleChange}\n                    error={formik.touched.password && Boolean(formik.errors.password)}\n                    helperText={formik.touched.password && formik.errors.password}\n                />\n                <Button className=\"SubmitButton\" color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n                    Submit\n                </Button>\n                <Button component={Link} to=\"/login\" className=\"ResetPasswordButton\">\n                    Back to log-in\n                </Button>\n            </form>\n        </div>\n    )\n}\n\nexport default withRouter(SignUp);","import React from 'react';\nimport { withRouter, useParams } from 'react-router-dom';\n\nimport { authenticationService } from '../../services';\n\nimport { SnackbarContext } from '../../App';\n\nimport { css } from \"@emotion/core\";\nimport BounceLoader from \"react-spinners/BounceLoader\";\n\nfunction ConfirmEmail(props) {\n\n    const { setSnackbar } = React.useContext(SnackbarContext);\n\n    const { token } = useParams();\n     \n    authenticationService.confirmEmail(token)\n        .then((result) => {\n            const message = ( result ? `Your email has been confirmed. You can now log-in.` : `We could not confirm your email.`)\n            setSnackbar({\n                text: message,\n                open: true,\n                severity: ( result ? 'success' : 'error')\n            })  \n            props.history.push('/login');    \n        })\n\n    const bounceLoaderCss = css`display: block; margin: 0 auto;`;\n\n    return (\n        <BounceLoader color='#F19820' loading={true} css={bounceLoaderCss} size={100} />\n    )\n}\n\nexport default withRouter(ConfirmEmail);","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport './OnboardingLoading.css'\nimport 'animate.css'\n\nimport Goo from 'gooey-react'\n\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Button from '@material-ui/core/Button';\n\nfunction OnboardingLoading(props) {\n\n    const [loadingDone, setLoadingDone] = React.useState(false);\n    \n    const [progress, setProgress] = React.useState(0);\n    const [text, setText] = React.useState('')\n\n    const titles = [\n        'Myo is AI creativity in your pocket',\n        `Right now, we're analysing the experience of 35,892 users`,\n        'To make sure your plan fits you perfectly',\n        'Your personalised creativity plan is almost ready. Are you?'\n    ]\n\n    const getText = (percent) => {\n        const titleIndex = Math.floor(percent * titles.length / 100)\n        return titles[titleIndex]\n    }\n    \n    React.useEffect(() => {\n        const timer = setInterval(() => {\n            setProgress((oldProgress) => {\n                if (oldProgress === 100) {\n                    setLoadingDone(true)\n                }\n                const diff = Math.random() * 6;\n                const newProgress =  Math.min(oldProgress + diff, 100);\n                \n                if (newProgress > 95) {\n                    setLoadingDone(true)\n                }\n                \n                setText(getText(newProgress));\n                return newProgress;\n            });\n            }, 500);\n\n            return () => {\n                clearInterval(timer);\n            };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    if (loadingDone) {\n        return (\n            <div>\n                <h2 className=\"animate__animated animate__backInDown\">Your custom training plan is ready</h2>\n                <Button \n                    style={{ animation: 'pulse 3s ease infinite', 'margin': '20px 0' }} \n                    className=\"StartButton animate__animated animate__fadeIn animate__delay-1s\"\n                    variant=\"contained\" size=\"large\" color=\"primary\" \n                    onClick={()=> props.onComplete()}\n                >\n                Let's go\n                </Button>\n            </div>\n        )\n    }\n\n    return (\n        <div style={{'margin': '0 20px'}}>\n            <h3 className=\"animate__animated animate__backInDown animate__delay-1s\" >{text}</h3>\n            <LinearProgress className=\"animate__animated animate__fadeIn\" variant=\"determinate\" value={progress} />\n            \n            <Goo className=\"animate__animated animate__fadeIn goo\" intensity=\"strong\"> \n                <svg width=\"500\" height=\"500\">\n                    <circle cx=\"29%\" cy=\"50%\" fill=\"sandybrown\" r=\"49\" style={{ animation: 'right 3s ease infinite' }} />\n                    <circle cx=\"44%\" cy=\"34%\" fill=\"palevioletred\" r=\"23\" style={{ animation: 'left 7s linear infinite' }} />\n                    <circle cx=\"34%\" cy=\"74%\" fill=\"orchid\" r=\"59\" style={{ animation: 'left 4s linear infinite' }} />\n                    <circle cx=\"56%\" cy=\"59%\" fill=\"mediumorchid\" r=\"46\" style={{ animation: 'right 5s ease infinite' }} />\n                </svg>\n            </Goo>\n        </div>\n    )\n}\n\nexport default withRouter(OnboardingLoading);","import React from 'react';\nimport './OnboardingHero.css';\n\nimport Button from '@material-ui/core/Button';\nimport EmojiObjectsIcon from '@material-ui/icons/EmojiObjects';\n\nexport default function OnboardingHero(props) {\n\n    return (\n        <div className=\"OnboardingHero\" style={{ backgroundImage: `url(\"/activities/20/Thumbnail.jpeg\"` }}>\n            <div className=\"UserHeroContent\" style={{ 'background': `linear-gradient(90deg, rgba(241,152,32,1) 40%, rgba(255,255,255,0) 90%)` }}>\n                \n                <h2>Spark is a totally custom creativity journey, designed for you.</h2>\n                <p><EmojiObjectsIcon className=\"Icon\" /> To get started, we need to know a little bit more about you.</p>\n                <Button className=\"OnboardingHeroButton\" onClick={props.onClick}>Next</Button>\n                \n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport './UserOnboarding.css'\nimport 'animate.css'\n\nimport useSWR from 'swr'\nimport { css } from \"@emotion/core\";\nimport BounceLoader from \"react-spinners/BounceLoader\";\n\nimport { List, ListItem, ListItemText, Stepper, Step, StepLabel, Button } from '@material-ui/core';\n\nimport OnboardingLoading from './OnboardingLoading';\nimport OnboardingHero from './OnboardingHero';\n\nimport config from '../../config';\n\nimport { postApiData } from '../../services/api.service';\nimport { SnackbarContext } from '../../App';\n\nfunction UserOnboarding(props) {\n\n    const { setSnackbar } = React.useContext(SnackbarContext);\n\n    // Visual state of onboarding\n    const [showIntroHero, setShowIntroHero] = React.useState(true)\n    const [questionsDone, setQuestionsDone] = React.useState(false)\n\n    // Store the steps in state\n    const [activeStep, setActiveStep] = React.useState(0);\n    const steps = config.onboardingSteps;\n\n    // Store questions in state\n    const questions = config.onboardingQuestions;\n    const [currentQuestionIndex, setCurrentQuestionIndex] = React.useState(0);\n    const [selectedAnswerIndices, setSelectedAnswerIndices] = React.useState([]);\n    const [questionAnswerObject, setQuestionAnswerObject] = React.useState([]);\n\n    // If the current question index changes, save the answer\n    React.useEffect(() => {\n        if (!selectedAnswerIndices.length) return\n\n        const newQuestionAnswerObject = {\n            questionIndex: currentQuestionIndex,\n            question: questions[currentQuestionIndex].question,\n            answer: selectedAnswerIndices\n        }\n\n        setQuestionAnswerObject ([...questionAnswerObject, newQuestionAnswerObject])\n        setSelectedAnswerIndices([]);\n\n        if (questions[currentQuestionIndex].type !== 'multiple') goToNextQuestion();\n    \n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [selectedAnswerIndices]);\n\n    const goToNextQuestion = () => {\n        const nextQuestion = currentQuestionIndex + 1;\n        const nextPercentage = nextQuestion * 100 / questions.length;\n        const nextStep = Math.ceil(nextPercentage * steps.length / 100);\n        if (currentQuestionIndex < (questions.length - 1)) {\n            setCurrentQuestionIndex(nextQuestion);\n            setSelectedAnswerIndices([]);\n            setActiveStep (nextStep);\n        } else {\n            handleSaveOnboarding(JSON.stringify(questionAnswerObject))\n            setQuestionsDone(true)\n        }\n    }\n\n    const handleQuestionClick = (index) => {\n        setSelectedAnswerIndices([...selectedAnswerIndices, index]);\n    };\n\n    const handleSaveOnboarding = (json) => {\n        postApiData('/onboarding/save', {onboarding_json: json}).then(\n          response => setSnackbar({\n            text: response.success || response.error,\n            open: (response.error),\n            severity: (response.success ? 'success' : 'error')\n          })\n        )\n      };\n\n    // Checks the current question index and returns a list item\n    const renderQuestion = () => {\n        return (\n            <List component=\"nav\" aria-label=\"Onboarding answers\">\n            {questions[currentQuestionIndex].answers.map((answer, i) =>\n                <ListItem\n                    selected={selectedAnswerIndices.includes(i)}\n                    onClick={() => handleQuestionClick(i)}\n                    button key={i}\n                >\n                    <ListItemText align=\"center\" primary={answer} />\n                </ListItem>\n            )}\n            {questions[currentQuestionIndex].type === 'multiple' ? \n                <Button \n                    variant=\"contained\" \n                    color=\"primary\" \n                    onClick={goToNextQuestion}\n                    disabled={!selectedAnswerIndices.length}>Next</Button>\n                : null\n            }\n            </List>\n        )\n    }\n\n    // ☑️ Check and redirect if user has already done onboarding\n    const bounceLoaderCss = css`display: block; margin: 0 auto;`;\n    const { data } = useSWR(config.onboardingStatusUrl)\n    if (!data) return <BounceLoader color='#F19820' loading={true} css={bounceLoaderCss} size={100} />\n    if (data.hasOwnProperty('success')) props.onComplete();\n    \n    // At the start, show the onboarding intro\n    if (showIntroHero) return <OnboardingHero onClick={() => setShowIntroHero(false)} />\n    \n    // If the questions are done, show the post-loading screen\n    if (questionsDone) return <OnboardingLoading onComplete={props.onComplete}/>\n\n    return (\n        <div className=\"UserOnboarding\">\n            <Stepper activeStep={activeStep} alternativeLabel style={{'backgroundColor': 'transparent'}}>\n                {steps.map((label) => (\n                <Step key={label}>\n                    <StepLabel>{label}</StepLabel>\n                </Step>\n                ))}\n            </Stepper>\n            <h2>{questions[currentQuestionIndex].question}</h2>\n\n            {renderQuestion(questions[currentQuestionIndex])}\n        </div>\n    )\n}\n\nexport default withRouter(UserOnboarding);","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Navbar.css';\n\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\n\nimport HomeIcon from '@material-ui/icons/Home';\nimport FireplaceIcon from '@material-ui/icons/Fireplace';\n\n\nexport default function SimpleBottomNavigation() {\n    const [value, setValue] = React.useState(0);\n  \n    return (\n      <BottomNavigation\n        value={value}\n        onChange={(event, newValue) => {\n          setValue(newValue);\n        }}\n        showLabels\n        className=\"navbar\"\n      >\n        <BottomNavigationAction component={Link} to=\"/\" id=\"HomeNavbarIcon\" label=\"Home\" icon={<HomeIcon />} />\n        <BottomNavigationAction component={Link} to=\"/spark\" id=\"SparkNavbarIcon\" label=\"Spark\" icon={<FireplaceIcon />} />\n      </BottomNavigation>\n    );\n  }\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Link } from '@material-ui/core';\n\nimport './TopBar.css';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\n\nclass TopBar extends React.Component {\n  \n  render() {\n      return (\n          <div className=\"TopBar\">\n            <Link component={RouterLink} to=\"/\" className=\"AccountLink\">\n              <img className=\"MyoLogo\" src=\"/assets/logo.png\" alt=\"Myo app logo\" />\n            </Link>\n            <img className=\"MyoText\" src=\"/assets/myo-text.png\" alt=\"Myo app logo\" />\n            <Link component={RouterLink} to=\"/user\" className=\"AccountLink\">\n              <AccountCircleIcon fontSize=\"large\" className=\"AccountCircle\" />\n            </Link>\n          </div>\n      )\n  }\n}\n\nexport default TopBar;","import React, { Suspense } from 'react';\nimport './SplashScreen.css';\n\nimport 'animate.css'\n\nexport default function SplashScreen() {\n  return (\n    <div className=\"SplashScreen\">\n      <div className=\"SplashScreenWrapper\">\n        <Suspense>\n          <img src=\"/assets/myo-text-icon.png\" alt=\"Myo icon\" />\n          <p className=\"animate__animated animate__bounceIn\">Spark wonder</p>\n        </Suspense>\n      </div>\n    </div>\n  )\n}\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport { authenticationService } from '../../services';\n\nimport { SnackbarContext } from '../../App';\n\nimport { Button } from '@material-ui/core';\n\nimport config from '../../config';\n\nfunction Logout(props) {\n    const { setSnackbar } = React.useContext(SnackbarContext);\n\n    const handleClick = () => {\n\n        setSnackbar({\n            text: `You have logged out.`,\n            open: true,\n            severity: 'success'\n        })\n\n        authenticationService.logout();\n        props.history.push(config.afterLogout);\n    }\n\n    return (\n        <Button variant=\"contained\" onClick={() => handleClick()}>\n            Logout\n        </Button>\n    )\n}\n\nexport default withRouter (Logout);","import React from 'react';\nimport './UserHero.css';\n\nimport useSWR from 'swr'\nimport { css } from \"@emotion/core\";\nimport BounceLoader from \"react-spinners/BounceLoader\";\n\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport LocalActivityIcon from '@material-ui/icons/LocalActivity';\n\nimport Logout from '../Auth/Logout';\nexport default function UserHero(props) {\n\n    const { data } = useSWR('/auth/profile')\n    const bounceLoaderCss = css`display: block; margin: 0 auto;`;\n\n    if (!props.activities) return null;\n    if (!data) return <BounceLoader color={\"#F19820\"} loading={true} css={bounceLoaderCss} size={100} />\n\n    const activity = props.activities.pop()\n    const thumbnail = `/activities/${activity.activityId}/${activity.thumbnail}`\n\n    return (\n        <div className=\"UserHero\" style={{ backgroundImage: `url(\"${thumbnail}\"` }}>\n            <div className=\"UserHeroContent\" style={{ 'background': `linear-gradient(90deg, rgba(241,152,32,1) 40%, rgba(255,255,255,0) 90%)` }}>\n                \n                <Logout className=\"UserHeroLink\" />\n                <h1>{data.username}</h1>\n                <p><AccountCircleIcon className=\"Icon\" /> Member since:</p>\n                <p className=\"caption\">{data.registered}</p>\n\n                <p><LocalActivityIcon className=\"Icon\" /> Total activities:</p>\n                <p className=\"caption\">52</p>\n                <span className=\"stamp is-nope\">Super member</span>\n                \n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport './UserMenu.css';\n\nimport useSWR from 'swr'\nimport { css } from \"@emotion/core\";\nimport BounceLoader from \"react-spinners/BounceLoader\";\n\nimport UserHero from './UserHero';\n\nimport config from '../../config';\n\nexport default function UserMenu() {\n\n    const bounceLoaderCss = css`display: block; margin: 0 auto;`;\n    const { data } = useSWR(config.activitiesListUrl)\n    if (!data) return <BounceLoader color='#F19820' loading={true} css={bounceLoaderCss} size={100} />\n\n    var activities=[...data.activities]\n    activities.map((activity, i) => activities[i].activityId = i+1)\n\n    return (\n        <div className=\"UserMenu\">\n            <UserHero activities={activities}/>              \n        </div>\n    )\n}","import React from 'react';\nimport './CardComponent.css'\n\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Link } from '@material-ui/core';\n\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\n\nfunction CardComponent(props) {\n    \n    return (\n        <div className=\"cardComponent\">\n            {props.activities.map((card, i) => (\n                \n                <div className=\"card\" key={i}>\n                    \n                    <div className=\"card-image\">\n                        <img src={`/activities/${card.activityId}/${card.thumbnail}`} alt=\"Header decoration\" />\n                    </div>\n                    \n                    <div className=\"content\">\n                        <h4>{card.title}</h4>\n                        <p>{card.description}</p>\n                    </div>\n                    \n                    <Link component={RouterLink}\n                        to={{pathname: `/activity/${card.activityId}`}}\n                        className=\"read-more\"\n                        style={{ textDecoration: 'none' }}>\n                       <span>Start activity <ChevronRightIcon className=\"chevron-right\" /></span>\n                    </Link>\n\n                </div>\n            ))}\n        </div>\n    )\n}\n\nexport default CardComponent;","import React from 'react';\n\nimport UserOnboarding from 'react-user-onboarding'\nimport 'react-user-onboarding/dist/index.css'\n\nclass Onboarding extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isVisible: (localStorage.getItem('onboardingComplete') === null)\n        }\n\n        this.story = [\n            {\n                component: 'modal',\n                intro: true,\n                children: (\n                    <p>Hey there! Welcome to Myo. As this is your first time, could we show you around?</p>\n                ),\n                className: 'introModal'\n            },\n            {\n                component: 'speech-bubble',\n                attachToId: 'HomeNavbarIcon',\n                children: (\n                    <p>This is the Home tab, where you can view all our activities, or you can click Spark, to start your custom creative journey.</p>\n                )\n            },\n            {\n                component: 'modal',\n                intro: false,\n                children: (\n                    <p>The main feature of Myo is a custom curated journey of creativity exercises, that adapts and matches what you need.</p>\n                )\n            },\n            {\n                component: 'modal',\n                intro: false,\n                children: (\n                    <p>We regularly add more exercises. Good luck with your creativity journey!</p>\n                )\n            }\n        ]\n    }\n\n    handleClose = () => {\n        localStorage.setItem('onboardingComplete', true);\n        this.setState({ isVisible: false })\n    }\n\n    render() {\n        return (\n            <UserOnboarding\n                story={this.story}\n                isVisible={this.state.isVisible}\n                onClose={this.handleClose}\n            />\n        )\n    }\n}\n\nexport default Onboarding;","import React from 'react';\nimport './Hero.css';\n\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Link } from '@material-ui/core';\n\nexport default function Hero(props) {\n\n    const activity = props.activities.pop()\n\n    const thumbnail = `/activities/${activity.activityId}/${activity.thumbnail}`\n    const pathname = `/activity/${activity.activityId}`\n\n    return (\n        <div className=\"Hero\" style={{ backgroundImage: `url(\"${thumbnail}\"`}}>\n            <div className=\"HeroContent\" style={{'background': `linear-gradient(90deg, rgba(241,152,32,1) 35%, rgba(255,255,255,0) 64%)`}}>\n                <h1>{activity.title}</h1>\n                <p>{activity.description}</p>\n\n                <Link component={RouterLink}\n                    to={{\n                        pathname: pathname,\n                        state: { activityId: activity.activityId }\n                    }}\n                    className=\"HeroLink\"\n                    style={{ textDecoration: 'none' }}>\n                    <button className=\"HeroButton\" >Start now</button>\n                </Link>\n\n            </div>\n        </div>\n    )\n}","import React from 'react';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Link } from '@material-ui/core';\n\nimport './ActivityAvatarList.css';\n\nexport default function ActivityAvatarList(props) {\n\n    const getThumbnail = (thumbnail, itemId) => `/activities/${itemId}/${thumbnail}`\n\n    return (\n        <Grid item>\n            <List dense={false}>\n                {props.activities.map((activity, i) => (\n                    <Link \n                        key={i} \n                        component={RouterLink}\n                        to={{ pathname: `/activity/${activity.activityId}` }}\n                        style={{ textDecoration: 'none', color: '#333' }}\n                    >\n                        <ListItem className=\"ListItem\" >\n                            <ListItemAvatar>\n                                <Avatar>\n                                    <img src={getThumbnail(activity.thumbnail, activity.activityId)} alt=\"Activity illustration\" />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={activity.title}\n                                secondary={activity.description}\n                            />\n                            <ListItemSecondaryAction>\n                                <IconButton edge=\"end\">\n                                    <NavigateNextIcon />\n                                </IconButton>\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                        \n                        <Divider variant=\"inset\" component=\"li\" />\n                    </Link>\n                ))}\n            </List>\n        </Grid>\n    );\n}\n","import React from 'react';\nimport './HeroList.css';\n\nimport ActivityAvatarList from './ActivityAvatarList';\n\nexport default function HeroList(props) {\n    \n    // Split the array in half\n    const half = Math.ceil(props.activities.length / 2);    \n    const firstHalf = props.activities.splice(0, half)\n    const secondHalf = props.activities.splice(-half)\n\n    return (\n        <div className=\"HeroList\">\n            <h1>{props.title}</h1>\n            <div className=\"HeroListContent\">\n                <ActivityAvatarList className=\"ActivityAvatarList\" activities={firstHalf} />\n                <ActivityAvatarList className=\"ActivityAvatarList\" activities={secondHalf} />\n            </div>\n        </div>\n    )\n}","import React from \"react\"\nimport useSWR from 'swr'\nimport './ViewActivitiesComponent.css'\n\nimport { css } from \"@emotion/core\";\nimport BounceLoader from \"react-spinners/BounceLoader\";\n\nimport CardComponent from '../Card/CardComponent';\nimport Onboarding from '../Onboarding/Onboarding';\nimport Hero from '../Hero/Hero';\nimport HeroList from '../HeroList/HeroList';\n\nimport config from '../../config';\n\nexport default function ViewActivitiesComponent() {\n\n    const bounceLoaderCss = css`display: block; margin: 0 auto;`;\n\n    const { data } = useSWR(config.activitiesListUrl)\n\n    if (!data) return <BounceLoader color='#F19820' loading={true} css={bounceLoaderCss} size={100} />\n    \n    var activities\n    const setActivities = () => {\n        activities=[...data.activities]\n        activities.map((activity, i) => activities[i].activityId = i+1)\n    }\n    setActivities();\n\n\n    // Function to remove from the main array ${count} amount of items\n    const getRandomActivities = (count=false) => {\n        if (activities.length < 1) {setActivities()}\n\n        if (!count) {count = activities.length}\n        return [...Array(count)].map(() => activities.splice(Math.floor(Math.random() * activities.length), 1)[0]);\n    }\n    \n    return (\n        <div className=\"ViewActivitiesComponent\">\n            <Onboarding />\n            <Hero activities={getRandomActivities(1)}/>\n            <HeroList activities={getRandomActivities(4)} title=\"Activities we love right now\"/>\n            <CardComponent activities={getRandomActivities(3)} />\n            <Hero activities={getRandomActivities(1)}/>\n            <HeroList activities={getRandomActivities(4)} title=\"Trending this week\"/>\n            <CardComponent activities={getRandomActivities(6)} />\n            <Hero activities={getRandomActivities(1)}/>\n            <CardComponent activities={getRandomActivities(3)} />\n        </div>\n    )\n}","import React from \"react\";\nimport { Button } from '@material-ui/core';\n\nimport './ActivityIntroduction.css';\n\nexport default function ActivityIntroduction(props) {\n    return (\n        <div className=\"ActivityIntroduction\">\n            {(props.activity.thumbnail.split('.').pop() === 'mp4') ? (\n                <video className=\"ActivityVideo\" autoPlay muted loop playsInline controls >\n                    <source src={`/activities/${props.activityId}/${props.activity.thumbnail}`} type=\"video/mp4\" />\n                </video>\n            ) : (\n                <img src={'/activities/' + (props.activityId) + '/' + props.activity.thumbnail} alt=\"Header decoration\" />\n            )}\n            <h1>{props.activity.title}</h1>\n            <p dangerouslySetInnerHTML={{ __html: props.activity.description }}></p>\n            <Button variant=\"contained\" color=\"primary\" onClick={props.handleStartActivity}>\n                I'm ready\n                </Button>\n        </div>\n    )\n}\n","import React from 'react';\n\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: 150 + theme.spacing(3) * 2\n    },\n    margin: {\n        height: theme.spacing(3),\n    },\n}));\n\nconst iOSBoxShadow =\n    '0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.13),0 0 0 1px rgba(0,0,0,0.02)';\n\nconst marks = [\n    {\n        value: 0,\n        label: '😟'\n    },\n    {\n        value: 50,\n        label: '😌'\n    },\n    {\n        value: 100,\n        label: '🧑‍🎨'\n    },\n];\n\nconst IOSSlider = withStyles({\n    root: {\n        color: '#F19820',\n        height: 2,\n        padding: '15px 0',\n    },\n    thumb: {\n        height: 28,\n        width: 28,\n        backgroundColor: '#fff',\n        boxShadow: iOSBoxShadow,\n        marginTop: -14,\n        marginLeft: -14,\n        '&:focus, &:hover, &$active': {\n            boxShadow: '0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.3),0 0 0 1px rgba(0,0,0,0.02)',\n            // Reset on touch devices, it doesn't add specificity\n            '@media (hover: none)': {\n                boxShadow: iOSBoxShadow,\n            },\n        },\n    },\n    active: {},\n    valueLabel: {\n        left: 'calc(-50% + 12px)',\n        top: -22,\n        '& *': {\n            background: 'transparent',\n            color: '#000',\n        },\n    },\n    track: {\n        height: 2,\n    },\n    rail: {\n        height: 2,\n        opacity: 0.5,\n        backgroundColor: '#bfbfbf',\n    },\n    mark: {\n        backgroundColor: '#bfbfbf',\n        height: 8,\n        width: 1,\n        marginTop: -3,\n    },\n    markActive: {\n        opacity: 1,\n        backgroundColor: '#F19820',\n    },\n})(Slider);\n \nexport default function FeedbackSlider() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <IOSSlider aria-label=\"ios slider\" defaultValue={75} marks={marks} valueLabelDisplay=\"off\" />\n        </div>\n    );\n}\n","import React from 'react';\n\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Link, Button, TextField } from '@material-ui/core';\n\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\n\nimport Rate from 'rc-rate';\nimport 'rc-rate/assets/index.css';\n\nimport FeedbackSlider from './Slider';\n\nimport './ReviewDialog.css';\n\nexport default function ReviewDialog(props) {\n\n    const gatherData = () => {\n        props.onSubmit()\n    }\n\n    const [feedback, setFeedback] = React.useState('');\n\n    return (\n        <Dialog  onClose={props.onClose} open={props.open} disableEnforceFocus>\n            <DialogTitle align=\"center\" id=\"dialog-title\">Congratulations! 🎉</DialogTitle>\n            <DialogContent align=\"center\"  className=\"ReviewDialogContent\">\n                <DialogContentText>\n                    How did you feel?\n                        <FeedbackSlider />\n                </DialogContentText>\n                <DialogContentText>\n                    How would you rate this activity?\n                        <br />\n                    <Rate />\n                </DialogContentText>\n                <DialogContentText>\n\n                    <TextField\n                        fullWidth\n                        align=\"center\" \n                        id=\"feedbackText\"\n                        multiline\n                        name=\"feedbackText\"\n                        label=\"Any notes to yourself?\"\n                        value={feedback}\n                        onChange={event => setFeedback(event.target.value)}\n                    />\n                </DialogContentText>\n\n            </DialogContent>\n            <DialogActions>\n                <Link component={RouterLink} to={{ pathname: \"/\" }} style={{ textDecoration: 'none' }}>\n                    <Button onClick={props.onClose}>\n                        Skip\n                    </Button>\n                </Link>\n                <Link component={RouterLink} to={{ pathname: \"/\" }} style={{ textDecoration: 'none' }}>\n                    <Button variant=\"contained\" onClick={gatherData} color=\"primary\" type=\"submit\">\n                    Done\n                    </Button>\n                </Link>\n            </DialogActions>\n        </Dialog>\n    )\n}","import React, { useState } from \"react\";\nimport { Button } from '@material-ui/core';\n\nimport './ActivityCarousel.css';\n\n// Import Swiper React components\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport SwiperCore, { Navigation, Pagination, A11y } from 'swiper';\nimport 'swiper/swiper.scss';\nimport 'swiper/components/navigation/navigation.scss';\nimport 'swiper/components/scrollbar/scrollbar.scss';\nimport 'swiper/components/pagination/pagination.scss';\n\nimport ReviewDialog from './ReviewDialog';\n\nimport { postApiData } from '../../services/api.service';\n\nSwiperCore.use([Navigation, Pagination, A11y]);\n\nexport default function ActivityCarousel(props) {\n\n    const [reviewDialogOpen, setReviewDialogOpen] = React.useState(false)\n    const handleClose = () => setReviewDialogOpen (false)\n\n    const [activityCompleted, setActivityCompleted] = useState(false)\n    const finishedActivity = () => setActivityCompleted(true)\n\n    // API handlers for order deletion\n    const handleSubmitFeedback = (feedback) => {\n        setReviewDialogOpen(false)\n        postApiData('/api/orders/delete', { feedback: feedback })\n    }\n\n    return (\n        <div className=\"ActivityCarousel\">\n            <Swiper\n                spaceBetween={50}\n                slidesPerView={1}\n                navigation\n                pagination={{ clickable: true, type: 'progressbar', }}\n                onReachEnd={finishedActivity}\n            >\n                {props.activity.pages.map((page, i) => {\n                    return (\n                        <SwiperSlide key={i}>\n                            {(page.thumbnail.split('.').pop() === 'mp4') ? (\n                                <video className=\"ActivityVideo\" autoPlay muted loop playsInline controls >\n                                    <source src={`/activities/${props.activityId}/${page.thumbnail}`} type=\"video/mp4\" />\n                                </video>\n                            ) : (\n                                <img src={encodeURI('/activities/' + (props.activityId) + '/' + page.thumbnail)} alt=\"Header decoration\" />\n                            )}\n                            \n                            <div className=\"text\">\n                                <h1>{page.title}</h1>\n                                <p dangerouslySetInnerHTML={{ __html: page.description }}></p>\n                            </div>\n                        </SwiperSlide>\n                    )\n                })}\n\n            </Swiper>\n            {activityCompleted ? (\n                    <Button variant=\"contained\" onClick={() => setReviewDialogOpen(true)} color=\"primary\">Finish</Button>\n            ) : null\n            }\n\n            { reviewDialogOpen ? \n                <ReviewDialog open={reviewDialogOpen} onSubmit={handleSubmitFeedback} onClose={handleClose} />\n            : null }\n        </div >\n    )\n}\n","import React, { useState } from \"react\";\nimport { useParams } from 'react-router-dom';\n\nimport './Activity.css'\n\nimport useSWR from 'swr'\n\nimport { css } from \"@emotion/core\";\nimport BounceLoader from \"react-spinners/BounceLoader\";\n\nimport ActivityIntroduction from './ActivityIntroduction';\nimport ActivityCarousel from './ActivityCarousel';\n\n\nexport default function Activity() {\n\n    let { activityId } = useParams();\n\n    const [showActivityIntroduction, setShowActivityIntroduction] = useState(true)\n    \n    const startActivity = () => setShowActivityIntroduction(false)\n    \n    const { data } = useSWR(`/activities/api/get/${activityId-1}`)\n\n    const override = css`display: block; margin: 0 auto;`;\n    if (!data) return <BounceLoader color={\"#F19820\"} loading={true} css={override} size={100} />\n\n    return (\n        <div className=\"Activity\">\n            { showActivityIntroduction ?\n                (\n                    <ActivityIntroduction activityId={activityId} activity={data.activity} handleStartActivity={startActivity}/>\n                )\n                :\n                (\n                    <ActivityCarousel activityId={activityId} activity={data.activity}/>\n                )\n            }  \n        </div>\n    )\n}","import React from \"react\";\n\nimport './ActivityBubble.css'\n\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Link } from '@material-ui/core';\n\nexport default function ActivityBubble(props) {\n\n    const getActivityId = () => {\n        return props.activityId + 1;\n    }\n\n    const fullThumbnailPath = '/activities/' + getActivityId() + '/' + props.thumbnail;\n    const thumbnailUrl = \"url('\" + fullThumbnailPath + \"')\";\n\n    return (\n        <Link component={RouterLink}\n            to={{\n                pathname: \"/activity/\" + getActivityId(),\n            }}\n            className=\"ActivityBubble\"\n            style={{ backgroundColor: props.backgroundColour + 'd0', textDecoration: 'none' }}>\n            <div className=\"ActivityDetails\" style={{\n                opacity: props.bubbleSize > 50 ? 1 : 0,\n                transition: \"opacity 0.1s ease\",\n            }}>\n                <div className=\"ActivityThumbnail\" style={{ backgroundImage: thumbnailUrl }}>\n                </div>\n                <h1>{props.title}</h1>\n            </div>\n        </Link>\n    )\n\n}","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport useSWR from 'swr'\n\nimport BubbleUI from \"react-bubble-ui\";\nimport \"react-bubble-ui/dist/index.css\";\n\nimport ActivityBubble from \"./ActivityBubble\";\n\nimport { css } from \"@emotion/core\";\nimport BounceLoader from \"react-spinners/BounceLoader\";\n\nimport UserOnboarding from '../UserOnboarding/UserOnboarding'\n\nimport \"./Spark.css\";\n\nimport config from '../../config';\n\nfunction Spark() {\n\n    const bounceLoaderCss = css`display: block; margin: 0 auto;`;\n    \n    // Check if user has completed onboarding\n    var { data: onboarding, mutate } = useSWR(config.onboardingStatusUrl);\n    var { data: activities } = useSWR(config.activitiesListUrl);\n\n    if (!onboarding) return <BounceLoader color=\"#F19820\" loading={true} css={bounceLoaderCss} size={100} />\n    if (!activities) return <BounceLoader color=\"#F19820\" loading={true} css={bounceLoaderCss} size={100} />\n\n    if (onboarding.hasOwnProperty('error')) {\n        return (\n            <UserOnboarding onComplete={mutate} />\n        )\n    }\n\n    const options = {\n        size: 165,\n        minSize: 20,\n        gutter: 10,\n        provideProps: true,\n        numCols: 5,\n        fringeWidth: 120,\n        yRadius: 200,\n        xRadius: 100,\n        cornerRadius: 20,\n        showGuides: false,\n        compact: true,\n        gravitation: 5\n    }\n\n    return (\n        <div className=\"Spark\">\n            <BubbleUI options={options} className=\"sparkBubbleUi\">\n                { activities.activities.map((activity, i) => {\n                    return (\n                        <ActivityBubble key={i} activityId={i} title={activity.title} thumbnail={activity.thumbnail} backgroundColour={activity.background_colour} />\n                    )\n                })}\n            </BubbleUI>\n        </div>\n    )\n\n}\n\nexport default withRouter(Spark);","// React imports\nimport React, { useEffect } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\n// Authentication imports\nimport { PrivateRoute } from './components/Auth/PrivateRoute';\nimport Login from './components/Auth/Login';\nimport ResetWithToken from './components/Auth/ResetWithToken';\nimport Reset from './components/Auth/Reset';\nimport SignUp from './components/Auth/SignUp';\nimport ConfirmEmail from './components/Auth/ConfirmEmail';\nimport UserOnboarding from './components/UserOnboarding/UserOnboarding'\n\n// App styling\nimport './App.css';\nimport './fonts/font.css';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles'\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\n// Navigation components\nimport Navbar from './components/Navbar/Navbar';\nimport TopBar from './components/TopBar/TopBar';\n\n// Page components\nimport SplashScreen from './components/SplashScreen/SplashScreen';\nimport UserMenu from './components/UserMenu/UserMenu.jsx';\nimport ViewActivitiesComponent from './components/ViewActivities/ViewActivitiesComponent';\nimport Activity from './components/Activity/Activity';\nimport Spark from './components/Spark/Spark';\n\n// Notifications\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nexport const SnackbarContext = React.createContext();\n\n\nexport default function App() {\n\n  const [splashScreen, setSplashScreen] = React.useState(true)\n\n  useEffect(() => {\n    setTimeout(() => {\n      setSplashScreen(false)\n    }, 1500);\n  }, []);\n\n  const theme = createMuiTheme({\n    palette: {\n      type: (useMediaQuery('(prefers-color-scheme: dark)') ? 'dark' : 'light'),\n      primary: {\n        main: '#F19820'\n      },\n      secondary: {\n        main: '#CAE8FF'\n      }\n    },\n    typography: {\n      fontFamily: [\n        'F37 Ginger',\n        '-apple-system',\n        'BlinkMacSystemFont',\n        '\"Segoe UI\"',\n        'Roboto',\n        '\"Helvetica Neue\"',\n        'Arial',\n        'sans-serif',\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"',\n      ].join(',')\n    },\n    overrides: {\n      MuiTouchRipple: {\n        child: {\n          backgroundColor: '#F19820'\n        }\n      }\n    }\n  });\n\n  // Snackbar\n  const [snackbar, setSnackbar] = React.useState({\n    text: '',\n    severity: '',\n    open: false,\n  });\n  const handleClose = () => {\n    setSnackbar({ open: false });\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <div className=\"App\">\n        <link rel=\"shortcut icon\" href=\"./favicon.ico\" />\n        <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\n\n        <header className=\"App-header\">\n\n          <SnackbarContext.Provider value={{ snackbar, setSnackbar }}>\n\n            <Snackbar open={snackbar.open} autoHideDuration={6000} onClose={handleClose}>\n              <MuiAlert onClose={handleClose} severity={snackbar.severity}>\n                {snackbar.text}\n              </MuiAlert>\n            </Snackbar>\n\n            {splashScreen ? (<SplashScreen />) : (\n\n              <BrowserRouter>\n\n                <TopBar />\n\n                <div className=\"AppWrapper\">\n\n                  <Switch>\n                    <Route exact path=\"/\"> <ViewActivitiesComponent /> </Route>\n\n                    <Route exact path=\"/activity/:activityId\"> <Activity /> </Route>\n\n                    <PrivateRoute exact path=\"/spark\" component={Spark} />\n\n                    <PrivateRoute exact path=\"/user\" component={UserMenu} />\n\n                    <PrivateRoute exact path=\"/onboarding\" component={UserOnboarding} />\n\n                    <Route exact path=\"/login\" component={Login} />\n\n                    <Route exact path=\"/reset\" component={Reset} />\n\n                    <Route exact path=\"/register\" component={SignUp} />\n\n                    <Route exact path=\"/confirm/:token\" component={ConfirmEmail} />\n\n                    <Route exact path=\"/reset/:token\" component={ResetWithToken} />\n                  </Switch>\n\n                </div>\n\n                <Navbar />\n\n              </BrowserRouter>\n            )}\n\n          </SnackbarContext.Provider>\n        </header>\n      </div>\n    </ThemeProvider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import axios from 'axios';\n\nimport { authenticationService } from '../services';\nimport { refreshToken } from '../helpers';\nimport config from '../config';\n\naxios.interceptors.response.use(\n    (response) => {\n      return response\n    },\n    (error) => {\n      return new Promise((resolve) => {\n        const originalRequest = error.config\n        const refreshTokenString = refreshToken()\n        if (error.response && error.response.status === 401 && error.config && !error.config.__isRetryRequest && refreshTokenString) {\n          originalRequest._retry = true\n  \n          const response = fetch(config.authRefresh, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `Bearer ${refreshTokenString}`\n            },\n            body: JSON.stringify({\n              refresh: refreshToken,\n            }),\n          })\n            .then((res) => res.json())\n            .then((data) => {\n              const currentUser = JSON.parse(localStorage.getItem('currentUser'));\n              currentUser['access_token'] = data.access_token;\n              authenticationService.updateUser(currentUser);\n\n              window.location.reload();\n            })\n          resolve(response)\n        }\n  \n        return Promise.reject(error)\n      })\n    },\n  )","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { SWRConfig } from 'swr'\n\nimport './interceptors/axios-interceptor';\nimport { fetcher } from './services';\n\nReactDOM.render(\n\n    <SWRConfig value={{ fetcher }}>\n        <App />\n    </SWRConfig>\n    ,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}