{"version":3,"sources":["Navbar/Navbar.jsx","components/TopBar/TopBar.jsx","components/SplashScreen/SplashScreen.jsx","components/Auth/LoginButton.jsx","components/Auth/LogoutButton.jsx","components/Auth/Profile.jsx","components/UserMenu/UserMenu.jsx","components/Card/CardComponent.jsx","components/Onboarding/Onboarding.jsx","components/Hero/Hero.jsx","components/HeroList/ActivityAvatarList.jsx","components/HeroList/HeroList.jsx","components/ViewActivities/ViewActivitiesComponent.jsx","components/Activity/ActivityIntroduction.jsx","components/Activity/ActivityCarousel.jsx","components/Activity/Activity.jsx","components/Spark/ActivityBubble.jsx","components/Spark/Spark.jsx","components/Auth/Login.jsx","components/Auth/SignUp.jsx","components/Auth/Reset.jsx","App.js","serviceWorker.js","index.js"],"names":["SimpleBottomNavigation","React","useState","value","setValue","BottomNavigation","onChange","event","newValue","showLabels","className","BottomNavigationAction","component","Link","to","id","label","icon","TopBar","src","alt","RouterLink","fontSize","Component","SplashScreen","LoginButton","loginWithRedirect","useAuth0","onClick","LogoutButton","logout","returnTo","window","location","origin","Profile","user","isAuthenticated","isLoading","picture","name","email","UserMenu","CardComponent","props","getActivityId","iteration","cards","map","card","i","thumbnail","title","description","pathname","state","activityId","style","textDecoration","Onboarding","handleClose","localStorage","setItem","setState","isVisible","getItem","story","intro","children","attachToId","this","onClose","Hero","randIndex","Math","floor","random","length","activity","backgroundImage","ActivityAvatarList","activities","Grid","item","List","dense","count","_arr","Array","splice","pickRandom","color","ListItem","ListItemAvatar","Avatar","itemId","ListItemText","primary","secondary","ListItemSecondaryAction","IconButton","edge","Divider","variant","HeroList","ViewActivitiesComponent","bounceLoaderCss","css","data","useSWR","loading","size","ActivityIntroduction","dangerouslySetInnerHTML","__html","Button","handleStartActivity","activityCompleted","setActivityCompleted","spaceBetween","slidesPerView","navigation","pagination","clickable","type","onReachEnd","pages","page","encodeURI","class","Activity","useParams","showActivityIntroduction","setShowActivityIntroduction","override","SwiperCore","use","Navigation","Pagination","A11y","ActivityBubble","thumbnailUrl","backgroundColor","backgroundColour","opacity","bubbleSize","transition","Spark","options","minSize","gutter","provideProps","numCols","fringeWidth","yRadius","xRadius","cornerRadius","showGuides","compact","gravitation","background_colour","Login","SignUp","Reset","App","splashScreen","setTimeout","rel","href","exact","path","Boolean","hostname","match","ReactDOM","render","domain","clientId","redirectUri","fetcher","fetch","then","res","json","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"ugBAYe,SAASA,IACpB,MAA0BC,IAAMC,SAAS,GAAzC,mBAAOC,EAAP,KAAcC,EAAd,KAEA,OACE,eAACC,EAAA,EAAD,CACEF,MAAOA,EACPG,SAAU,SAACC,EAAOC,GAChBJ,EAASI,IAEXC,YAAU,EACVC,UAAU,SANZ,UAQE,cAACC,EAAA,EAAD,CAAwBC,UAAWC,IAAMC,GAAG,IAAIC,GAAG,iBAAiBC,MAAM,OAAOC,KAAM,cAAC,IAAD,MACvF,cAACN,EAAA,EAAD,CAAwBC,UAAWC,IAAMC,GAAG,SAASC,GAAG,kBAAkBC,MAAM,QAAQC,KAAM,cAAC,IAAD,S,sCCHvFC,E,4JAbb,WACI,OACI,sBAAKR,UAAU,SAAf,UACE,qBAAKA,UAAU,UAAUS,IAAI,mBAAmBC,IAAI,iBACpD,qBAAKV,UAAU,UAAUS,IAAI,uBAAuBC,IAAI,iBACxD,cAACP,EAAA,EAAD,CAAMD,UAAWS,IAAYP,GAAG,QAAQJ,UAAU,cAAlD,SACE,cAAC,IAAD,CAAmBY,SAAS,QAAQZ,UAAU,2B,GARvCT,IAAMsB,W,MCJZ,SAASC,IACtB,OACE,qBAAKd,UAAU,eAAf,SACE,qBAAKA,UAAU,sBAAf,SACE,eAAC,WAAD,WACE,qBAAKS,IAAI,4BAA4BC,IAAI,aACzC,oD,kBCAKK,EANK,WAChB,IAAQC,EAAsBC,cAAtBD,kBAER,OAAO,wBAAQE,QAAS,kBAAMF,KAAvB,qBCOIG,EAVM,WACjB,IAAQC,EAAWH,cAAXG,OAER,OACI,wBAAQF,QAAS,kBAAME,EAAO,CAAEC,SAAUC,OAAOC,SAASC,UAA1D,sBCcOC,EAlBC,WACd,MAA6CR,cAArCS,EAAR,EAAQA,KAAMC,EAAd,EAAcA,gBAEd,OAFA,EAA+BC,UAGtB,8CAIPD,GACE,gCACE,qBAAKlB,IAAKiB,EAAKG,QAASnB,IAAKgB,EAAKI,OAClC,6BAAKJ,EAAKI,OACV,4BAAIJ,EAAKK,YCRF,SAASC,IAEpB,OACI,sBAAKhC,UAAU,WAAf,UACI,8CACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,O,gFC+BGiC,MArCf,SAAuBC,GAEnB,IAAMC,EAAgB,SAACC,GACnB,OAAOA,EAAY,GAGvB,OACI,qBAAKpC,UAAU,gBAAf,SACKkC,EAAMG,MAAMC,KAAI,SAACC,EAAMC,GAAP,OAEb,sBAAKxC,UAAU,OAAf,UAEI,qBAAKA,UAAU,aAAf,SACI,qBAAKS,IAAK,eAAiB0B,EAAcK,GAAK,IAAMD,EAAKE,UAAW/B,IAAI,wBAG5E,sBAAKV,UAAU,UAAf,UACI,6BAAKuC,EAAKG,QACV,4BAAIH,EAAKI,iBAGb,cAACxC,EAAA,EAAD,CAAMD,UAAWS,IACbP,GAAI,CACAwC,SAAU,aAAeT,EAAcK,GACvCK,MAAO,CAAEC,WAAYZ,EAAMY,aAE/B9C,UAAU,YACV+C,MAAO,CAAEC,eAAgB,QAN7B,SAOG,mDAAqB,cAAC,IAAD,CAAkBhD,UAAU,yBAlB7BwC,S,QC4C5BS,G,yDAxDX,WAAYf,GAAQ,IAAD,8BACf,cAAMA,IAuCVgB,YAAc,WACVC,aAAaC,QAAQ,sBAAsB,GAC3C,EAAKC,SAAS,CAAEC,WAAW,KAvC3B,EAAKT,MAAQ,CACTS,UAA2D,OAA/CH,aAAaI,QAAQ,uBAGrC,EAAKC,MAAQ,CACT,CACItD,UAAW,QACXuD,OAAO,EACPC,SACI,iHAEJ1D,UAAW,cAEf,CACIE,UAAW,gBACXyD,WAAY,iBACZD,SACI,6JAGR,CACIxD,UAAW,QACXuD,OAAO,EACPC,SACI,qJAGR,CACIxD,UAAW,QACXuD,OAAO,EACPC,SACI,2GAlCG,E,0CA6CnB,WACI,OACI,cAAC,IAAD,CACIF,MAAOI,KAAKJ,MACZF,UAAWM,KAAKf,MAAMS,UACtBO,QAASD,KAAKV,kB,GAnDL3D,IAAMsB,Y,OCChB,SAASiD,EAAK5B,GACzB,IAAMG,EAAQH,EAAMG,MAEd0B,EAAYC,KAAKC,MAAMD,KAAKE,SAAW7B,EAAM8B,QAC7CC,EAAW/B,EAAM0B,GACjBtB,EAAS,sBAAkBsB,EAAY,EAA9B,YAAmC1B,EAAM0B,GAAWtB,WAC7DG,EAAQ,oBAAgBmB,EAAY,GAE1C,OACI,qBAAK/D,UAAU,OAAO+C,MAAO,CAAEsB,gBAAgB,QAAD,OAAU5B,EAAV,MAA9C,SACI,sBAAKzC,UAAU,cAAc+C,MAAO,CAAC,WAAa,2EAAlD,UACI,6BAAKqB,EAAS1B,QACd,4BAAI0B,EAASzB,cAEb,cAACxC,EAAA,EAAD,CAAMD,UAAWS,IACbP,GAAI,CACAwC,SAAUA,EACVC,MAAO,CAAEC,WAAYZ,EAAMY,aAE/B9C,UAAU,WACV+C,MAAO,CAAEC,eAAgB,QAN7B,SAOI,wBAAQhD,UAAU,aAAlB,8B,iICTL,SAASsE,GAAmBpC,GAEvC,IAAKA,EAAMqC,WAAY,OAAO,KAE9BrC,EAAMqC,WAAWjC,KAAI,SAAC8B,EAAU5B,GAAX,OAAiBN,EAAMqC,WAAW/B,GAAGnC,GAAKmC,EAAI,KAWnE,OACI,cAACgC,EAAA,EAAD,CAAMC,MAAI,EAAV,SACI,8BACI,cAACC,EAAA,EAAD,CAAMC,OAAO,EAAb,SAZO,WAAgB,IAAfC,EAAc,uDAAN,EACpBC,EAAI,YAAO3C,EAAMqC,YACrB,OAAO,YAAIO,MAAMF,IAAQtC,KAAI,kBAAMuC,EAAKE,OAAOf,KAAKC,MAAMD,KAAKE,SAAWW,EAAKV,QAAS,GAAG,MAW9Ea,GAAa1C,KAAI,SAACmC,EAAMjC,GAAP,OACd,gCACI,cAACrC,EAAA,EAAD,CAAMD,UAAWS,IACbP,GAAI,CAAEwC,SAAS,aAAD,OAAe6B,EAAKpE,KAClC0C,MAAO,CAAEC,eAAgB,OAAQiC,MAAO,QAF5C,SAII,eAACC,EAAA,EAAD,CAAUlF,UAAU,WAApB,UACI,cAACmF,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACI,qBAAKpF,UAAU,oBAAoBS,KAjBrDgC,EAiBuEgC,EAAKhC,UAjBjE4C,EAiB4EZ,EAAKpE,GAhBxG,eAAN,OAAsBgF,EAAtB,YAAgC5C,IAgBmF/B,IAAI,8BAG3F,cAAC4E,EAAA,EAAD,CACIC,QAASd,EAAK/B,MACd8C,UAAWf,EAAK9B,cAEpB,cAAC8C,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAYC,KAAK,MAAjB,SACI,cAAC,KAAD,aAKhB,cAACC,EAAA,EAAD,CAASC,QAAQ,QAAQ3F,UAAU,SAtB7BsC,GATT,IAACC,EAAW4C,WCxBtB,SAASS,GAAS5D,GAE7B,IAAMqC,EAAarC,EAAMG,MAEzB,OACI,sBAAKrC,UAAU,WAAf,UACI,8DACA,sBAAKA,UAAU,kBAAf,UACI,qBAAKA,UAAU,qBAAf,SACI,cAAC,GAAD,CAAoBuE,WAAYA,MAEpC,qBAAKvE,UAAU,qBAAf,SACI,cAAC,GAAD,CAAoBuE,WAAYA,YCLrC,SAASwB,KAEpB,IAAMC,EAAkBC,cAAH,yDAEbC,EAASC,YAAO,wBAAhBD,KAER,OAAKA,EAGD,sBAAKlG,UAAU,0BAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,CAAMqC,MAAO6D,EAAK3B,aAClB,cAAC,GAAD,CAAUlC,MAAO6D,EAAK3B,aACtB,cAAC,EAAD,CAAelC,MAAO6D,EAAK3B,gBAPjB,cAAC,IAAD,CAAcU,MAAO,UAAWmB,SAAS,EAAMH,IAAKD,EAAiBK,KAAM,M,4BCblF,SAASC,GAAqBpE,GACzC,OACI,sBAAKlC,UAAU,uBAAf,UACI,qBAAKS,IAAK,eAAkByB,EAAMY,WAAc,IAAMZ,EAAMkC,SAAS3B,UAAW/B,IAAI,sBACpF,6BAAKwB,EAAMkC,SAAS1B,QACpB,mBAAG6D,wBAAyB,CAAEC,OAAQtE,EAAMkC,SAASzB,eACrD,cAAC8D,GAAA,EAAD,CAAQZ,QAAQ,YAAYZ,MAAM,UAAU/D,QAASgB,EAAMwE,oBAA3D,0B,sGCKG,SAASJ,GAAqBpE,GAEzC,MAAkD1C,oBAAS,GAA3D,mBAAOmH,EAAP,KAA0BC,EAA1B,KAGA,OACI,sBAAK5G,UAAU,mBAAf,UACI,cAAC,KAAD,CACI6G,aAAc,GACdC,cAAe,EACfC,YAAU,EACVC,WAAY,CAAEC,WAAW,EAAMC,KAAM,eACrCC,WATa,kBAAMP,GAAqB,IAI5C,SAOK1E,EAAMkC,SAASgD,MAAM9E,KAAI,SAAC+E,EAAM7E,GAC7B,OACI,eAAC,KAAD,WACI,qBAAK/B,IAAK6G,UAAU,eAAkBpF,EAAMY,WAAc,IAAMuE,EAAK5E,WAAY/B,IAAI,sBACrF,sBAAK6G,MAAM,OAAX,UACI,6BAAKF,EAAK3E,QACV,mBAAG6D,wBAAyB,CAAEC,OAAQa,EAAK1E,oBAJjCH,QAW7BmE,EACG,cAACxG,EAAA,EAAD,CAAMD,UAAWS,IACbP,GAAI,CAAEwC,SAAU,KAChBG,MAAO,CAAEC,eAAgB,QAF7B,SAGI,cAACyD,GAAA,EAAD,CAAQZ,QAAQ,YAAYZ,MAAM,UAAlC,oBAEJ,QCpCD,SAASuC,KAEpB,IAAM1E,EAAe2E,cAAf3E,WAEN,EAAgEtD,oBAAS,GAAzE,mBAAOkI,EAAP,KAAiCC,EAAjC,KAIQzB,EAASC,YAAO,uBAAD,OAAwBrD,EAAW,IAAlDoD,KAEF0B,EAAW3B,cAAH,2DACd,OAAKC,EAGD,qBAAKqB,MAAM,WAAX,SACMG,EAEM,cAAC,GAAD,CAAsB5E,WAAYA,EAAYsB,SAAU8B,EAAK9B,SAAUsC,oBAXjE,kBAAMiB,GAA4B,MAexC,cAAC,GAAD,CAAkB7E,WAAYA,EAAYsB,SAAU8B,EAAK9B,aAVvD,cAAC,IAAD,CAAca,MAAO,UAAWmB,SAAS,EAAMH,IAAK2B,EAAUvB,KAAM,MDV1FwB,KAAWC,IAAI,CAACC,KAAYC,KAAYC,O,2BEPzB,SAASC,GAAehG,GAEnC,IAAMC,EAAgB,WAClB,OAAOD,EAAMY,WAAa,GAIxBqF,EAAe,SADK,eAAiBhG,IAAkB,IAAMD,EAAMO,WACtB,KAEnD,OACI,cAACtC,EAAA,EAAD,CAAMD,UAAWS,IACbP,GAAI,CACAwC,SAAU,aAAeT,KAE7BnC,UAAU,iBACV+C,MAAO,CAAEqF,gBAAiBlG,EAAMmG,iBAAmB,KAAMrF,eAAgB,QAL7E,SAMI,sBAAKhD,UAAU,kBAAkB+C,MAAO,CACpCuF,QAASpG,EAAMqG,WAAa,GAAK,EAAI,EACrCC,WAAY,qBAFhB,UAII,qBAAKxI,UAAU,oBAAoB+C,MAAO,CAAEsB,gBAAiB8D,KAE7D,6BAAKjG,EAAMQ,a,cCqBZ+F,OArCf,WAEI,IAAMb,EAAW3B,cAAH,2DAiBNC,EAASC,YAAO,wBAAhBD,KAER,OAAKA,EAGD,qBAAKqB,MAAM,QAAX,SACI,cAAC,KAAD,CAAUmB,QArBF,CACZrC,KAAM,IACNsC,QAAS,GACTC,OAAQ,GACRC,cAAc,EACdC,QAAS,EACTC,YAAa,IACbC,QAAS,IACTC,QAAS,IACTC,aAAc,GACdC,YAAY,EACZC,SAAS,EACTC,YAAa,GASmBrJ,UAAU,gBAAtC,SACMkG,EAAK3B,WAAWjC,KAAI,SAAC8B,EAAU5B,GAC7B,OACI,cAAC,GAAD,CAAwBM,WAAYN,EAAGE,MAAO0B,EAAS1B,MAAOD,UAAW2B,EAAS3B,UAAW4F,iBAAkBjE,EAASkF,mBAAnG9G,UAPvB,cAAC,IAAD,CAAcyC,MAAO,UAAWmB,SAAS,EAAMH,IAAK2B,EAAUvB,KAAM,OC1B3EkD,G,4JALb,WACE,OAAO,0C,GAFShK,IAAMsB,WCKX2I,G,4JAJb,WACE,OAAO,2C,GAFUjK,IAAMsB,WCMZ4I,G,4JALb,WACE,OAAO,0C,GAFSlK,IAAMsB,WCuFX6I,G,kDAtEb,aAAe,IAAD,8BACZ,gBAEK7G,MAAQ,CACX8G,cAAc,GAJJ,E,qDAQd,WAAqB,IAAD,OAClBC,YAAW,WACT,EAAKvG,SAAS,CAAEsG,cAAc,MAC7B,Q,oBAGL,WACE,OACE,sBAAK3J,UAAU,MAAf,UACE,sBAAM6J,IAAI,gBAAgBC,KAAK,kBAC/B,sBAAMD,IAAI,aAAaC,KAAK,4DAE5B,wBAAQ9J,UAAU,aAAlB,SACG4D,KAAKf,MAAM8G,aACV,cAAC,EAAD,IAEA,eAAC,IAAD,WACE,cAAC,EAAD,IACA,qBAAK3J,UAAU,aAAf,SACE,eAAC,IAAD,WAEE,cAAC,IAAD,CAAO+J,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,GAAD,MAGF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,wBAAlB,SACE,cAAC,GAAD,MAGF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,SAAlB,SACE,cAAC,GAAD,MAGF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,QAAlB,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,SAAlB,SACE,cAAC,GAAD,MAGF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,UAAlB,SACE,cAAC,GAAD,MAGF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,SAAlB,SACE,cAAC,GAAD,WAMN,cAAC,EAAD,gB,GA7DIzK,IAAMsB,WCNJoJ,QACW,cAA7B3I,OAAOC,SAAS2I,UAEe,UAA7B5I,OAAOC,SAAS2I,UAEhB5I,OAAOC,SAAS2I,SAASC,MACvB,2DCPNC,IAASC,OACL,cAAC,IAAD,CACIC,OAAO,4BACPC,SAAS,mCACTC,YAAalJ,OAAOC,SAASC,OAHjC,SAKI,cAAC,IAAD,CAAW/B,MAAO,CAAEgL,QARZ,kBAAaC,MAAK,WAAL,aAAeC,MAAK,SAACC,GAAD,OAASA,EAAIC,YAQtD,SACI,cAAC,GAAD,QAGRC,SAASC,eAAe,SD8GtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMP,MAAK,SAAAQ,GACjCA,EAAaC,iB","file":"static/js/main.887c8504.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Navbar.css';\n\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\n\nimport HomeIcon from '@material-ui/icons/Home';\nimport FireplaceIcon from '@material-ui/icons/Fireplace';\n\n\nexport default function SimpleBottomNavigation() {\n    const [value, setValue] = React.useState(0);\n  \n    return (\n      <BottomNavigation\n        value={value}\n        onChange={(event, newValue) => {\n          setValue(newValue);\n        }}\n        showLabels\n        className=\"navbar\"\n      >\n        <BottomNavigationAction component={Link} to=\"/\" id=\"HomeNavbarIcon\" label=\"Home\" icon={<HomeIcon />} />\n        <BottomNavigationAction component={Link} to=\"/spark\" id=\"SparkNavbarIcon\" label=\"Spark\" icon={<FireplaceIcon />} />\n      </BottomNavigation>\n    );\n  }\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Link } from '@material-ui/core';\n\nimport './TopBar.css';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\n\nclass TopBar extends React.Component {\n  \n  render() {\n      return (\n          <div className=\"TopBar\">\n            <img className=\"MyoLogo\" src=\"/assets/logo.png\" alt=\"Myo app logo\" />\n            <img className=\"MyoText\" src=\"/assets/myo-text.png\" alt=\"Myo app logo\" />\n            <Link component={RouterLink} to=\"/user\" className=\"AccountLink\">\n              <AccountCircleIcon fontSize=\"large\" className=\"AccountCircle\" />\n            </Link>\n          </div>\n      )\n  }\n}\n\nexport default TopBar;","import React, { Suspense } from 'react';\nimport './SplashScreen.css';\n\nexport default function SplashScreen() {\n  return (\n    <div className=\"SplashScreen\">\n      <div className=\"SplashScreenWrapper\">\n        <Suspense>\n          <img src=\"/assets/myo-text-icon.png\" alt=\"Myo icon\" />\n          <p>Spark wonder</p>\n        </Suspense>\n      </div>\n    </div>\n  )\n}\n","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nconst LoginButton = () => {\n    const { loginWithRedirect } = useAuth0();\n\n    return <button onClick={() => loginWithRedirect()}>Log In</button>;\n};\n\nexport default LoginButton;","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nconst LogoutButton = () => {\n    const { logout } = useAuth0();\n\n    return (\n        <button onClick={() => logout({ returnTo: window.location.origin })}>\n            Log Out\n        </button>\n    );\n};\n\nexport default LogoutButton;","import React from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nconst Profile = () => {\n  const { user, isAuthenticated, isLoading } = useAuth0();\n\n  if (isLoading) {\n    return <div>Loading ...</div>;\n  }\n\n  return (\n    isAuthenticated && (\n      <div>\n        <img src={user.picture} alt={user.name} />\n        <h2>{user.name}</h2>\n        <p>{user.email}</p>\n      </div>\n    )\n  );\n};\n\nexport default Profile;","import React from 'react';\nimport './UserMenu.css';\n\nimport LoginButton from '../Auth/LoginButton'\nimport LogoutButton from '../Auth/LogoutButton'\nimport Profile from '../Auth/Profile'\n\nexport default function UserMenu() {\n\n    return (\n        <div className=\"UserMenu\">\n            <h1>Your account</h1>\n            <Profile />\n            <LoginButton />\n            <LogoutButton />\n            \n        </div>\n    )\n}","import React from 'react';\nimport './CardComponent.css'\n\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Link } from '@material-ui/core';\n\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\n\nfunction CardComponent(props) {\n    \n    const getActivityId = (iteration) => {\n        return iteration + 1;\n    }\n    \n    return (\n        <div className=\"cardComponent\">\n            {props.cards.map((card, i) => (\n                \n                <div className=\"card\" key={i}>\n                    \n                    <div className=\"card-image\">\n                        <img src={'/activities/' + getActivityId(i) + '/' + card.thumbnail} alt=\"Header decoration\" />\n                    </div>\n                    \n                    <div className=\"content\">\n                        <h4>{card.title}</h4>\n                        <p>{card.description}</p>\n                    </div>\n                    \n                    <Link component={RouterLink}\n                        to={{\n                            pathname: \"/activity/\" + getActivityId(i),\n                            state: { activityId: props.activityId }\n                        }}\n                        className=\"read-more\"\n                        style={{ textDecoration: 'none' }}>\n                       <span>Start activity <ChevronRightIcon className=\"chevron-right\" /></span>\n                    </Link>\n\n                </div>\n            ))}\n        </div>\n    )\n}\n\nexport default CardComponent;","import React from 'react';\n\nimport UserOnboarding from 'react-user-onboarding'\nimport 'react-user-onboarding/dist/index.css'\n\nclass Onboarding extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isVisible: (localStorage.getItem('onboardingComplete') === null)\n        }\n\n        this.story = [\n            {\n                component: 'modal',\n                intro: true,\n                children: (\n                    <p>Hey there! Welcome to Myo. As this is your first time, could we show you around?</p>\n                ),\n                className: 'introModal'\n            },\n            {\n                component: 'speech-bubble',\n                attachToId: 'HomeNavbarIcon',\n                children: (\n                    <p>This is the Home tab, where you can view all our activities, or you can click Spark, to start your custom creative journey.</p>\n                )\n            },\n            {\n                component: 'modal',\n                intro: false,\n                children: (\n                    <p>The main feature of Myo is a custom curated journey of creativity exercises, that adapts and matches what you need.</p>\n                )\n            },\n            {\n                component: 'modal',\n                intro: false,\n                children: (\n                    <p>We regularly add more exercises. Good luck with your creativity journey!</p>\n                )\n            }\n        ]\n    }\n\n    handleClose = () => {\n        localStorage.setItem('onboardingComplete', true);\n        this.setState({ isVisible: false })\n    }\n\n    render() {\n        return (\n            <UserOnboarding\n                story={this.story}\n                isVisible={this.state.isVisible}\n                onClose={this.handleClose}\n            />\n        )\n    }\n}\n\nexport default Onboarding;","import React from 'react';\nimport './Hero.css';\n\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Link } from '@material-ui/core';\n\nexport default function Hero(props) {\n    const cards = props.cards\n\n    const randIndex = Math.floor(Math.random() * cards.length)\n    const activity = cards[randIndex]\n    const thumbnail = `/activities/${randIndex + 1}/${cards[randIndex].thumbnail}`\n    const pathname = `/activity/${randIndex + 1}`\n\n    return (\n        <div className=\"Hero\" style={{ backgroundImage: `url(\"${thumbnail}\"`}}>\n            <div className=\"HeroContent\" style={{'background': `linear-gradient(90deg, rgba(241,152,32,1) 35%, rgba(255,255,255,0) 64%)`}}>\n                <h1>{activity.title}</h1>\n                <p>{activity.description}</p>\n\n                <Link component={RouterLink}\n                    to={{\n                        pathname: pathname,\n                        state: { activityId: props.activityId }\n                    }}\n                    className=\"HeroLink\"\n                    style={{ textDecoration: 'none' }}>\n                    <button className=\"HeroButton\" >Start now</button>\n                </Link>\n\n            </div>\n        </div>\n    )\n\n}","import React from 'react';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Link } from '@material-ui/core';\n\nimport './ActivityAvatarList.css';\n\nexport default function ActivityAvatarList(props) {\n\n    if (!props.activities) return null\n\n    props.activities.map((activity, i) => props.activities[i].id = i + 1)\n\n    const pickRandom = (count = 3) => {\n        let _arr = [...props.activities];\n        return [...Array(count)].map(() => _arr.splice(Math.floor(Math.random() * _arr.length), 1)[0]);\n    }\n\n    const getThumbnail = (thumbnail, itemId) => {\n        return `/activities/${itemId}/${thumbnail}`\n    }\n\n    return (\n        <Grid item>\n            <div>\n                <List dense={false}>\n                    {pickRandom().map((item, i) => (\n                        <div key={i}>\n                            <Link component={RouterLink}\n                                to={{ pathname: `/activity/${item.id}` }}\n                                style={{ textDecoration: 'none', color: '#333' }}>\n\n                                <ListItem className=\"ListItem\" >\n                                    <ListItemAvatar>\n                                        <Avatar>\n                                            <img className=\"ShoppingListImage\" src={getThumbnail(item.thumbnail, item.id)} alt=\"Activity illustration\" />\n                                        </Avatar>\n                                    </ListItemAvatar>\n                                    <ListItemText\n                                        primary={item.title}\n                                        secondary={item.description}\n                                    />\n                                    <ListItemSecondaryAction>\n                                        <IconButton edge=\"end\">\n                                            <NavigateNextIcon />\n                                        </IconButton>\n                                    </ListItemSecondaryAction>\n                                </ListItem>\n                            </Link>\n                            <Divider variant=\"inset\" component=\"li\" />\n                        </div>\n                    ))}\n                </List>\n            </div>\n        </Grid>\n\n\n    );\n}\n","import React from 'react';\nimport './HeroList.css';\n\nimport ActivityAvatarList from './ActivityAvatarList';\n\nexport default function HeroList(props) {\n\n    const activities = props.cards\n\n    return (\n        <div className=\"HeroList\">\n            <h1>Activities we love right now</h1>\n            <div className=\"HeroListContent\">\n                <div className=\"ActivityAvatarList\">\n                    <ActivityAvatarList activities={activities} />\n                </div>\n                <div className=\"ActivityAvatarList\">\n                    <ActivityAvatarList activities={activities} />\n                </div>\n            </div>\n        </div>\n    )\n}","import React from \"react\"\nimport useSWR from 'swr'\nimport './ViewActivitiesComponent.css'\n\nimport { css } from \"@emotion/core\";\nimport BounceLoader from \"react-spinners/BounceLoader\";\n\nimport CardComponent from '../Card/CardComponent';\nimport Onboarding from '../Onboarding/Onboarding';\nimport Hero from '../Hero/Hero';\nimport HeroList from '../HeroList/HeroList';\n\nexport default function ViewActivitiesComponent() {\n\n    const bounceLoaderCss = css`display: block; margin: 0 auto;`;\n\n    const { data } = useSWR('/activities/api/list')\n\n    if (!data) return <BounceLoader color={\"#F19820\"} loading={true} css={bounceLoaderCss} size={100} />\n\n    return (\n        <div className=\"ViewActivitiesComponent\">\n            <Onboarding />\n            <Hero cards={data.activities}/>\n            <HeroList cards={data.activities}/>\n            <CardComponent cards={data.activities} />\n        </div>\n    )\n}","import React from \"react\";\nimport { Button } from '@material-ui/core';\n\nimport './ActivityIntroduction.css';\n\nexport default function ActivityIntroduction(props) {\n    return (\n        <div className=\"ActivityIntroduction\">\n            <img src={'/activities/' + (props.activityId) + '/' + props.activity.thumbnail} alt=\"Header decoration\" />\n            <h1>{props.activity.title}</h1>\n            <p dangerouslySetInnerHTML={{ __html: props.activity.description }}></p>\n            <Button variant=\"contained\" color=\"primary\" onClick={props.handleStartActivity}>\n                Start now\n                </Button>\n        </div>\n    )\n}\n","import React, { useState } from \"react\";\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Link, Button } from '@material-ui/core';\n\nimport './ActivityCarousel.css';\n\n// Import Swiper React components\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport SwiperCore, { Navigation, Pagination, A11y } from 'swiper';\nimport 'swiper/swiper.scss';\nimport 'swiper/components/navigation/navigation.scss';\nimport 'swiper/components/scrollbar/scrollbar.scss';\nimport 'swiper/components/pagination/pagination.scss';\n\nSwiperCore.use([Navigation, Pagination, A11y]);\n\nexport default function ActivityIntroduction(props) {\n\n    const [activityCompleted, setActivityCompleted] = useState(false)\n    const finishedActivity = () => setActivityCompleted(true)\n\n    return (\n        <div className=\"ActivityCarousel\">\n            <Swiper\n                spaceBetween={50}\n                slidesPerView={1}\n                navigation\n                pagination={{ clickable: true, type: 'progressbar', }}\n                onReachEnd={finishedActivity}\n            >\n                {props.activity.pages.map((page, i) => {\n                    return (\n                        <SwiperSlide key={i}>\n                            <img src={encodeURI('/activities/' + (props.activityId) + '/' + page.thumbnail)} alt=\"Header decoration\" />\n                            <div class=\"text\">\n                                <h1>{page.title}</h1>\n                                <p dangerouslySetInnerHTML={{ __html: page.description }}></p>\n                            </div>\n                        </SwiperSlide>\n                    )\n                })}\n\n            </Swiper>\n            {activityCompleted ? (\n                <Link component={RouterLink}\n                    to={{ pathname: \"/\", }}\n                    style={{ textDecoration: 'none' }}>\n                    <Button variant=\"contained\" color=\"primary\">Done</Button>\n                </Link>\n            ) : null\n            }\n        </div >\n    )\n}\n","import React, { useState } from \"react\";\nimport { useParams } from 'react-router-dom';\n\nimport './Activity.css'\n\nimport useSWR from 'swr'\n\nimport { css } from \"@emotion/core\";\nimport BounceLoader from \"react-spinners/BounceLoader\";\n\nimport ActivityIntroduction from './ActivityIntroduction';\nimport ActivityCarousel from './ActivityCarousel';\n\nexport default function Activity() {\n\n    let { activityId } = useParams();\n\n    const [showActivityIntroduction, setShowActivityIntroduction] = useState(true)\n    \n    const startActivity = () => setShowActivityIntroduction(false)\n    \n    const { data } = useSWR(`/activities/api/get/${activityId-1}`)\n\n    const override = css`display: block; margin: 0 auto;`;\n    if (!data) return <BounceLoader color={\"#F19820\"} loading={true} css={override} size={100} />\n\n    return (\n        <div class=\"Activity\">\n            { showActivityIntroduction ?\n                (\n                    <ActivityIntroduction activityId={activityId} activity={data.activity} handleStartActivity={startActivity}/>\n                )\n                :\n                (\n                    <ActivityCarousel activityId={activityId} activity={data.activity}/>\n                )\n            }\n        </div>\n    )\n}","import React from \"react\";\n\nimport './ActivityBubble.css'\n\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Link } from '@material-ui/core';\n\nexport default function ActivityBubble(props) {\n\n    const getActivityId = () => {\n        return props.activityId + 1;\n    }\n\n    const fullThumbnailPath = '/activities/' + getActivityId() + '/' + props.thumbnail;\n    const thumbnailUrl = \"url('\" + fullThumbnailPath + \"')\";\n\n    return (\n        <Link component={RouterLink}\n            to={{\n                pathname: \"/activity/\" + getActivityId(),\n            }}\n            className=\"ActivityBubble\"\n            style={{ backgroundColor: props.backgroundColour + 'd0', textDecoration: 'none' }}>\n            <div className=\"ActivityDetails\" style={{\n                opacity: props.bubbleSize > 50 ? 1 : 0,\n                transition: \"opacity 0.1s ease\",\n            }}>\n                <div className=\"ActivityThumbnail\" style={{ backgroundImage: thumbnailUrl }}>\n                </div>\n                <h1>{props.title}</h1>\n            </div>\n        </Link>\n    )\n\n}","import React from 'react';\nimport useSWR from 'swr'\n\nimport BubbleUI from \"react-bubble-ui\";\nimport \"react-bubble-ui/dist/index.css\";\n\nimport ActivityBubble from \"./ActivityBubble\";\n\nimport { css } from \"@emotion/core\";\nimport BounceLoader from \"react-spinners/BounceLoader\";\n\nimport \"./Spark.css\";\n\nfunction Spark() {\n\n    const override = css`display: block; margin: 0 auto;`;\n    \n    const options = {\n        size: 165,\n        minSize: 20,\n        gutter: 10,\n        provideProps: true,\n        numCols: 5,\n        fringeWidth: 120,\n        yRadius: 200,\n        xRadius: 100,\n        cornerRadius: 20,\n        showGuides: false,\n        compact: true,\n        gravitation: 5\n    }\n\n    const { data } = useSWR('/activities/api/list')\n\n    if (!data) return <BounceLoader color={\"#F19820\"} loading={true} css={override} size={100} />\n\n    return (\n        <div class=\"Spark\">\n            <BubbleUI options={options} className=\"sparkBubbleUi\">\n                { data.activities.map((activity, i) => {\n                    return (\n                        <ActivityBubble key={i} activityId={i} title={activity.title} thumbnail={activity.thumbnail} backgroundColour={activity.background_colour} />\n                    )\n                })}\n            </BubbleUI>\n        </div>\n    )\n\n}\n\nexport default Spark;","import React from 'react';\n\nclass Login extends React.Component {\n  render () {\n    return <p>Reset</p>\n  }\n}\n\nexport default Login","import React from 'react';\n\nclass SignUp extends React.Component {\n  render () {\n    return <p>SignUp</p>\n  }\n}\nexport default SignUp;","import React from 'react';\n\nclass Reset extends React.Component {\n  render () {\n    return <p>Reset</p>\n  }\n}\n\nexport default Reset;","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport './fonts/font.css';\n\nimport Navbar from './Navbar/Navbar';\nimport TopBar from './components/TopBar/TopBar';\n\nimport SplashScreen from './components/SplashScreen/SplashScreen';\nimport UserMenu from './components/UserMenu/UserMenu.jsx';\nimport ViewActivitiesComponent from './components/ViewActivities/ViewActivitiesComponent';\nimport Activity from './components/Activity/Activity';\nimport Spark from './components/Spark/Spark';\n\nimport Login from './components/Auth/Login';\nimport SignUp from './components/Auth/SignUp';\nimport Reset from './components/Auth/Reset';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      splashScreen: true,\n    };\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({ splashScreen: false })\n    }, 1500);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <link rel=\"shortcut icon\" href=\"./favicon.ico\" />\n        <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\n\n        <header className=\"App-header\">\n          {this.state.splashScreen ? (\n            <SplashScreen />\n          ) : (\n            <BrowserRouter>\n              <TopBar />\n              <div className=\"AppWrapper\">\n                <Switch>\n\n                  <Route exact path=\"/\">\n                    <ViewActivitiesComponent />\n                  </Route>\n\n                  <Route exact path=\"/activity/:activityId\">\n                    <Activity />\n                  </Route>\n\n                  <Route exact path=\"/spark\">\n                    <Spark />\n                  </Route>\n\n                  <Route exact path=\"/user\">\n                    <UserMenu />\n                  </Route>\n\n                  <Route exact path=\"/login\">\n                    <Login />\n                  </Route>\n\n                  <Route exact path=\"/signup\">\n                    <SignUp />\n                  </Route>\n\n                  <Route exact path=\"/reset\">\n                    <Reset />\n                  </Route>\n\n\n                </Switch>\n              </div>\n              <Navbar />\n            </BrowserRouter>\n          )}\n\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { SWRConfig } from 'swr'\nimport { Auth0Provider } from \"@auth0/auth0-react\";\n\nconst fetcher = (...args) => fetch(...args).then((res) => res.json())\n\nReactDOM.render(\n    <Auth0Provider\n        domain=\"dev-z4eaow9y.eu.auth0.com\"\n        clientId=\"iBtRx9Hw4263FF4ZXs6MED5Ljb1OlvRx\"\n        redirectUri={window.location.origin}\n    >\n        <SWRConfig value={{ fetcher }}>\n            <App />\n        </SWRConfig>\n    </Auth0Provider>,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}