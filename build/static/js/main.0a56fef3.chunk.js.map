{"version":3,"sources":["helpers/auth-header.js","helpers/handle-response.js","config.js","services/authentication.service.js","services/api.service.js","services/axios-fetcher.service.js","components/Auth/PrivateRoute.jsx","components/Auth/Login.jsx","components/Auth/ResetWithToken.jsx","components/Auth/Reset.jsx","components/Auth/SignUp.jsx","components/Auth/ConfirmEmail.jsx","components/Navbar/Navbar.jsx","components/TopBar/TopBar.jsx","components/SplashScreen/SplashScreen.jsx","components/Auth/Logout.jsx","components/UserMenu/UserHero.jsx","components/UserMenu/UserMenu.jsx","components/Card/CardComponent.jsx","components/Onboarding/Onboarding.jsx","components/Hero/Hero.jsx","components/HeroList/ActivityAvatarList.jsx","components/HeroList/HeroList.jsx","components/ViewActivities/ViewActivitiesComponent.jsx","components/Activity/ActivityIntroduction.jsx","components/Activity/Slider.jsx","components/Activity/ReviewDialog.jsx","components/Activity/ActivityCarousel.jsx","components/Activity/Activity.jsx","components/Spark/ActivityBubble.jsx","components/Spark/Spark.jsx","App.js","serviceWorker.js","interceptors/axios-interceptor.js","index.js"],"names":["authHeader","currentUser","authenticationService","currentUserValue","access_token","Authorization","accessToken","refreshToken","refresh_token","handleResponse","response","text","then","data","JSON","parse","ok","indexOf","status","logout","error","message","statusText","Promise","reject","config","authLogin","authRefresh","afterLogout","resetWithToken","authSignUp","authValidate","confirmEmail","currentUserSubject","BehaviorSubject","localStorage","getItem","login","removeItem","next","signUp","updateUser","userObject","setItem","stringify","validateRegistration","asObservable","value","username","password","a","requestOptions","method","headers","body","fetch","user","email","validation","token","hasOwnProperty","url","values","axios","post","PrivateRoute","Component","component","rest","render","props","to","pathname","state","from","location","withRouter","setSnackbar","React","useContext","SnackbarContext","history","push","formik","useFormik","initialValues","onSubmit","open","severity","className","handleSubmit","TextField","fullWidth","id","name","label","onChange","handleChange","touched","Boolean","errors","type","helperText","Button","color","variant","Link","useParams","json","success","catch","validate","includes","username_exists","email_exists","Object","entries","map","pop","result","bounceLoaderCss","css","loading","size","SimpleBottomNavigation","useState","setValue","BottomNavigation","event","newValue","showLabels","BottomNavigationAction","icon","TopBar","RouterLink","src","alt","fontSize","SplashScreen","onClick","UserHero","useSWR","activities","activity","thumbnail","activityId","style","backgroundImage","registered","UserMenu","i","CardComponent","card","title","description","textDecoration","Onboarding","handleClose","setState","isVisible","story","intro","children","attachToId","this","onClose","Hero","ActivityAvatarList","Grid","item","List","dense","ListItem","ListItemAvatar","Avatar","itemId","ListItemText","primary","secondary","ListItemSecondaryAction","IconButton","edge","Divider","HeroList","half","Math","ceil","length","firstHalf","splice","secondHalf","ViewActivitiesComponent","setActivities","getRandomActivities","count","Array","floor","random","ActivityIntroduction","split","autoPlay","muted","loop","playsInline","controls","dangerouslySetInnerHTML","__html","handleStartActivity","useStyles","makeStyles","theme","root","width","spacing","margin","height","iOSBoxShadow","marks","IOSSlider","withStyles","padding","thumb","backgroundColor","boxShadow","marginTop","marginLeft","active","valueLabel","left","top","background","track","rail","opacity","mark","markActive","Slider","FeedbackSlider","classes","aria-label","defaultValue","valueLabelDisplay","ReviewDialog","feedback","setFeedback","Dialog","disableEnforceFocus","DialogTitle","align","DialogContent","DialogContentText","multiline","target","DialogActions","ActivityCarousel","reviewDialogOpen","setReviewDialogOpen","activityCompleted","setActivityCompleted","spaceBetween","slidesPerView","navigation","pagination","clickable","onReachEnd","pages","page","encodeURI","postApiData","Activity","showActivityIntroduction","setShowActivityIntroduction","override","SwiperCore","use","Navigation","Pagination","A11y","ActivityBubble","getActivityId","thumbnailUrl","backgroundColour","bubbleSize","transition","Spark","options","minSize","gutter","provideProps","numCols","fringeWidth","yRadius","xRadius","cornerRadius","showGuides","compact","gravitation","background_colour","createContext","App","splashScreen","setSplashScreen","useEffect","setTimeout","createMuiTheme","palette","useMediaQuery","main","typography","fontFamily","join","snackbar","ThemeProvider","CssBaseline","rel","href","Provider","Snackbar","autoHideDuration","exact","path","Login","Reset","SignUp","ConfirmEmail","ResetWithToken","window","hostname","match","interceptors","resolve","originalRequest","refreshTokenString","__isRetryRequest","_retry","refresh","res","reload","ReactDOM","fetcher","get","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0a56fef3.chunk.js","sourcesContent":["import { authenticationService } from '../services';\n\nexport function authHeader() {\n    // Return authorization header with jwt token\n    const currentUser = authenticationService.currentUserValue;\n    if (currentUser && currentUser.access_token) {\n        return { Authorization: `Bearer ${currentUser.access_token}` };\n    } else {\n        return {};\n    }\n}\n\nexport function refreshHeader() {\n    // Return authorization header with jwt token\n    const currentUser = authenticationService.currentUserValue;\n    if (currentUser && currentUser.refresh_token) {\n        return { Authorization: `Bearer ${currentUser.refresh_token}` };\n    } else {\n        return {};\n    }\n}\n\nexport function accessToken() {\n    // Return jwt token\n    const currentUser = authenticationService.currentUserValue;\n    if (currentUser && currentUser.access_token) {\n        return currentUser.access_token;\n    } else {\n        return {};\n    }\n}\n\nexport function refreshToken() {\n    // Return jwt refresh token\n    const currentUser = authenticationService.currentUserValue;\n    if (currentUser && currentUser.refresh_token) {\n        return currentUser.refresh_token;\n    } else {\n        return false;\n    }\n}","import { authenticationService } from '../services';\n\n// Handle Sign-in response\nexport function handleResponse(response) {\n    return response.text().then(text => {\n        const data = text && JSON.parse(text);\n        if (!response.ok) {\n            if ([401, 403].indexOf(response.status) !== -1) {\n                // Auto logout if 401 Unauthorized or 403 Forbidden response returned from api\n                authenticationService.logout();\n                //window.location.reload();\n            }\n\n            const error = (data && data.message) || response.statusText;\n            return Promise.reject(error);\n        }\n\n        return data;\n    });\n}","const config = \n{\n    authLogin: '/auth/login',\n    authRefresh: '/auth/refresh',\n    afterLogout: '/',\n    resetWithToken: '/auth/reset/token',\n    authSignUp: '/auth/register',\n    authValidate: '/auth/validate',\n    confirmEmail: '/auth/confirm'\n}\n\nexport default config","import { BehaviorSubject } from 'rxjs';\nimport { handleResponse } from '../helpers';\nimport config from '../config';\n\nconst currentUserSubject = new BehaviorSubject(JSON.parse(localStorage.getItem('currentUser')));\n\nexport const authenticationService = {\n    login,\n    logout,\n    signUp,\n    updateUser,\n    validateRegistration,\n    confirmEmail,\n    currentUser: currentUserSubject.asObservable(),\n    get currentUserValue() { return currentUserSubject.value }\n};\n\nasync function login(username, password) {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username, password })\n    };\n\n    const response = await fetch(config.authLogin, requestOptions);\n    const user = await handleResponse(response);\n\n    // Store user details and JWT token in local storage to keep user logged in between page refreshes\n    localStorage.setItem('currentUser', JSON.stringify(user));\n    currentUserSubject.next(user);\n    return user;\n}\n\n\nasync function signUp(username, email, password) {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username, password, email })\n    };\n\n    const response = await fetch(config.authSignUp, requestOptions);\n    const user = await handleResponse(response);\n\n    return user;\n}\n\nasync function validateRegistration(username, email) {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username, email })\n    };\n\n    const response = await fetch(config.authValidate, requestOptions);\n    const validation = await handleResponse(response);\n    \n    return validation;\n}\n\nasync function confirmEmail(token) {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ token })\n    };\n\n    const response = await fetch(config.confirmEmail, requestOptions);\n    const validation = await handleResponse(response);\n\n    if (validation.hasOwnProperty('success')) {\n        return true;\n    } else {\n        return false\n    }\n}\n\n\nfunction updateUser(userObject) {\n    localStorage.setItem('currentUser', JSON.stringify(userObject));\n    currentUserSubject.next(userObject);\n}\n\nfunction logout() {\n    // Remove user from local storage to log user out\n    localStorage.removeItem('currentUser');\n    currentUserSubject.next(null);\n}\n","import { authHeader } from '../helpers';\nimport axios from 'axios';\n\nexport async function postApiData (url, values) {\n    try {\n        const response = await axios.post(url, values, { headers: authHeader() });\n        const data = response.data;\n        return data;\n    } catch (error) {\n        return error;\n    }\n}","import axios from 'axios';\nimport { accessToken } from '../helpers';\n\n// Automatically include token with fetcher\nexport const fetcher = (url) =>\n  axios\n    .get(url, { headers: { Authorization: \"Bearer \" + accessToken() } })\n    .then((res) => res.data);","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nimport { authenticationService } from '../../services';\r\n\r\nexport const PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route {...rest} render={props => {\r\n        const currentUser = authenticationService.currentUserValue;\r\n        if (!currentUser) {\r\n            // Not logged in so redirect to login page with the return url\r\n            return <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\r\n        }\r\n\r\n        // Authorised so return component\r\n        return <Component {...props} />\r\n    }} />\r\n)","import React from 'react';\nimport { withRouter, Link } from 'react-router-dom';\n\nimport './Auth.css';\n\nimport { useFormik } from 'formik';\nimport { Button, TextField } from '@material-ui/core';\nimport { authenticationService } from '../../services';\n\nimport { SnackbarContext } from '../../App';\n\nfunction Login(props) {\n\n    const { setSnackbar } = React.useContext(SnackbarContext);\n\n    if (authenticationService.currentUserValue) {\n        props.history.push('/');\n    }\n\n\n    const formik = useFormik({\n        initialValues: {\n            username: '',\n            password: '',\n        },\n        onSubmit: (values) => {\n            authenticationService.login(values.username, values.password)\n                .then(\n                    (user) => {\n                        const { from } = props.location.state || { from: { pathname: \"/\" } };\n                        props.history.push(from);\n\n                        setSnackbar({\n                            text: `Welcome, ${values.username}`,\n                            open: true,\n                            severity: 'success'\n                        })\n                    }\n                );\n        }\n    });\n\n\n    return (\n        <div className=\"AuthForm\">\n            <form onSubmit={formik.handleSubmit}>\n                <TextField\n                    fullWidth\n                    id=\"username\"\n                    name=\"username\"\n                    label=\"Username\"\n                    value={formik.values.username}\n                    onChange={formik.handleChange}\n                    error={formik.touched.username && Boolean(formik.errors.username)}\n                />\n                <TextField\n                    fullWidth\n                    id=\"password\"\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    value={formik.values.password}\n                    onChange={formik.handleChange}\n                    error={formik.touched.password && Boolean(formik.errors.password)}\n                    helperText={formik.touched.password && formik.errors.password}\n                />\n                <Button className=\"SubmitButton\" color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n                    Submit\n                </Button>\n                <Button component={Link} to=\"/reset\" className=\"ResetPasswordButton\">\n                    Forgot password\n                </Button>\n                <Button component={Link} to=\"/register\">\n                    New account\n                </Button>\n            </form>\n        </div>\n    )\n}\n\nexport default withRouter(Login);","import React from 'react';\nimport { withRouter, useParams } from 'react-router-dom';\n\nimport { useFormik } from 'formik';\n\nimport { Button, TextField } from '@material-ui/core';\n\nimport './Auth.css';\n\nimport { SnackbarContext } from '../../App';\n\nimport config from '../../config';\n\nfunction ResetWithToken(props) {\n\n    const { setSnackbar } = React.useContext(SnackbarContext);\n\n    const { token } = useParams();\n\n    const formik = useFormik({\n        initialValues: {\n            password: '',\n        },\n        //validationSchema: validationSchema,\n        onSubmit: (values) => {\n            // Add in the token\n            values.token = token;\n\n            // Fetch the data\n            fetch(config.resetWithToken, {\n                method: 'POST',\n                body: JSON.stringify(values),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            })\n                .then(response => response.json())\n                .then(data => {\n                    if (data.hasOwnProperty('error')) {\n                        throw data.error;\n                    }\n                    setSnackbar({\n                        text: data.success,\n                        open: true,\n                        severity: 'success'\n                    })\n                    \n                    // Show the login screen\n                    props.history.push('/login');\n                })\n                .catch(function (error) {\n                    setSnackbar({\n                        text: error,\n                        open: true,\n                        severity: 'error'\n                    })\n                })\n        },\n    });\n\n    // Display a password reset form\n    return (\n        <div className=\"AuthForm\">\n            <form onSubmit={formik.handleSubmit}>\n                <TextField\n                    fullWidth\n                    id=\"password\"\n                    name=\"password\"\n                    label=\"New password\"\n                    type=\"password\"\n                    value={formik.values.password}\n                    onChange={formik.handleChange}\n                    error={formik.touched.password && Boolean(formik.errors.password)}\n                    helperText={formik.touched.password && formik.errors.password}\n                />\n                <Button variant=\"contained\" fullWidth type=\"submit\">\n                    Set new password\n                </Button>\n            </form>\n        </div>\n    )\n}\n\nexport default withRouter(ResetWithToken)","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport { useFormik } from 'formik';\n\nimport { Button, TextField } from '@material-ui/core';\n\nimport { SnackbarContext } from '../../App';\n\nfunction Reset(props) {\n\n    const { setSnackbar } = React.useContext(SnackbarContext);\n\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n        },\n        onSubmit: (values) => {\n            fetch('/auth/reset', {\n                method: 'POST',\n                body: JSON.stringify(values),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            })\n                .then(response => response.json())\n                .then(data => {\n                    if (data.hasOwnProperty('error')) {\n                        throw data.error;\n                    }\n                    \n                    setSnackbar({\n                        text: data.success,\n                        open: true,\n                        severity: 'success'\n                    })\n\n                    props.history.push('login');\n                    \n                })\n                .catch(function (error) {\n                    \n                    setSnackbar({\n                        text: error,\n                        open: true,\n                        severity: 'error'\n                    })\n\n                })\n        },\n    });\n\n    // Display an email form, to which reset email can be sent\n    return (\n        <div className=\"AuthForm\">\n            <form onSubmit={formik.handleSubmit}>\n                <TextField\n                    fullWidth\n                    id=\"email\"\n                    name=\"email\"\n                    label=\"Email\"\n                    type=\"email\"\n                    value={formik.values.email}\n                    onChange={formik.handleChange}\n                    error={formik.touched.email && Boolean(formik.errors.email)}\n                    helperText={formik.touched.email && formik.errors.email}\n                />\n\n                <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n                    Send password reset email\n                </Button>\n\n                <Button component={Link} to=\"/login\">\n                    Back to Login\n                </Button>\n            </form>\n        </div>\n    )\n}\n\nexport default withRouter(Reset)","import React from 'react';\nimport { withRouter, Link } from 'react-router-dom';\n\nimport './Auth.css';\n\nimport { useFormik } from 'formik';\nimport { Button, TextField } from '@material-ui/core';\nimport { authenticationService } from '../../services';\n\nimport { SnackbarContext } from '../../App';\n\nfunction SignUp(props) {\n\n    const { setSnackbar } = React.useContext(SnackbarContext);\n\n    if (authenticationService.currentUserValue) {\n        props.history.push('/');\n    }\n\n    // Async validation\n    const validate = async (values, props) => {\n        const validation = await authenticationService.validateRegistration(values.username, values.email);\n        \n        const errors = {};\n        \n        if (['admin', 'null', 'god'].includes(values.username)) {\n            errors.username = 'Please choose a different username';\n        }\n        if (validation.username_exists)\n            errors.username = 'This username is already taken';\n        if (validation.email_exists)\n            errors.email = 'This email is already registered';\n\n        Object.entries(errors).map(error => {\n            setSnackbar({\n                text: error.pop(),\n                open: true,\n                severity: 'warning'\n            })\n            return true\n        })\n        \n        return errors;\n    };\n\n\n    const formik = useFormik({\n        initialValues: {\n            username: '',\n            email: '',\n            password: '',\n        },\n        onSubmit: (values) => {\n            authenticationService.signUp(values.username, values.email, values.password)\n                .then(\n                    (user) => {\n                        props.history.push('/login');\n\n                        setSnackbar({\n                            text: `An email has been sent to ${values.email}. Please open it to continue.`,\n                            open: true,\n                            severity: 'success'\n                        })\n                    }\n                );\n        },\n        validate: validate,\n    });\n\n    return (\n        <div className=\"AuthForm\">\n            <form onSubmit={formik.handleSubmit}>\n                <TextField\n                    fullWidth\n                    id=\"username\"\n                    name=\"username\"\n                    label=\"Username\"\n                    value={formik.values.username}\n                    onChange={formik.handleChange}\n                    error={formik.touched.username && Boolean(formik.errors.username)}\n                />\n                <TextField\n                    fullWidth\n                    id=\"email\"\n                    name=\"email\"\n                    label=\"Email\"\n                    value={formik.values.email}\n                    onChange={formik.handleChange}\n                    error={formik.touched.email && Boolean(formik.errors.email)}\n                />\n                <TextField\n                    fullWidth\n                    id=\"password\"\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    value={formik.values.password}\n                    onChange={formik.handleChange}\n                    error={formik.touched.password && Boolean(formik.errors.password)}\n                    helperText={formik.touched.password && formik.errors.password}\n                />\n                <Button className=\"SubmitButton\" color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n                    Submit\n                </Button>\n                <Button component={Link} to=\"/login\" className=\"ResetPasswordButton\">\n                    Back to log-in\n                </Button>\n            </form>\n        </div>\n    )\n}\n\nexport default withRouter(SignUp);","import React from 'react';\nimport { withRouter, useParams } from 'react-router-dom';\n\nimport { authenticationService } from '../../services';\n\nimport { SnackbarContext } from '../../App';\n\nimport { css } from \"@emotion/core\";\nimport BounceLoader from \"react-spinners/BounceLoader\";\n\nfunction ConfirmEmail(props) {\n\n    const { setSnackbar } = React.useContext(SnackbarContext);\n\n    const { token } = useParams();\n     \n    authenticationService.confirmEmail(token)\n        .then((result) => {\n            const message = ( result ? `Your email has been confirmed. You can now log-in.` : `We could not confirm your email.`)\n            setSnackbar({\n                text: message,\n                open: true,\n                severity: ( result ? 'success' : 'error')\n            })  \n            props.history.push('/login');    \n        })\n\n    const bounceLoaderCss = css`display: block; margin: 0 auto;`;\n\n    return (\n        <BounceLoader color='#F19820' loading={true} css={bounceLoaderCss} size={100} />\n    )\n}\n\nexport default withRouter(ConfirmEmail);","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Navbar.css';\n\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\n\nimport HomeIcon from '@material-ui/icons/Home';\nimport FireplaceIcon from '@material-ui/icons/Fireplace';\n\n\nexport default function SimpleBottomNavigation() {\n    const [value, setValue] = React.useState(0);\n  \n    return (\n      <BottomNavigation\n        value={value}\n        onChange={(event, newValue) => {\n          setValue(newValue);\n        }}\n        showLabels\n        className=\"navbar\"\n      >\n        <BottomNavigationAction component={Link} to=\"/\" id=\"HomeNavbarIcon\" label=\"Home\" icon={<HomeIcon />} />\n        <BottomNavigationAction component={Link} to=\"/spark\" id=\"SparkNavbarIcon\" label=\"Spark\" icon={<FireplaceIcon />} />\n      </BottomNavigation>\n    );\n  }\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Link } from '@material-ui/core';\n\nimport './TopBar.css';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\n\nclass TopBar extends React.Component {\n  \n  render() {\n      return (\n          <div className=\"TopBar\">\n            <Link component={RouterLink} to=\"/\" className=\"AccountLink\">\n              <img className=\"MyoLogo\" src=\"/assets/logo.png\" alt=\"Myo app logo\" />\n            </Link>\n            <img className=\"MyoText\" src=\"/assets/myo-text.png\" alt=\"Myo app logo\" />\n            <Link component={RouterLink} to=\"/user\" className=\"AccountLink\">\n              <AccountCircleIcon fontSize=\"large\" className=\"AccountCircle\" />\n            </Link>\n          </div>\n      )\n  }\n}\n\nexport default TopBar;","import React, { Suspense } from 'react';\nimport './SplashScreen.css';\n\nimport 'animate.css'\n\nexport default function SplashScreen() {\n  return (\n    <div className=\"SplashScreen\">\n      <div className=\"SplashScreenWrapper\">\n        <Suspense>\n          <img src=\"/assets/myo-text-icon.png\" alt=\"Myo icon\" />\n          <p className=\"animate__animated animate__bounceIn\">Spark wonder</p>\n        </Suspense>\n      </div>\n    </div>\n  )\n}\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport { authenticationService } from '../../services';\n\nimport { SnackbarContext } from '../../App';\n\nimport { Button } from '@material-ui/core';\n\nimport config from '../../config';\n\nfunction Logout(props) {\n    const { setSnackbar } = React.useContext(SnackbarContext);\n\n    const handleClick = () => {\n\n        setSnackbar({\n            text: `You have logged out.`,\n            open: true,\n            severity: 'success'\n        })\n\n        authenticationService.logout();\n        props.history.push(config.afterLogout);\n    }\n\n    return (\n        <Button variant=\"contained\" onClick={() => handleClick()}>\n            Logout\n        </Button>\n    )\n}\n\nexport default withRouter (Logout);","import React from 'react';\nimport './UserHero.css';\n\nimport useSWR from 'swr'\nimport { css } from \"@emotion/core\";\nimport BounceLoader from \"react-spinners/BounceLoader\";\n\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport LocalActivityIcon from '@material-ui/icons/LocalActivity';\n\nimport Logout from '../Auth/Logout';\nexport default function UserHero(props) {\n\n    const { data } = useSWR('/auth/profile')\n    const bounceLoaderCss = css`display: block; margin: 0 auto;`;\n\n    if (!props.activities) return null;\n    if (!data) return <BounceLoader color={\"#F19820\"} loading={true} css={bounceLoaderCss} size={100} />\n\n    const activity = props.activities.pop()\n    const thumbnail = `/activities/${activity.activityId}/${activity.thumbnail}`\n\n    return (\n        <div className=\"UserHero\" style={{ backgroundImage: `url(\"${thumbnail}\"` }}>\n            <div className=\"UserHeroContent\" style={{ 'background': `linear-gradient(90deg, rgba(241,152,32,1) 40%, rgba(255,255,255,0) 90%)` }}>\n                \n                <Logout className=\"UserHeroLink\" />\n                <h1>{data.username}</h1>\n                <p><AccountCircleIcon className=\"Icon\" /> Member since:</p>\n                <p className=\"caption\">{data.registered}</p>\n\n                <p><LocalActivityIcon className=\"Icon\" /> Total activities:</p>\n                <p className=\"caption\">52</p>\n                <span className=\"stamp is-nope\">Super member</span>\n                \n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport './UserMenu.css';\n\nimport useSWR from 'swr'\nimport { css } from \"@emotion/core\";\nimport BounceLoader from \"react-spinners/BounceLoader\";\n\nimport UserHero from './UserHero';\n\nexport default function UserMenu() {\n\n    const bounceLoaderCss = css`display: block; margin: 0 auto;`;\n    const { data } = useSWR('/activities/api/list')\n    if (!data) return <BounceLoader color='#F19820' loading={true} css={bounceLoaderCss} size={100} />\n\n    var activities=[...data.activities]\n    activities.map((activity, i) => activities[i].activityId = i+1)\n\n    return (\n        <div className=\"UserMenu\">\n            <UserHero activities={activities}/>              \n        </div>\n    )\n}","import React from 'react';\nimport './CardComponent.css'\n\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Link } from '@material-ui/core';\n\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\n\nfunction CardComponent(props) {\n    \n    return (\n        <div className=\"cardComponent\">\n            {props.activities.map((card, i) => (\n                \n                <div className=\"card\" key={i}>\n                    \n                    <div className=\"card-image\">\n                        <img src={`/activities/${card.activityId}/${card.thumbnail}`} alt=\"Header decoration\" />\n                    </div>\n                    \n                    <div className=\"content\">\n                        <h4>{card.title}</h4>\n                        <p>{card.description}</p>\n                    </div>\n                    \n                    <Link component={RouterLink}\n                        to={{pathname: `/activity/${card.activityId}`}}\n                        className=\"read-more\"\n                        style={{ textDecoration: 'none' }}>\n                       <span>Start activity <ChevronRightIcon className=\"chevron-right\" /></span>\n                    </Link>\n\n                </div>\n            ))}\n        </div>\n    )\n}\n\nexport default CardComponent;","import React from 'react';\n\nimport UserOnboarding from 'react-user-onboarding'\nimport 'react-user-onboarding/dist/index.css'\n\nclass Onboarding extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isVisible: (localStorage.getItem('onboardingComplete') === null)\n        }\n\n        this.story = [\n            {\n                component: 'modal',\n                intro: true,\n                children: (\n                    <p>Hey there! Welcome to Myo. As this is your first time, could we show you around?</p>\n                ),\n                className: 'introModal'\n            },\n            {\n                component: 'speech-bubble',\n                attachToId: 'HomeNavbarIcon',\n                children: (\n                    <p>This is the Home tab, where you can view all our activities, or you can click Spark, to start your custom creative journey.</p>\n                )\n            },\n            {\n                component: 'modal',\n                intro: false,\n                children: (\n                    <p>The main feature of Myo is a custom curated journey of creativity exercises, that adapts and matches what you need.</p>\n                )\n            },\n            {\n                component: 'modal',\n                intro: false,\n                children: (\n                    <p>We regularly add more exercises. Good luck with your creativity journey!</p>\n                )\n            }\n        ]\n    }\n\n    handleClose = () => {\n        localStorage.setItem('onboardingComplete', true);\n        this.setState({ isVisible: false })\n    }\n\n    render() {\n        return (\n            <UserOnboarding\n                story={this.story}\n                isVisible={this.state.isVisible}\n                onClose={this.handleClose}\n            />\n        )\n    }\n}\n\nexport default Onboarding;","import React from 'react';\nimport './Hero.css';\n\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Link } from '@material-ui/core';\n\nexport default function Hero(props) {\n\n    const activity = props.activities.pop()\n\n    const thumbnail = `/activities/${activity.activityId}/${activity.thumbnail}`\n    const pathname = `/activity/${activity.activityId}`\n\n    return (\n        <div className=\"Hero\" style={{ backgroundImage: `url(\"${thumbnail}\"`}}>\n            <div className=\"HeroContent\" style={{'background': `linear-gradient(90deg, rgba(241,152,32,1) 35%, rgba(255,255,255,0) 64%)`}}>\n                <h1>{activity.title}</h1>\n                <p>{activity.description}</p>\n\n                <Link component={RouterLink}\n                    to={{\n                        pathname: pathname,\n                        state: { activityId: activity.activityId }\n                    }}\n                    className=\"HeroLink\"\n                    style={{ textDecoration: 'none' }}>\n                    <button className=\"HeroButton\" >Start now</button>\n                </Link>\n\n            </div>\n        </div>\n    )\n}","import React from 'react';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Link } from '@material-ui/core';\n\nimport './ActivityAvatarList.css';\n\nexport default function ActivityAvatarList(props) {\n\n    const getThumbnail = (thumbnail, itemId) => `/activities/${itemId}/${thumbnail}`\n\n    return (\n        <Grid item>\n            <List dense={false}>\n                {props.activities.map((activity, i) => (\n                    <Link \n                        key={i} \n                        component={RouterLink}\n                        to={{ pathname: `/activity/${activity.activityId}` }}\n                        style={{ textDecoration: 'none', color: '#333' }}\n                    >\n                        <ListItem className=\"ListItem\" >\n                            <ListItemAvatar>\n                                <Avatar>\n                                    <img src={getThumbnail(activity.thumbnail, activity.activityId)} alt=\"Activity illustration\" />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={activity.title}\n                                secondary={activity.description}\n                            />\n                            <ListItemSecondaryAction>\n                                <IconButton edge=\"end\">\n                                    <NavigateNextIcon />\n                                </IconButton>\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                        \n                        <Divider variant=\"inset\" component=\"li\" />\n                    </Link>\n                ))}\n            </List>\n        </Grid>\n    );\n}\n","import React from 'react';\nimport './HeroList.css';\n\nimport ActivityAvatarList from './ActivityAvatarList';\n\nexport default function HeroList(props) {\n    \n    // Split the array in half\n    const half = Math.ceil(props.activities.length / 2);    \n    const firstHalf = props.activities.splice(0, half)\n    const secondHalf = props.activities.splice(-half)\n\n    return (\n        <div className=\"HeroList\">\n            <h1>{props.title}</h1>\n            <div className=\"HeroListContent\">\n                <ActivityAvatarList className=\"ActivityAvatarList\" activities={firstHalf} />\n                <ActivityAvatarList className=\"ActivityAvatarList\" activities={secondHalf} />\n            </div>\n        </div>\n    )\n}","import React from \"react\"\nimport useSWR from 'swr'\nimport './ViewActivitiesComponent.css'\n\nimport { css } from \"@emotion/core\";\nimport BounceLoader from \"react-spinners/BounceLoader\";\n\nimport CardComponent from '../Card/CardComponent';\nimport Onboarding from '../Onboarding/Onboarding';\nimport Hero from '../Hero/Hero';\nimport HeroList from '../HeroList/HeroList';\n\nexport default function ViewActivitiesComponent() {\n\n    const bounceLoaderCss = css`display: block; margin: 0 auto;`;\n\n    const { data } = useSWR('/activities/api/list')\n\n    if (!data) return <BounceLoader color='#F19820' loading={true} css={bounceLoaderCss} size={100} />\n    \n    var activities\n    const setActivities = () => {\n        activities=[...data.activities]\n        activities.map((activity, i) => activities[i].activityId = i+1)\n    }\n    setActivities();\n\n\n    // Function to remove from the main array ${count} amount of items\n    const getRandomActivities = (count=false) => {\n        if (activities.length < 1) {setActivities()}\n\n        if (!count) {count = activities.length}\n        return [...Array(count)].map(() => activities.splice(Math.floor(Math.random() * activities.length), 1)[0]);\n    }\n    \n    return (\n        <div className=\"ViewActivitiesComponent\">\n            <Onboarding />\n            <Hero activities={getRandomActivities(1)}/>\n            <HeroList activities={getRandomActivities(4)} title=\"Activities we love right now\"/>\n            <CardComponent activities={getRandomActivities(3)} />\n            <Hero activities={getRandomActivities(1)}/>\n            <HeroList activities={getRandomActivities(4)} title=\"Trending this week\"/>\n            <CardComponent activities={getRandomActivities(6)} />\n            <Hero activities={getRandomActivities(1)}/>\n            <CardComponent activities={getRandomActivities(3)} />\n        </div>\n    )\n}","import React from \"react\";\nimport { Button } from '@material-ui/core';\n\nimport './ActivityIntroduction.css';\n\nexport default function ActivityIntroduction(props) {\n    return (\n        <div className=\"ActivityIntroduction\">\n            {(props.activity.thumbnail.split('.').pop() === 'mp4') ? (\n                <video className=\"ActivityVideo\" autoPlay muted loop playsInline controls >\n                    <source src={`/activities/${props.activityId}/${props.activity.thumbnail}`} type=\"video/mp4\" />\n                </video>\n            ) : (\n                <img src={'/activities/' + (props.activityId) + '/' + props.activity.thumbnail} alt=\"Header decoration\" />\n            )}\n            <h1>{props.activity.title}</h1>\n            <p dangerouslySetInnerHTML={{ __html: props.activity.description }}></p>\n            <Button variant=\"contained\" color=\"primary\" onClick={props.handleStartActivity}>\n                I'm ready\n                </Button>\n        </div>\n    )\n}\n","import React from 'react';\n\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: 150 + theme.spacing(3) * 2\n    },\n    margin: {\n        height: theme.spacing(3),\n    },\n}));\n\nconst iOSBoxShadow =\n    '0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.13),0 0 0 1px rgba(0,0,0,0.02)';\n\nconst marks = [\n    {\n        value: 0,\n        label: '😟'\n    },\n    {\n        value: 50,\n        label: '😌'\n    },\n    {\n        value: 100,\n        label: '🧑‍🎨'\n    },\n];\n\nconst IOSSlider = withStyles({\n    root: {\n        color: '#F19820',\n        height: 2,\n        padding: '15px 0',\n    },\n    thumb: {\n        height: 28,\n        width: 28,\n        backgroundColor: '#fff',\n        boxShadow: iOSBoxShadow,\n        marginTop: -14,\n        marginLeft: -14,\n        '&:focus, &:hover, &$active': {\n            boxShadow: '0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.3),0 0 0 1px rgba(0,0,0,0.02)',\n            // Reset on touch devices, it doesn't add specificity\n            '@media (hover: none)': {\n                boxShadow: iOSBoxShadow,\n            },\n        },\n    },\n    active: {},\n    valueLabel: {\n        left: 'calc(-50% + 12px)',\n        top: -22,\n        '& *': {\n            background: 'transparent',\n            color: '#000',\n        },\n    },\n    track: {\n        height: 2,\n    },\n    rail: {\n        height: 2,\n        opacity: 0.5,\n        backgroundColor: '#bfbfbf',\n    },\n    mark: {\n        backgroundColor: '#bfbfbf',\n        height: 8,\n        width: 1,\n        marginTop: -3,\n    },\n    markActive: {\n        opacity: 1,\n        backgroundColor: '#F19820',\n    },\n})(Slider);\n \nexport default function FeedbackSlider() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <IOSSlider aria-label=\"ios slider\" defaultValue={75} marks={marks} valueLabelDisplay=\"off\" />\n        </div>\n    );\n}\n","import React from 'react';\n\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Link, Button, TextField } from '@material-ui/core';\n\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\n\nimport Rate from 'rc-rate';\nimport 'rc-rate/assets/index.css';\n\nimport FeedbackSlider from './Slider';\n\nimport './ReviewDialog.css';\n\nexport default function ReviewDialog(props) {\n\n    const gatherData = () => {\n        props.onSubmit()\n    }\n\n    const [feedback, setFeedback] = React.useState('');\n\n    return (\n        <Dialog  onClose={props.onClose} open={props.open} disableEnforceFocus>\n            <DialogTitle align=\"center\" id=\"dialog-title\">Congratulations! 🎉</DialogTitle>\n            <DialogContent align=\"center\"  className=\"ReviewDialogContent\">\n                <DialogContentText>\n                    How did you feel?\n                        <FeedbackSlider />\n                </DialogContentText>\n                <DialogContentText>\n                    How would you rate this activity?\n                        <br />\n                    <Rate />\n                </DialogContentText>\n                <DialogContentText>\n\n                    <TextField\n                        fullWidth\n                        align=\"center\" \n                        id=\"feedbackText\"\n                        multiline\n                        name=\"feedbackText\"\n                        label=\"Any notes to yourself?\"\n                        value={feedback}\n                        onChange={event => setFeedback(event.target.value)}\n                    />\n                </DialogContentText>\n\n            </DialogContent>\n            <DialogActions>\n                <Link component={RouterLink} to={{ pathname: \"/\" }} style={{ textDecoration: 'none' }}>\n                    <Button onClick={props.onClose}>\n                        Skip\n                    </Button>\n                </Link>\n                <Link component={RouterLink} to={{ pathname: \"/\" }} style={{ textDecoration: 'none' }}>\n                    <Button variant=\"contained\" onClick={gatherData} color=\"primary\" type=\"submit\">\n                    Done\n                    </Button>\n                </Link>\n            </DialogActions>\n        </Dialog>\n    )\n}","import React, { useState } from \"react\";\nimport { Button } from '@material-ui/core';\n\nimport './ActivityCarousel.css';\n\n// Import Swiper React components\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport SwiperCore, { Navigation, Pagination, A11y } from 'swiper';\nimport 'swiper/swiper.scss';\nimport 'swiper/components/navigation/navigation.scss';\nimport 'swiper/components/scrollbar/scrollbar.scss';\nimport 'swiper/components/pagination/pagination.scss';\n\nimport ReviewDialog from './ReviewDialog';\n\nimport { postApiData } from '../../services/api.service';\n\nSwiperCore.use([Navigation, Pagination, A11y]);\n\nexport default function ActivityCarousel(props) {\n\n    const [reviewDialogOpen, setReviewDialogOpen] = React.useState(false)\n    const handleClose = () => setReviewDialogOpen (false)\n\n    const [activityCompleted, setActivityCompleted] = useState(false)\n    const finishedActivity = () => setActivityCompleted(true)\n\n    // API handlers for order deletion\n    const handleSubmitFeedback = (feedback) => {\n        setReviewDialogOpen(false)\n        postApiData('/api/orders/delete', { feedback: feedback })\n    }\n\n    return (\n        <div className=\"ActivityCarousel\">\n            <Swiper\n                spaceBetween={50}\n                slidesPerView={1}\n                navigation\n                pagination={{ clickable: true, type: 'progressbar', }}\n                onReachEnd={finishedActivity}\n            >\n                {props.activity.pages.map((page, i) => {\n                    return (\n                        <SwiperSlide key={i}>\n                            {(page.thumbnail.split('.').pop() === 'mp4') ? (\n                                <video className=\"ActivityVideo\" autoPlay muted loop playsInline controls >\n                                    <source src={`/activities/${props.activityId}/${page.thumbnail}`} type=\"video/mp4\" />\n                                </video>\n                            ) : (\n                                <img src={encodeURI('/activities/' + (props.activityId) + '/' + page.thumbnail)} alt=\"Header decoration\" />\n                            )}\n                            \n                            <div className=\"text\">\n                                <h1>{page.title}</h1>\n                                <p dangerouslySetInnerHTML={{ __html: page.description }}></p>\n                            </div>\n                        </SwiperSlide>\n                    )\n                })}\n\n            </Swiper>\n            {activityCompleted ? (\n                    <Button variant=\"contained\" onClick={() => setReviewDialogOpen(true)} color=\"primary\">Finish</Button>\n            ) : null\n            }\n\n            { reviewDialogOpen ? \n                <ReviewDialog open={reviewDialogOpen} onSubmit={handleSubmitFeedback} onClose={handleClose} />\n            : null }\n        </div >\n    )\n}\n","import React, { useState } from \"react\";\nimport { useParams } from 'react-router-dom';\n\nimport './Activity.css'\n\nimport useSWR from 'swr'\n\nimport { css } from \"@emotion/core\";\nimport BounceLoader from \"react-spinners/BounceLoader\";\n\nimport ActivityIntroduction from './ActivityIntroduction';\nimport ActivityCarousel from './ActivityCarousel';\n\n\nexport default function Activity() {\n\n    let { activityId } = useParams();\n\n    const [showActivityIntroduction, setShowActivityIntroduction] = useState(true)\n    \n    const startActivity = () => setShowActivityIntroduction(false)\n    \n    const { data } = useSWR(`/activities/api/get/${activityId-1}`)\n\n    const override = css`display: block; margin: 0 auto;`;\n    if (!data) return <BounceLoader color={\"#F19820\"} loading={true} css={override} size={100} />\n\n    return (\n        <div className=\"Activity\">\n            { showActivityIntroduction ?\n                (\n                    <ActivityIntroduction activityId={activityId} activity={data.activity} handleStartActivity={startActivity}/>\n                )\n                :\n                (\n                    <ActivityCarousel activityId={activityId} activity={data.activity}/>\n                )\n            }  \n        </div>\n    )\n}","import React from \"react\";\n\nimport './ActivityBubble.css'\n\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Link } from '@material-ui/core';\n\nexport default function ActivityBubble(props) {\n\n    const getActivityId = () => {\n        return props.activityId + 1;\n    }\n\n    const fullThumbnailPath = '/activities/' + getActivityId() + '/' + props.thumbnail;\n    const thumbnailUrl = \"url('\" + fullThumbnailPath + \"')\";\n\n    return (\n        <Link component={RouterLink}\n            to={{\n                pathname: \"/activity/\" + getActivityId(),\n            }}\n            className=\"ActivityBubble\"\n            style={{ backgroundColor: props.backgroundColour + 'd0', textDecoration: 'none' }}>\n            <div className=\"ActivityDetails\" style={{\n                opacity: props.bubbleSize > 50 ? 1 : 0,\n                transition: \"opacity 0.1s ease\",\n            }}>\n                <div className=\"ActivityThumbnail\" style={{ backgroundImage: thumbnailUrl }}>\n                </div>\n                <h1>{props.title}</h1>\n            </div>\n        </Link>\n    )\n\n}","import React from 'react';\nimport useSWR from 'swr'\n\nimport BubbleUI from \"react-bubble-ui\";\nimport \"react-bubble-ui/dist/index.css\";\n\nimport ActivityBubble from \"./ActivityBubble\";\n\nimport { css } from \"@emotion/core\";\nimport BounceLoader from \"react-spinners/BounceLoader\";\n\nimport \"./Spark.css\";\n\nfunction Spark() {\n\n    const override = css`display: block; margin: 0 auto;`;\n    \n    const options = {\n        size: 165,\n        minSize: 20,\n        gutter: 10,\n        provideProps: true,\n        numCols: 5,\n        fringeWidth: 120,\n        yRadius: 200,\n        xRadius: 100,\n        cornerRadius: 20,\n        showGuides: false,\n        compact: true,\n        gravitation: 5\n    }\n\n    const { data } = useSWR('/activities/api/list')\n\n    if (!data) return <BounceLoader color={\"#F19820\"} loading={true} css={override} size={100} />\n\n    return (\n        <div className=\"Spark\">\n            <BubbleUI options={options} className=\"sparkBubbleUi\">\n                { data.activities.map((activity, i) => {\n                    return (\n                        <ActivityBubble key={i} activityId={i} title={activity.title} thumbnail={activity.thumbnail} backgroundColour={activity.background_colour} />\n                    )\n                })}\n            </BubbleUI>\n        </div>\n    )\n\n}\n\nexport default Spark;","// React imports\nimport React, { useEffect } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\n// Authentication imports\nimport { PrivateRoute } from './components/Auth/PrivateRoute';\nimport Login from './components/Auth/Login';\nimport ResetWithToken from './components/Auth/ResetWithToken';\nimport Reset from './components/Auth/Reset';\nimport SignUp from './components/Auth/SignUp';\nimport ConfirmEmail from './components/Auth/ConfirmEmail';\n\n// App styling\nimport './App.css';\nimport './fonts/font.css';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles'\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\n// Navigation components\nimport Navbar from './components/Navbar/Navbar';\nimport TopBar from './components/TopBar/TopBar';\n\n// Page components\nimport SplashScreen from './components/SplashScreen/SplashScreen';\nimport UserMenu from './components/UserMenu/UserMenu.jsx';\nimport ViewActivitiesComponent from './components/ViewActivities/ViewActivitiesComponent';\nimport Activity from './components/Activity/Activity';\nimport Spark from './components/Spark/Spark';\n\n// Notifications\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nexport const SnackbarContext = React.createContext();\n\n\nexport default function App() {\n\n  const [splashScreen, setSplashScreen] = React.useState(true)\n\n  useEffect(() => {\n    setTimeout(() => {\n      setSplashScreen(false)\n    }, 1500);\n  }, []);\n\n  const theme = createMuiTheme({\n    palette: {\n      type: (useMediaQuery('(prefers-color-scheme: dark)') ? 'dark' : 'light'),\n      primary: {\n        main: '#F19820'\n      },\n      secondary: {\n        main: '#CAE8FF'\n      }\n    },\n    typography: {\n      fontFamily: [\n        'F37 Ginger',\n        '-apple-system',\n        'BlinkMacSystemFont',\n        '\"Segoe UI\"',\n        'Roboto',\n        '\"Helvetica Neue\"',\n        'Arial',\n        'sans-serif',\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"',\n      ].join(',')\n    }\n  });\n\n  // Snackbar\n  const [snackbar, setSnackbar] = React.useState({\n    text: '',\n    severity: '',\n    open: false,\n  });\n  const handleClose = () => {\n    setSnackbar({ open: false });\n  }\n\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <div className=\"App\">\n        <link rel=\"shortcut icon\" href=\"./favicon.ico\" />\n        <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\n\n        <header className=\"App-header\">\n\n          <SnackbarContext.Provider value={{ snackbar, setSnackbar }}>\n\n            <Snackbar open={snackbar.open} autoHideDuration={6000} onClose={handleClose}>\n              <MuiAlert onClose={handleClose} severity={snackbar.severity}>\n                {snackbar.text}\n              </MuiAlert>\n            </Snackbar>\n\n            {splashScreen ? (<SplashScreen />) : (\n\n              <BrowserRouter>\n\n                <TopBar />\n\n                <div className=\"AppWrapper\">\n\n                  <Switch>\n                    <Route exact path=\"/\"> <ViewActivitiesComponent /> </Route>\n\n                    <Route exact path=\"/activity/:activityId\"> <Activity /> </Route>\n\n                    <Route exact path=\"/spark\"> <Spark /> </Route>\n\n                    <PrivateRoute exact path=\"/user\" component={UserMenu} />\n\n                    <Route exact path=\"/login\" component={Login} />\n\n                    <Route exact path=\"/reset\" component={Reset} />\n\n                    <Route exact path=\"/register\" component={SignUp} />\n                    \n                    <Route exact path=\"/confirm/:token\" component={ConfirmEmail} />\n\n                    <Route exact path=\"/reset/:token\" component={ResetWithToken} />\n                  </Switch>\n\n                </div>\n\n                <Navbar />\n\n              </BrowserRouter>\n            )}\n\n          </SnackbarContext.Provider>\n        </header>\n      </div>\n    </ThemeProvider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import axios from 'axios';\n\nimport { authenticationService } from '../services';\nimport { refreshToken } from '../helpers';\nimport config from '../config';\n\naxios.interceptors.response.use(\n    (response) => {\n      return response\n    },\n    (error) => {\n      return new Promise((resolve) => {\n        const originalRequest = error.config\n        const refreshTokenString = refreshToken()\n        if (error.response && error.response.status === 401 && error.config && !error.config.__isRetryRequest && refreshTokenString) {\n          originalRequest._retry = true\n  \n          const response = fetch(config.authRefresh, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `Bearer ${refreshTokenString}`\n            },\n            body: JSON.stringify({\n              refresh: refreshToken,\n            }),\n          })\n            .then((res) => res.json())\n            .then((data) => {\n              const currentUser = JSON.parse(localStorage.getItem('currentUser'));\n              currentUser['access_token'] = data.access_token;\n              authenticationService.updateUser(currentUser);\n\n              window.location.reload();\n            })\n          resolve(response)\n        }\n  \n        return Promise.reject(error)\n      })\n    },\n  )","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { SWRConfig } from 'swr'\n\nimport './interceptors/axios-interceptor';\nimport { fetcher } from './services';\n\nReactDOM.render(\n\n    <SWRConfig value={{ fetcher }}>\n        <App />\n    </SWRConfig>\n    ,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}