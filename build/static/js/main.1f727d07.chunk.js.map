{"version":3,"sources":["helpers/auth-header.js","helpers/handle-response.js","config.js","services/authentication.service.js","services/api.service.js","services/axios-fetcher.service.js","components/Auth/PrivateRoute.jsx","components/Auth/Login.jsx","components/Auth/Logout.jsx","components/Auth/ResetWithToken.jsx","components/Auth/Reset.jsx","components/Auth/SignUp.jsx","components/Auth/ConfirmEmail.jsx","components/UserOnboarding/OnboardingLoading.jsx","components/UserOnboarding/OnboardingHero.jsx","components/UserOnboarding/UserOnboarding.jsx","components/Navbar/Navbar.jsx","components/TopBar/TopBar.jsx","components/SplashScreen/SplashScreen.jsx","components/UserMenu/UserHero.jsx","components/UserMenu/UserMenu.jsx","components/Card/CardComponent.jsx","components/Onboarding/Onboarding.jsx","components/Hero/Hero.jsx","components/HeroList/ActivityAvatarList.jsx","components/HeroList/HeroList.jsx","components/ViewActivities/ViewActivitiesComponent.jsx","components/Activity/ActivityIntroduction.jsx","components/Activity/Slider.jsx","components/Activity/ReviewDialog.jsx","components/Activity/ActivityCarousel.jsx","components/Activity/Activity.jsx","components/Spark/ActivityPreviewDialog.jsx","components/Spark/Parallax.jsx","components/Spark/Spark.jsx","components/Create/Create.jsx","App.js","serviceWorker.js","interceptors/axios-interceptor.js","index.js","components/Spark/styles.module.css"],"names":["authHeader","currentUser","authenticationService","currentUserValue","access_token","Authorization","accessToken","refreshToken","refresh_token","handleResponse","response","text","then","data","JSON","parse","ok","indexOf","status","logout","error","message","statusText","Promise","reject","config","authLogin","authRefresh","afterLogout","resetWithToken","authSignUp","authValidate","confirmEmail","userProfileUrl","activitiesListUrl","activityGetUrl","activityCompleteUrl","getSparkPlan","onboardingStatusUrl","onboardingSteps","onboardingQuestions","question","answers","currentUserSubject","BehaviorSubject","localStorage","getItem","login","removeItem","next","signUp","updateUser","userObject","setItem","stringify","validateRegistration","asObservable","value","username","password","a","requestOptions","method","headers","body","fetch","user","email","validation","token","hasOwnProperty","postApiData","url","values","axios","post","PrivateRoute","Component","component","rest","render","props","to","pathname","state","from","location","withRouter","setSnackbar","React","useContext","SnackbarContext","history","push","formik","useFormik","initialValues","onSubmit","open","severity","className","handleSubmit","TextField","fullWidth","id","name","label","onChange","handleChange","touched","Boolean","errors","type","helperText","Button","color","variant","Link","onClick","useParams","json","success","catch","validate","includes","username_exists","email_exists","Object","entries","map","pop","result","bounceLoaderCss","css","loading","size","useState","loadingDone","setLoadingDone","progress","setProgress","setText","titles","useEffect","timer","setInterval","oldProgress","diff","Math","random","newProgress","min","percent","titleIndex","floor","length","getText","clearInterval","style","animation","onComplete","LinearProgress","intensity","width","height","cx","cy","fill","r","OnboardingHero","backgroundImage","showIntroHero","setShowIntroHero","questionsDone","setQuestionsDone","activeStep","setActiveStep","steps","questions","currentQuestionIndex","setCurrentQuestionIndex","selectedAnswerIndices","setSelectedAnswerIndices","questionAnswerObject","setQuestionAnswerObject","newQuestionAnswerObject","questionIndex","answer","goToNextQuestion","nextQuestion","nextPercentage","nextStep","ceil","handleSaveOnboarding","onboarding_json","useSWR","Stepper","alternativeLabel","Step","StepLabel","List","aria-label","i","ListItem","selected","index","button","ListItemText","align","primary","disabled","SimpleBottomNavigation","setValue","BottomNavigation","event","newValue","showLabels","BottomNavigationAction","icon","TopBar","RouterLink","src","alt","fontSize","SplashScreen","UserHero","activities","activity","thumbnail","activityId","registered","UserMenu","CardComponent","card","margin","title","description","skipIntro","textDecoration","Onboarding","handleClose","setState","isVisible","story","intro","children","attachToId","this","onClose","Hero","ActivityAvatarList","Grid","item","dense","ListItemAvatar","Avatar","itemId","secondary","ListItemSecondaryAction","IconButton","edge","Divider","HeroList","half","firstHalf","splice","secondHalf","ViewActivitiesComponent","setActivities","getRandomActivities","count","Array","ActivityIntroduction","split","autoPlay","muted","loop","playsInline","controls","dangerouslySetInnerHTML","__html","handleStartActivity","useStyles","makeStyles","theme","root","spacing","iOSBoxShadow","marks","IOSSlider","withStyles","padding","thumb","backgroundColor","boxShadow","marginTop","marginLeft","active","valueLabel","left","top","background","track","rail","opacity","mark","markActive","Slider","FeedbackSlider","classes","defaultValue","valueLabelDisplay","ReviewDialog","feelingSliderValue","setFeelingSliderValue","sliderValue","setSliderValue","userFeedback","setUserFeedback","submitWithoutData","Dialog","disableEnforceFocus","DialogTitle","DialogContent","DialogContentText","multiline","target","DialogActions","feedback","feeling","slider","ActivityCarousel","reviewDialogOpen","setReviewDialogOpen","activityCompleted","setActivityCompleted","spaceBetween","slidesPerView","navigation","pagination","clickable","onReachEnd","pages","page","encodeURI","activity_id","activity_feedback","Activity","showActivityIntroduction","setShowActivityIntroduction","override","SwiperCore","use","Navigation","Pagination","A11y","Transition","forwardRef","ref","Slide","direction","ActivityPreviewDialog","TransitionComponent","wrap","leftMargin","window","innerWidth","topMargins","Page","offset","gradient","handleClick","speed","styles","slopeBegin","factor","backgroundSize","slopeEnd","number","display","marginBottom","activityIcon","dialogOpen","setDialogOpen","selectedActivity","setSelectedActivity","parallax","useRef","container","horizontal","onboarding","mutate","Parallax","Create","ButtonGroup","createContext","App","splashScreen","setSplashScreen","setTimeout","createMuiTheme","palette","useMediaQuery","main","typography","fontFamily","join","overrides","MuiTouchRipple","child","snackbar","ThemeProvider","CssBaseline","rel","href","Provider","Snackbar","autoHideDuration","exact","path","Spark","UserOnboarding","Login","Logout","Reset","SignUp","ConfirmEmail","ResetWithToken","hostname","match","interceptors","resolve","originalRequest","refreshTokenString","__isRetryRequest","_retry","refresh","res","reload","ReactDOM","fetcher","get","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.1f727d07.chunk.js","sourcesContent":["import { authenticationService } from '../services';\n\nexport function authHeader() {\n    // Return authorization header with jwt token\n    const currentUser = authenticationService.currentUserValue;\n    if (currentUser && currentUser.access_token) {\n        return { Authorization: `Bearer ${currentUser.access_token}` };\n    } else {\n        return {};\n    }\n}\n\nexport function refreshHeader() {\n    // Return authorization header with jwt token\n    const currentUser = authenticationService.currentUserValue;\n    if (currentUser && currentUser.refresh_token) {\n        return { Authorization: `Bearer ${currentUser.refresh_token}` };\n    } else {\n        return {};\n    }\n}\n\nexport function accessToken() {\n    // Return jwt token\n    const currentUser = authenticationService.currentUserValue;\n    if (currentUser && currentUser.access_token) {\n        return currentUser.access_token;\n    } else {\n        return {};\n    }\n}\n\nexport function refreshToken() {\n    // Return jwt refresh token\n    const currentUser = authenticationService.currentUserValue;\n    if (currentUser && currentUser.refresh_token) {\n        return currentUser.refresh_token;\n    } else {\n        return false;\n    }\n}","import { authenticationService } from '../services';\n\n// Handle Sign-in response\nexport function handleResponse(response) {\n    return response.text().then(text => {\n        const data = text && JSON.parse(text);\n        if (!response.ok) {\n            if ([401, 403].indexOf(response.status) !== -1) {\n                // Auto logout if 401 Unauthorized or 403 Forbidden response returned from api\n                authenticationService.logout();\n                //window.location.reload();\n            }\n\n            const error = (data && data.message) || response.statusText;\n            return Promise.reject(error);\n        }\n\n        return data;\n    });\n}","const config = \n{\n    authLogin: '/auth/login',\n    authRefresh: '/auth/refresh',\n    afterLogout: '/login',\n    resetWithToken: '/auth/reset/token',\n    authSignUp: '/auth/register',\n    authValidate: '/auth/validate',\n    confirmEmail: '/auth/confirm',\n    userProfileUrl: '/auth/profile',\n\n    activitiesListUrl: '/activities/api/list',\n    activityGetUrl: '/activities/api/get/',// +/${activityId}\n    activityCompleteUrl: '/activities/api/complete',\n\n    getSparkPlan: '/activities/api/spark/get',\n\n    onboardingStatusUrl: '/onboarding/status',\n\n    onboardingSteps: ['About yourself', 'You and art', 'Final details'],\n    onboardingQuestions: [\n        {\n            question: \"What kind of creative activity are you most interested in?\",\n            answers:[\n                \"Drawing\",\n                \"Writing\",\n                \"Painting\",\n                \"Crafts\",\n                \"Photography\"\n            ]\n        },\n        {\n            question: \"What would you like to use Myo for?\",\n            answers :[\n                \"To relax\",\n                \"To learn new skills\",\n                \"To use my imagination\",\n                \"To better express myself\",\n                \"To discover new arts\"\n            ]\n        },\n        {\n            question: \"What would you like Myo to offer?\",\n            answers: [\n                \"Breadth of activities\",\n                \"In depth skill building\",\n                \"Global perspectives\",\n                \"Interaction with artists & users\"\n            ]\n        },\n        {\n            question: \"What skills are you most interested in developing?\",\n            answers: [\n                \"Imagination\",\n                \"Persistence\",\n                \"Discipline\",\n                \"Inquisitiveness\",\n                \"Collaboration\"\n            ]\n        },\n        {\n            question: \"Generally, how often do you engage in creative activities?\",\n            answers: [\n                \"Everyday\",\n                \"Two or three times a week\",\n                \"Once every now and again\",\n                \"Never!\"\n            ]\n        },\n        {\n            question: \"How often would you like to engage in creative activities?\",\n            answers: [\n                \"Everyday\",\n                \"Two or three times a week\",\n                \"Once every now and again\",\n                \"Never!\"\n            ]\n        },\n        {\n            question: \"For how long?\",\n            answers: [\n                \"No more than 5mins at a time\",\n                \"5mins to 10mins\",\n                \"10mins to 20mins\",\n                \"20mins to 40mins\",\n                \"Sky’s the limit!\"\n            ]\n        },\n        {\n            question: \"How ‘experienced’ do you think you are?\",\n            answers: [\n                \"Complete beginner\",\n                \"Want to take it easy\",\n                \"I like a challenge!\",\n                \"Experience grrrr!!\"\n            ]\n        },\n        {\n            question:\"What materials do you have access to?\",\n            answers: [\n                \"Pens and paper only\",\n                \"Own some pencils\",\n                \"Watercolour paints\",\n                \"Acrylic paints\",\n                \"General arts & crafts stuff\",\n                \"Camera (phone will do)\"\n            ],\n            //type: 'multiple'\n        }\n    ]\n}\n\nexport default config","import { BehaviorSubject } from 'rxjs';\nimport { handleResponse } from '../helpers';\nimport config from '../config';\n\nconst currentUserSubject = new BehaviorSubject(JSON.parse(localStorage.getItem('currentUser')));\n\nexport const authenticationService = {\n    login,\n    logout,\n    signUp,\n    updateUser,\n    validateRegistration,\n    confirmEmail,\n    currentUser: currentUserSubject.asObservable(),\n    get currentUserValue() { return currentUserSubject.value }\n};\n\nasync function login(username, password) {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username, password })\n    };\n\n    const response = await fetch(config.authLogin, requestOptions);\n    const user = await handleResponse(response);\n\n    // Store user details and JWT token in local storage to keep user logged in between page refreshes\n    localStorage.setItem('currentUser', JSON.stringify(user));\n    currentUserSubject.next(user);\n    return user;\n}\n\n\nasync function signUp(username, email, password) {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username, password, email })\n    };\n\n    const response = await fetch(config.authSignUp, requestOptions);\n    const user = await handleResponse(response);\n\n    return user;\n}\n\nasync function validateRegistration(username, email) {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username, email })\n    };\n\n    const response = await fetch(config.authValidate, requestOptions);\n    const validation = await handleResponse(response);\n    \n    return validation;\n}\n\nasync function confirmEmail(token) {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ token })\n    };\n\n    const response = await fetch(config.confirmEmail, requestOptions);\n    const validation = await handleResponse(response);\n\n    if (validation.hasOwnProperty('success')) {\n        return true;\n    } else {\n        return false\n    }\n}\n\nfunction updateUser(userObject) {\n    localStorage.setItem('currentUser', JSON.stringify(userObject));\n    currentUserSubject.next(userObject);\n}\n\nfunction logout() {\n    // Remove user from local storage to log user out\n    localStorage.removeItem('currentUser');\n    currentUserSubject.next(null);\n}\n","import { authHeader } from '../helpers';\nimport axios from 'axios';\n\nexport async function postApiData (url, values) {\n    try {\n        const response = await axios.post(url, values, { headers: authHeader() });\n        const data = response.data;\n        return data;\n    } catch (error) {\n        return error;\n    }\n}","import axios from 'axios';\nimport { accessToken } from '../helpers';\n\n// Automatically include token with fetcher\nexport const fetcher = (url) =>\n  axios\n    .get(url, { headers: { Authorization: \"Bearer \" + accessToken() } })\n    .then((res) => res.data);","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nimport { authenticationService } from '../../services';\r\n\r\nexport const PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route {...rest} render={props => {\r\n        const currentUser = authenticationService.currentUserValue;\r\n        if (!currentUser) {\r\n            // Not logged in so redirect to login page with the return url\r\n            return <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\r\n        }\r\n\r\n        // Authorised so return component\r\n        return <Component {...props} />\r\n    }} />\r\n)","import React from 'react';\nimport { withRouter, Link } from 'react-router-dom';\n\nimport './Auth.css';\n\nimport { useFormik } from 'formik';\nimport { Button, TextField } from '@material-ui/core';\nimport { authenticationService } from '../../services';\n\nimport { SnackbarContext } from '../../App';\n\nfunction Login(props) {\n\n    const { setSnackbar } = React.useContext(SnackbarContext);\n\n    if (authenticationService.currentUserValue) {\n        props.history.push('/');\n    }\n\n\n    const formik = useFormik({\n        initialValues: {\n            username: '',\n            password: '',\n        },\n        onSubmit: (values) => {\n            authenticationService.login(values.username, values.password)\n                .then(\n                    (user) => {\n                        const { from } = props.location.state || { from: { pathname: \"/\" } };\n                        props.history.push(from);\n\n                        setSnackbar({\n                            text: `Welcome, ${values.username}`,\n                            open: true,\n                            severity: 'success'\n                        })\n                    }\n                );\n        }\n    });\n\n\n    return (\n        <div className=\"AuthForm\">\n            <form onSubmit={formik.handleSubmit}>\n                <TextField\n                    fullWidth\n                    id=\"username\"\n                    name=\"username\"\n                    label=\"Username\"\n                    value={formik.values.username}\n                    onChange={formik.handleChange}\n                    error={formik.touched.username && Boolean(formik.errors.username)}\n                />\n                <TextField\n                    fullWidth\n                    id=\"password\"\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    value={formik.values.password}\n                    onChange={formik.handleChange}\n                    error={formik.touched.password && Boolean(formik.errors.password)}\n                    helperText={formik.touched.password && formik.errors.password}\n                />\n                <Button className=\"SubmitButton\" color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n                    Submit\n                </Button>\n                <Button component={Link} to=\"/reset\" className=\"ResetPasswordButton\">\n                    Forgot password\n                </Button>\n                <Button component={Link} to=\"/register\">\n                    New account\n                </Button>\n            </form>\n        </div>\n    )\n}\n\nexport default withRouter(Login);","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport { authenticationService } from '../../services';\n\nimport { SnackbarContext } from '../../App';\n\nimport { Button } from '@material-ui/core';\n\nimport config from '../../config';\n\nfunction Logout(props) {\n    const { setSnackbar } = React.useContext(SnackbarContext);\n\n    const handleClick = () => {\n\n        setSnackbar({\n            text: `You have logged out.`,\n            open: true,\n            severity: 'success'\n        })\n\n        authenticationService.logout();\n        props.history.push(config.afterLogout);\n    }\n\n    return (\n        <Button variant=\"contained\" onClick={() => handleClick()}>\n            Logout\n        </Button>\n    )\n}\n\nexport default withRouter (Logout);","import React from 'react';\nimport { withRouter, useParams } from 'react-router-dom';\n\nimport { useFormik } from 'formik';\n\nimport { Button, TextField } from '@material-ui/core';\n\nimport './Auth.css';\n\nimport { SnackbarContext } from '../../App';\n\nimport config from '../../config';\n\nfunction ResetWithToken(props) {\n\n    const { setSnackbar } = React.useContext(SnackbarContext);\n\n    const { token } = useParams();\n\n    const formik = useFormik({\n        initialValues: {\n            password: '',\n        },\n        //validationSchema: validationSchema,\n        onSubmit: (values) => {\n            // Add in the token\n            values.token = token;\n\n            // Fetch the data\n            fetch(config.resetWithToken, {\n                method: 'POST',\n                body: JSON.stringify(values),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            })\n                .then(response => response.json())\n                .then(data => {\n                    if (data.hasOwnProperty('error')) {\n                        throw data.error;\n                    }\n                    setSnackbar({\n                        text: data.success,\n                        open: true,\n                        severity: 'success'\n                    })\n                    \n                    // Show the login screen\n                    props.history.push('/login');\n                })\n                .catch(function (error) {\n                    setSnackbar({\n                        text: error,\n                        open: true,\n                        severity: 'error'\n                    })\n                })\n        },\n    });\n\n    // Display a password reset form\n    return (\n        <div className=\"AuthForm\">\n            <form onSubmit={formik.handleSubmit}>\n                <TextField\n                    fullWidth\n                    id=\"password\"\n                    name=\"password\"\n                    label=\"New password\"\n                    type=\"password\"\n                    value={formik.values.password}\n                    onChange={formik.handleChange}\n                    error={formik.touched.password && Boolean(formik.errors.password)}\n                    helperText={formik.touched.password && formik.errors.password}\n                />\n                <Button variant=\"contained\" fullWidth type=\"submit\">\n                    Set new password\n                </Button>\n            </form>\n        </div>\n    )\n}\n\nexport default withRouter(ResetWithToken)","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport { useFormik } from 'formik';\n\nimport { Button, TextField } from '@material-ui/core';\n\nimport { SnackbarContext } from '../../App';\n\nfunction Reset(props) {\n\n    const { setSnackbar } = React.useContext(SnackbarContext);\n\n    const formik = useFormik({\n        initialValues: {\n            email: '',\n        },\n        onSubmit: (values) => {\n            fetch('/auth/reset', {\n                method: 'POST',\n                body: JSON.stringify(values),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            })\n                .then(response => response.json())\n                .then(data => {\n                    if (data.hasOwnProperty('error')) {\n                        throw data.error;\n                    }\n                    \n                    setSnackbar({\n                        text: data.success,\n                        open: true,\n                        severity: 'success'\n                    })\n\n                    props.history.push('login');\n                    \n                })\n                .catch(function (error) {\n                    \n                    setSnackbar({\n                        text: error,\n                        open: true,\n                        severity: 'error'\n                    })\n\n                })\n        },\n    });\n\n    // Display an email form, to which reset email can be sent\n    return (\n        <div className=\"AuthForm\">\n            <form onSubmit={formik.handleSubmit}>\n                <TextField\n                    fullWidth\n                    id=\"email\"\n                    name=\"email\"\n                    label=\"Email\"\n                    type=\"email\"\n                    value={formik.values.email}\n                    onChange={formik.handleChange}\n                    error={formik.touched.email && Boolean(formik.errors.email)}\n                    helperText={formik.touched.email && formik.errors.email}\n                />\n\n                <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n                    Send password reset email\n                </Button>\n\n                <Button component={Link} to=\"/login\">\n                    Back to Login\n                </Button>\n            </form>\n        </div>\n    )\n}\n\nexport default withRouter(Reset)","import React from 'react';\nimport { withRouter, Link } from 'react-router-dom';\n\nimport './Auth.css';\n\nimport { useFormik } from 'formik';\nimport { Button, TextField } from '@material-ui/core';\nimport { authenticationService } from '../../services';\n\nimport { SnackbarContext } from '../../App';\n\nfunction SignUp(props) {\n\n    const { setSnackbar } = React.useContext(SnackbarContext);\n\n    if (authenticationService.currentUserValue) {\n        props.history.push('/');\n    }\n\n    // Async validation\n    const validate = async (values, props) => {\n        const validation = await authenticationService.validateRegistration(values.username, values.email);\n        \n        const errors = {};\n        \n        if (['admin', 'null', 'god'].includes(values.username)) {\n            errors.username = 'Please choose a different username';\n        }\n        if (validation.username_exists)\n            errors.username = 'This username is already taken';\n        if (validation.email_exists)\n            errors.email = 'This email is already registered';\n\n        Object.entries(errors).map(error => {\n            setSnackbar({\n                text: error.pop(),\n                open: true,\n                severity: 'warning'\n            })\n            return true\n        })\n        \n        return errors;\n    };\n\n\n    const formik = useFormik({\n        initialValues: {\n            username: '',\n            email: '',\n            password: '',\n        },\n        onSubmit: (values) => {\n            authenticationService.signUp(values.username, values.email, values.password)\n                .then(\n                    (user) => {\n                        props.history.push('/login');\n\n                        setSnackbar({\n                            text: `An email has been sent to ${values.email}. Please open it to continue.`,\n                            open: true,\n                            severity: 'success'\n                        })\n                    }\n                );\n        },\n        validate: validate,\n    });\n\n    return (\n        <div className=\"AuthForm\">\n            <form onSubmit={formik.handleSubmit}>\n                <TextField\n                    fullWidth\n                    id=\"username\"\n                    name=\"username\"\n                    label=\"Username\"\n                    value={formik.values.username}\n                    onChange={formik.handleChange}\n                    error={formik.touched.username && Boolean(formik.errors.username)}\n                />\n                <TextField\n                    fullWidth\n                    id=\"email\"\n                    name=\"email\"\n                    label=\"Email\"\n                    value={formik.values.email}\n                    onChange={formik.handleChange}\n                    error={formik.touched.email && Boolean(formik.errors.email)}\n                />\n                <TextField\n                    fullWidth\n                    id=\"password\"\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    value={formik.values.password}\n                    onChange={formik.handleChange}\n                    error={formik.touched.password && Boolean(formik.errors.password)}\n                    helperText={formik.touched.password && formik.errors.password}\n                />\n                <Button className=\"SubmitButton\" color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\n                    Submit\n                </Button>\n                <Button component={Link} to=\"/login\" className=\"ResetPasswordButton\">\n                    Back to log-in\n                </Button>\n            </form>\n        </div>\n    )\n}\n\nexport default withRouter(SignUp);","import React from 'react';\nimport { withRouter, useParams } from 'react-router-dom';\n\nimport { authenticationService } from '../../services';\n\nimport { SnackbarContext } from '../../App';\n\nimport { css } from \"@emotion/core\";\nimport BounceLoader from \"react-spinners/BounceLoader\";\n\nfunction ConfirmEmail(props) {\n\n    const { setSnackbar } = React.useContext(SnackbarContext);\n\n    const { token } = useParams();\n     \n    authenticationService.confirmEmail(token)\n        .then((result) => {\n            const message = ( result ? `Your email has been confirmed. You can now log-in.` : `We could not confirm your email.`)\n            setSnackbar({\n                text: message,\n                open: true,\n                severity: ( result ? 'success' : 'error')\n            })  \n            props.history.push('/login');    \n        })\n\n    const bounceLoaderCss = css`display: block; margin: 0 auto;`;\n\n    return (\n        <BounceLoader color='#F19820' loading={true} css={bounceLoaderCss} size={100} />\n    )\n}\n\nexport default withRouter(ConfirmEmail);","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport './OnboardingLoading.css'\nimport 'animate.css'\n\nimport Goo from 'gooey-react'\n\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Button from '@material-ui/core/Button';\n\nfunction OnboardingLoading(props) {\n\n    const [loadingDone, setLoadingDone] = React.useState(false);\n    \n    const [progress, setProgress] = React.useState(0);\n    const [text, setText] = React.useState('')\n\n    const titles = [\n        'Myo is AI creativity in your pocket',\n        `Right now, we're analysing the experience of 35,892 users`,\n        'To make sure your plan fits you perfectly',\n        'Your personalised creativity plan is almost ready. Are you?'\n    ]\n\n    const getText = (percent) => {\n        const titleIndex = Math.floor(percent * titles.length / 100)\n        return titles[titleIndex]\n    }\n    \n    React.useEffect(() => {\n        const timer = setInterval(() => {\n            setProgress((oldProgress) => {\n                if (oldProgress === 100) {\n                    setLoadingDone(true)\n                }\n                const diff = Math.random() * 6;\n                const newProgress =  Math.min(oldProgress + diff, 100);\n                \n                if (newProgress > 95) {\n                    setLoadingDone(true)\n                }\n                \n                setText(getText(newProgress));\n                return newProgress;\n            });\n            }, 500);\n\n            return () => {\n                clearInterval(timer);\n            };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    if (loadingDone) {\n        return (\n            <div>\n                <h2 className=\"animate__animated animate__backInDown\">Your custom training plan is ready</h2>\n                <Button \n                    style={{ animation: 'pulse 3s ease infinite', 'margin': '20px 0' }} \n                    className=\"StartButton animate__animated animate__fadeIn animate__delay-1s\"\n                    variant=\"contained\" size=\"large\" color=\"primary\" \n                    onClick={()=> props.onComplete()}\n                >\n                Let's go\n                </Button>\n            </div>\n        )\n    }\n\n    return (\n        <div style={{'margin': '0 20px'}}>\n            <h3 className=\"animate__animated animate__backInDown animate__delay-1s\" >{text}</h3>\n            <LinearProgress className=\"animate__animated animate__fadeIn\" variant=\"determinate\" value={progress} />\n            \n            <Goo className=\"animate__animated animate__fadeIn goo\" intensity=\"strong\"> \n                <svg width=\"500\" height=\"500\">\n                    <circle cx=\"29%\" cy=\"50%\" fill=\"#FFB339\" r=\"49\" style={{ animation: 'right 3s ease infinite' }} />\n                    <circle cx=\"44%\" cy=\"34%\" fill=\"#C6302C\" r=\"23\" style={{ animation: 'left 7s linear infinite' }} />\n                    <circle cx=\"34%\" cy=\"74%\" fill=\"#F19821\" r=\"59\" style={{ animation: 'left 4s linear infinite' }} />\n                    <circle cx=\"56%\" cy=\"59%\" fill=\"mediumorchid\" r=\"46\" style={{ animation: 'right 5s ease infinite' }} />\n                </svg>\n            </Goo>\n        </div>\n    )\n}\n\nexport default withRouter(OnboardingLoading);","import React from 'react';\nimport './OnboardingHero.css';\n\nimport Button from '@material-ui/core/Button';\nimport EmojiObjectsIcon from '@material-ui/icons/EmojiObjects';\n\nexport default function OnboardingHero(props) {\n\n    return (\n        <div className=\"OnboardingHero\" style={{ backgroundImage: `url(\"/activities/20/Thumbnail.jpeg\"` }}>\n            <div className=\"UserHeroContent\" style={{ 'background': `linear-gradient(90deg, rgba(241,152,32,1) 40%, rgba(255,255,255,0) 90%)` }}>\n                \n                <h2>Spark is a totally custom creativity journey, designed for you.</h2>\n                <p><EmojiObjectsIcon className=\"Icon\" /> To get started, we need to know a little bit more about you.</p>\n                <Button className=\"OnboardingHeroButton\" onClick={props.onClick}>Next</Button>\n                \n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport './UserOnboarding.css'\nimport 'animate.css'\n\nimport useSWR from 'swr'\nimport { css } from \"@emotion/core\";\nimport BounceLoader from \"react-spinners/BounceLoader\";\n\nimport { List, ListItem, ListItemText, Stepper, Step, StepLabel, Button } from '@material-ui/core';\n\nimport OnboardingLoading from './OnboardingLoading';\nimport OnboardingHero from './OnboardingHero';\n\nimport config from '../../config';\n\nimport { postApiData } from '../../services/api.service';\nimport { SnackbarContext } from '../../App';\n\nfunction UserOnboarding(props) {\n\n    const { setSnackbar } = React.useContext(SnackbarContext);\n\n    // Visual state of onboarding\n    const [showIntroHero, setShowIntroHero] = React.useState(true)\n    const [questionsDone, setQuestionsDone] = React.useState(false)\n\n    // Store the steps in state\n    const [activeStep, setActiveStep] = React.useState(0);\n    const steps = config.onboardingSteps;\n\n    // Store questions in state\n    const questions = config.onboardingQuestions;\n    const [currentQuestionIndex, setCurrentQuestionIndex] = React.useState(0);\n    const [selectedAnswerIndices, setSelectedAnswerIndices] = React.useState([]);\n    const [questionAnswerObject, setQuestionAnswerObject] = React.useState([]);\n\n    // If the current question index changes, save the answer\n    React.useEffect(() => {\n        if (!selectedAnswerIndices.length) return\n\n        const newQuestionAnswerObject = {\n            questionIndex: currentQuestionIndex,\n            question: questions[currentQuestionIndex].question,\n            answer: selectedAnswerIndices\n        }\n\n        setQuestionAnswerObject ([...questionAnswerObject, newQuestionAnswerObject])\n        setSelectedAnswerIndices([]);\n\n        if (questions[currentQuestionIndex].type !== 'multiple') goToNextQuestion();\n    \n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [selectedAnswerIndices]);\n\n    const goToNextQuestion = () => {\n        const nextQuestion = currentQuestionIndex + 1;\n        const nextPercentage = nextQuestion * 100 / questions.length;\n        const nextStep = Math.ceil(nextPercentage * steps.length / 100);\n        if (currentQuestionIndex < (questions.length - 1)) {\n            setCurrentQuestionIndex(nextQuestion);\n            setSelectedAnswerIndices([]);\n            setActiveStep (nextStep);\n        } else {\n            handleSaveOnboarding(JSON.stringify(questionAnswerObject))\n            setQuestionsDone(true)\n        }\n    }\n\n    const handleQuestionClick = (index) => {\n        setSelectedAnswerIndices([...selectedAnswerIndices, index]);\n    };\n\n    const handleSaveOnboarding = (json) => {\n        postApiData('/onboarding/save', {onboarding_json: json}).then(\n          response => setSnackbar({\n            text: response.success || response.error,\n            open: (response.error),\n            severity: (response.success ? 'success' : 'error')\n          })\n        )\n      };\n\n    // Checks the current question index and returns a list item\n    const renderQuestion = () => {\n        return (\n            <List component=\"nav\" aria-label=\"Onboarding answers\">\n            {questions[currentQuestionIndex].answers.map((answer, i) =>\n                <ListItem\n                    selected={selectedAnswerIndices.includes(i)}\n                    onClick={() => handleQuestionClick(i)}\n                    button key={i}\n                >\n                    <ListItemText align=\"center\" primary={answer} />\n                </ListItem>\n            )}\n            {questions[currentQuestionIndex].type === 'multiple' ? \n                <Button \n                    variant=\"contained\" \n                    color=\"primary\" \n                    onClick={goToNextQuestion}\n                    disabled={!selectedAnswerIndices.length}>Next</Button>\n                : null\n            }\n            </List>\n        )\n    }\n\n    // ☑️ Check and redirect if user has already done onboarding\n    const bounceLoaderCss = css`display: block; margin: 0 auto;`;\n    const { data } = useSWR(config.onboardingStatusUrl)\n    if (!data) return <BounceLoader color='#F19820' loading={true} css={bounceLoaderCss} size={100} />\n    if (data.hasOwnProperty('success')) props.onComplete();\n    \n    // At the start, show the onboarding intro\n    if (showIntroHero) return <OnboardingHero onClick={() => setShowIntroHero(false)} />\n    \n    // If the questions are done, show the post-loading screen\n    if (questionsDone) return <OnboardingLoading onComplete={props.onComplete}/>\n\n    return (\n        <div className=\"UserOnboarding\">\n            <Stepper activeStep={activeStep} alternativeLabel style={{'backgroundColor': 'transparent'}}>\n                {steps.map((label) => (\n                <Step key={label}>\n                    <StepLabel>{label}</StepLabel>\n                </Step>\n                ))}\n            </Stepper>\n            <h2>{questions[currentQuestionIndex].question}</h2>\n\n            {renderQuestion(questions[currentQuestionIndex])}\n        </div>\n    )\n}\n\nexport default withRouter(UserOnboarding);","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Navbar.css';\n\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\n\nimport HomeIcon from '@material-ui/icons/Home';\nimport EmojiObjectsIcon from '@material-ui/icons/EmojiObjects';\nimport BrushIcon from '@material-ui/icons/Brush';\n\nexport default function SimpleBottomNavigation() {\n    const [value, setValue] = React.useState(0);\n  \n    return (\n      <BottomNavigation\n        value={value}\n        onChange={(event, newValue) => {\n          setValue(newValue);\n        }}\n        showLabels\n        className=\"navbar\"\n      >\n        <BottomNavigationAction component={Link} to=\"/\" id=\"HomeNavbarIcon\" label=\"Home\" icon={<HomeIcon />} />\n        <BottomNavigationAction component={Link} to=\"/spark\" id=\"SparkNavbarIcon\" label=\"Spark\" icon={<EmojiObjectsIcon />} />\n        \n      </BottomNavigation>\n    );\n  }\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Link } from '@material-ui/core';\n\nimport './TopBar.css';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\n\nclass TopBar extends React.Component {\n  \n  render() {\n      return (\n          <div className=\"TopBar\">\n            <Link component={RouterLink} to=\"/\" className=\"AccountLink\">\n              <img className=\"MyoLogo\" src=\"/assets/logo.png\" alt=\"Myo app logo\" />\n            </Link>\n            <img className=\"MyoText\" src=\"/assets/myo-text.png\" alt=\"Myo app logo\" />\n            <Link component={RouterLink} to=\"/user\" className=\"AccountLink\">\n              <AccountCircleIcon fontSize=\"large\" className=\"AccountCircle\" />\n            </Link>\n          </div>\n      )\n  }\n}\n\nexport default TopBar;","import React, { Suspense } from 'react';\nimport './SplashScreen.css';\n\nimport 'animate.css'\n\nexport default function SplashScreen() {\n  return (\n    <div className=\"SplashScreen\">\n      <div className=\"SplashScreenWrapper\">\n        <Suspense>\n          <img src=\"/assets/myo-text-icon.png\" alt=\"Myo icon\" />\n          <p className=\"animate__animated animate__bounceIn\">Spark wonder</p>\n        </Suspense>\n      </div>\n    </div>\n  )\n}\n","import React from 'react';\nimport './UserHero.css';\n\nimport useSWR from 'swr'\nimport { css } from \"@emotion/core\";\nimport BounceLoader from \"react-spinners/BounceLoader\";\n\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport LocalActivityIcon from '@material-ui/icons/LocalActivity';\n\nimport Logout from '../Auth/Logout';\n\nimport config from '../../config';\n\nexport default function UserHero(props) {\n\n    const { data } = useSWR(config.userProfileUrl)\n    const bounceLoaderCss = css`display: block; margin: 0 auto;`;\n\n    if (!props.activities) return null;\n    if (!data) return <BounceLoader color={\"#F19820\"} loading={true} css={bounceLoaderCss} size={100} />\n\n    const activity = props.activities.pop()\n    const thumbnail = `/activities/${activity.activityId}/${activity.thumbnail}`\n\n    return (\n        <div className=\"UserHero\" style={{ backgroundImage: `url(\"${thumbnail}\"` }}>\n            <div className=\"UserHeroContent\" style={{ 'background': `linear-gradient(90deg, rgba(241,152,32,1) 40%, rgba(255,255,255,0) 90%)` }}>\n                \n                <Logout className=\"UserHeroLink\" />\n                <h1>{data.username}</h1>\n                <p><AccountCircleIcon className=\"Icon\" /> Member since:</p>\n                <p className=\"caption\">{data.registered}</p>\n\n                <p><LocalActivityIcon className=\"Icon\" /> Total activities:</p>\n                <p className=\"caption\">52</p>\n                <span className=\"stamp is-nope\">Super member</span>\n                \n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport './UserMenu.css';\n\nimport useSWR from 'swr'\nimport { css } from \"@emotion/core\";\nimport BounceLoader from \"react-spinners/BounceLoader\";\n\nimport UserHero from './UserHero';\n\nimport config from '../../config';\n\nexport default function UserMenu() {\n\n    const bounceLoaderCss = css`display: block; margin: 0 auto;`;\n    const { data } = useSWR(config.activitiesListUrl)\n    if (!data) return <BounceLoader color='#F19820' loading={true} css={bounceLoaderCss} size={100} />\n\n    return (\n        <div className=\"UserMenu\">\n            <UserHero activities={data.activities}/>              \n        </div>\n    )\n}","import React from 'react';\nimport './CardComponent.css'\n\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Link } from '@material-ui/core';\n\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\n\nfunction CardComponent(props) {\n    \n    const to = (activityId) => props.skipIntro ? `/activity/${activityId}/go` : `/activity/${activityId}`\n    \n    return (\n        <div className=\"cardComponent\">\n            {props.activities.map((card, i) => (\n                \n                <div className=\"card\" key={i} style={{margin: props.margin}}>\n                    \n                    <div className=\"card-image\">\n                        <img src={`/activities/${card.activityId}/${card.thumbnail}`} alt=\"Header decoration\" />\n                    </div>\n                    \n                    <div className=\"content\">\n                        <h4>{card.title}</h4>\n                        <p>{card.description}</p>\n                    </div>\n                    \n                    <Link component={RouterLink}\n                        to={{pathname: to(card.activityId)}}\n                        className=\"read-more\"\n                        style={{ textDecoration: 'none' }}>\n                       <span>Start activity <ChevronRightIcon className=\"chevron-right\" /></span>\n                    </Link>\n\n                </div>\n            ))}\n        </div>\n    )\n}\n\nexport default CardComponent;","import React from 'react';\n\nimport UserOnboarding from 'react-user-onboarding'\nimport 'react-user-onboarding/dist/index.css'\n\nclass Onboarding extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isVisible: (localStorage.getItem('onboardingComplete') === null)\n        }\n\n        this.story = [\n            {\n                component: 'modal',\n                intro: true,\n                children: (\n                    <p>Hey there! Welcome to Myo. As this is your first time, could we show you around?</p>\n                ),\n                className: 'introModal'\n            },\n            {\n                component: 'speech-bubble',\n                attachToId: 'HomeNavbarIcon',\n                children: (\n                    <p>This is the Home tab, where you can view all our activities, or you can click Spark, to start your custom creative journey.</p>\n                )\n            },\n            {\n                component: 'modal',\n                intro: false,\n                children: (\n                    <p>The main feature of Myo is a custom curated journey of creativity exercises, that adapts and matches what you need.</p>\n                )\n            },\n            {\n                component: 'modal',\n                intro: false,\n                children: (\n                    <p>We regularly add more exercises. Good luck with your creativity journey!</p>\n                )\n            }\n        ]\n    }\n\n    handleClose = () => {\n        localStorage.setItem('onboardingComplete', true);\n        this.setState({ isVisible: false })\n    }\n\n    render() {\n        return (\n            <UserOnboarding\n                story={this.story}\n                isVisible={this.state.isVisible}\n                onClose={this.handleClose}\n            />\n        )\n    }\n}\n\nexport default Onboarding;","import React from 'react';\nimport './Hero.css';\n\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Link } from '@material-ui/core';\n\nexport default function Hero(props) {\n\n    const activity = props.activities.pop()\n\n    const thumbnail = `/activities/${activity.activityId}/${activity.thumbnail}`\n    const pathname = `/activity/${activity.activityId}`\n\n    return (\n        <div className=\"Hero\" style={{ backgroundImage: `url(\"${thumbnail}\"`}}>\n            <div className=\"HeroContent\" style={{'background': `linear-gradient(90deg, rgba(241,152,32,1) 35%, rgba(255,255,255,0) 64%)`}}>\n                <h1>{activity.title}</h1>\n                <p>{activity.description}</p>\n\n                <Link component={RouterLink}\n                    to={{\n                        pathname: pathname,\n                        state: { activityId: activity.activityId }\n                    }}\n                    className=\"HeroLink\"\n                    style={{ textDecoration: 'none' }}>\n                    <button className=\"HeroButton\" >Start now</button>\n                </Link>\n\n            </div>\n        </div>\n    )\n}","import React from 'react';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Link } from '@material-ui/core';\n\nimport './ActivityAvatarList.css';\n\nexport default function ActivityAvatarList(props) {\n\n    const getThumbnail = (thumbnail, itemId) => `/activities/${itemId}/${thumbnail}`\n\n    return (\n        <Grid item>\n            <List dense={false}>\n                {props.activities.map((activity, i) => (\n                    <Link \n                        key={i} \n                        component={RouterLink}\n                        to={{ pathname: `/activity/${activity.activityId}` }}\n                        style={{ textDecoration: 'none', color: '#333' }}\n                    >\n                        <ListItem className=\"ListItem\" >\n                            <ListItemAvatar>\n                                <Avatar>\n                                    <img src={getThumbnail(activity.thumbnail, activity.activityId)} alt=\"Activity illustration\" />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={activity.title}\n                                secondary={activity.description}\n                            />\n                            <ListItemSecondaryAction>\n                                <IconButton edge=\"end\">\n                                    <NavigateNextIcon />\n                                </IconButton>\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                        \n                        <Divider variant=\"inset\" component=\"li\" />\n                    </Link>\n                ))}\n            </List>\n        </Grid>\n    );\n}\n","import React from 'react';\nimport './HeroList.css';\n\nimport ActivityAvatarList from './ActivityAvatarList';\n\nexport default function HeroList(props) {\n    \n    // Split the array in half\n    const half = Math.ceil(props.activities.length / 2);    \n    const firstHalf = props.activities.splice(0, half)\n    const secondHalf = props.activities.splice(-half)\n\n    return (\n        <div className=\"HeroList\">\n            <h1>{props.title}</h1>\n            <div className=\"HeroListContent\">\n                <ActivityAvatarList className=\"ActivityAvatarList\" activities={firstHalf} />\n                <ActivityAvatarList className=\"ActivityAvatarList\" activities={secondHalf} />\n            </div>\n        </div>\n    )\n}","import React from \"react\"\nimport useSWR from 'swr'\nimport './ViewActivitiesComponent.css'\n\nimport { css } from \"@emotion/core\";\nimport BounceLoader from \"react-spinners/BounceLoader\";\n\nimport CardComponent from '../Card/CardComponent';\nimport Onboarding from '../Onboarding/Onboarding';\nimport Hero from '../Hero/Hero';\nimport HeroList from '../HeroList/HeroList';\n\nimport config from '../../config';\n\nexport default function ViewActivitiesComponent() {\n\n    const bounceLoaderCss = css`display: block; margin: 0 auto;`;\n\n    const { data } = useSWR(config.activitiesListUrl)\n\n    if (!data) return <BounceLoader color='#F19820' loading={true} css={bounceLoaderCss} size={100} />\n    \n    var activities\n    const setActivities = () => {\n        activities=[...data.activities]\n    }\n    setActivities();\n\n\n    // Function to remove from the main array ${count} amount of items\n    const getRandomActivities = (count=false) => {\n        if (activities.length < 1) {setActivities()}\n\n        if (!count) {count = activities.length}\n        return [...Array(count)].map(() => activities.splice(Math.floor(Math.random() * activities.length), 1)[0]);\n    }\n    \n    return (\n        <div className=\"ViewActivitiesComponent\">\n            <Onboarding />\n            <Hero activities={getRandomActivities(1)}/>\n            <HeroList activities={getRandomActivities(4)} title=\"Activities we love right now\"/>\n            <CardComponent activities={getRandomActivities(3)} />\n            <Hero activities={getRandomActivities(1)}/>\n            <HeroList activities={getRandomActivities(4)} title=\"Trending this week\"/>\n            <CardComponent activities={getRandomActivities(6)} />\n            <Hero activities={getRandomActivities(1)}/>\n            <CardComponent activities={getRandomActivities(3)} />\n        </div>\n    )\n}","import React from \"react\";\nimport { Button } from '@material-ui/core';\n\nimport './ActivityIntroduction.css';\n\nexport default function ActivityIntroduction(props) {\n    return (\n        <div className=\"ActivityIntroduction\">\n            {(props.activity.thumbnail.split('.').pop() === 'mp4') ? (\n                <video className=\"ActivityVideo\" autoPlay muted loop playsInline controls >\n                    <source src={`/activities/${props.activityId}/${props.activity.thumbnail}`} type=\"video/mp4\" />\n                </video>\n            ) : (\n                <img src={'/activities/' + (props.activityId) + '/' + props.activity.thumbnail} alt=\"Header decoration\" />\n            )}\n            <h1>{props.activity.title}</h1>\n            <p dangerouslySetInnerHTML={{ __html: props.activity.description }}></p>\n            <Button variant=\"contained\" color=\"primary\" onClick={props.handleStartActivity}>\n                I'm ready\n                </Button>\n        </div>\n    )\n}\n","import React from 'react';\n\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: 150 + theme.spacing(3) * 2\n    },\n    margin: {\n        height: theme.spacing(3),\n    },\n}));\n\nconst iOSBoxShadow =\n    '0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.13),0 0 0 1px rgba(0,0,0,0.02)';\n\nconst marks = [\n    {\n        value: 0,\n        label: '😟'\n    },\n    {\n        value: 50,\n        label: '😌'\n    },\n    {\n        value: 100,\n        label: '🧑‍🎨'\n    },\n];\n\nconst IOSSlider = withStyles({\n    root: {\n        color: '#F19820',\n        height: 2,\n        padding: '15px 0',\n    },\n    thumb: {\n        height: 28,\n        width: 28,\n        backgroundColor: '#fff',\n        boxShadow: iOSBoxShadow,\n        marginTop: -14,\n        marginLeft: -14,\n        '&:focus, &:hover, &$active': {\n            boxShadow: '0 3px 1px rgba(0,0,0,0.1),0 4px 8px rgba(0,0,0,0.3),0 0 0 1px rgba(0,0,0,0.02)',\n            // Reset on touch devices, it doesn't add specificity\n            '@media (hover: none)': {\n                boxShadow: iOSBoxShadow,\n            },\n        },\n    },\n    active: {},\n    valueLabel: {\n        left: 'calc(-50% + 12px)',\n        top: -22,\n        '& *': {\n            background: 'transparent',\n            color: '#000',\n        },\n    },\n    track: {\n        height: 2,\n    },\n    rail: {\n        height: 2,\n        opacity: 0.5,\n        backgroundColor: '#bfbfbf',\n    },\n    mark: {\n        backgroundColor: '#bfbfbf',\n        height: 8,\n        width: 1,\n        marginTop: -3,\n    },\n    markActive: {\n        opacity: 1,\n        backgroundColor: '#F19820',\n    },\n})(Slider);\n \nexport default function FeedbackSlider(props) {\n    const { value, onChange} = props;\n    \n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <IOSSlider \n                aria-label=\"How did you feel slider\" \n                defaultValue={75} \n                marks={marks} \n                value={value}\n                onChange={onChange}\n                valueLabelDisplay=\"off\" />\n        </div>\n    );\n}\n","import React from 'react';\n\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Link, Button, TextField } from '@material-ui/core';\n\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\n\nimport Rate from 'rc-rate';\nimport 'rc-rate/assets/index.css';\n\nimport FeedbackSlider from './Slider';\n\nimport './ReviewDialog.css';\n\nexport default function ReviewDialog(props) {\n\n    const [feelingSliderValue, setFeelingSliderValue] = React.useState(70);\n    const [sliderValue, setSliderValue] = React.useState(0);\n    const [userFeedback, setUserFeedback] = React.useState('');\n\n    const handleSliderChange = (event, value) => setFeelingSliderValue(value)\n\n    const gatherData = () => {\n        const feedback = \n            {\n                feeling: feelingSliderValue,\n                slider: sliderValue,\n                userFeedback: userFeedback\n            }\n\n        props.onSubmit(feedback)\n    }\n\n    const submitWithoutData = () => {\n        const feedback = {}\n        props.onSubmit(feedback)\n    }\n\n    return (\n        <Dialog  onClose={submitWithoutData} open={props.open} disableEnforceFocus>\n            <DialogTitle align=\"center\" id=\"dialog-title\">Congratulations! 🎉</DialogTitle>\n            <DialogContent align=\"center\"  className=\"ReviewDialogContent\">\n                <DialogContentText>\n                    How did you feel?\n                        <FeedbackSlider value={feelingSliderValue} onChange={handleSliderChange}/>\n                </DialogContentText>\n                <DialogContentText>\n                    How would you rate this activity?\n                        <br />\n                    <Rate value={sliderValue} onChange={setSliderValue}/>\n                </DialogContentText>\n                <DialogContentText>\n\n                    <TextField\n                        fullWidth\n                        align=\"center\" \n                        id=\"feedbackText\"\n                        multiline\n                        name=\"feedbackText\"\n                        label=\"Any notes to yourself?\"\n                        value={userFeedback}\n                        onChange={event => setUserFeedback(event.target.value)}\n                    />\n                </DialogContentText>\n\n            </DialogContent>\n            <DialogActions>\n                <Link component={RouterLink} to={{ pathname: \"/\" }} style={{ textDecoration: 'none' }}>\n                    <Button onClick={submitWithoutData}>\n                        Skip\n                    </Button>\n                </Link>\n                <Link component={RouterLink} to={{ pathname: \"/\" }} style={{ textDecoration: 'none' }}>\n                    <Button variant=\"contained\" onClick={gatherData} color=\"primary\" type=\"submit\">\n                    Done\n                    </Button>\n                </Link>\n            </DialogActions>\n        </Dialog>\n    )\n}","import React, { useState } from \"react\";\nimport { Button } from '@material-ui/core';\n\nimport './ActivityCarousel.css';\n\n// Import Swiper React components\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport SwiperCore, { Navigation, Pagination, A11y } from 'swiper';\nimport 'swiper/swiper.scss';\nimport 'swiper/components/navigation/navigation.scss';\nimport 'swiper/components/scrollbar/scrollbar.scss';\nimport 'swiper/components/pagination/pagination.scss';\n\nimport ReviewDialog from './ReviewDialog';\n\nimport { postApiData } from '../../services/api.service';\nimport config from '../../config';\n\nSwiperCore.use([Navigation, Pagination, A11y]);\n\nexport default function ActivityCarousel(props) {\n\n    const [reviewDialogOpen, setReviewDialogOpen] = React.useState(false)\n\n    const [activityCompleted, setActivityCompleted] = useState(false)\n    const finishedActivity = () => setActivityCompleted(true)\n\n    // API handler for submitting feedback\n    const handleSubmitFeedback = (feedback) => {\n        setReviewDialogOpen(false)\n        postApiData(config.activityCompleteUrl, { activity_id: props.activityId, activity_feedback: JSON.stringify(feedback) })\n    }\n\n\n    return (\n        <div className=\"ActivityCarousel\">\n            <Swiper\n                spaceBetween={50}\n                slidesPerView={1}\n                navigation\n                pagination={{ clickable: true, type: 'progressbar', }}\n                onReachEnd={finishedActivity}\n            >\n                {props.activity.pages.map((page, i) => {\n                    return (\n                        <SwiperSlide key={i}>\n                            {(page.thumbnail.split('.').pop() === 'mp4') ? (\n                                <video className=\"ActivityVideo\" autoPlay muted loop playsInline controls >\n                                    <source src={`/activities/${props.activityId}/${page.thumbnail}`} type=\"video/mp4\" />\n                                </video>\n                            ) : (\n                                <img src={encodeURI('/activities/' + (props.activityId) + '/' + page.thumbnail)} alt=\"Header decoration\" />\n                            )}\n                            \n                            <div className=\"text\">\n                                <h1>{page.title}</h1>\n                                <p dangerouslySetInnerHTML={{ __html: page.description }}></p>\n                            </div>\n                        </SwiperSlide>\n                    )\n                })}\n\n            </Swiper>\n            {activityCompleted ? (\n                    <Button variant=\"contained\" onClick={() => setReviewDialogOpen(true)} color=\"primary\">Finish</Button>\n            ) : null\n            }\n\n            { reviewDialogOpen ? \n                <ReviewDialog open={reviewDialogOpen} onSubmit={handleSubmitFeedback} />\n            : null }\n        </div >\n    )\n}\n","import React, { useState } from \"react\";\nimport { useParams } from 'react-router-dom';\n\nimport './Activity.css'\n\nimport useSWR from 'swr'\nimport { css } from \"@emotion/core\";\nimport BounceLoader from \"react-spinners/BounceLoader\";\n\nimport ActivityIntroduction from './ActivityIntroduction';\nimport ActivityCarousel from './ActivityCarousel';\n\nimport config from '../../config';\n\nexport default function Activity(props) {\n\n    let { activityId } = useParams();\n\n    const [showActivityIntroduction, setShowActivityIntroduction] = useState(true)\n    \n    const startActivity = () => setShowActivityIntroduction(false)\n    \n    const { data } = useSWR(`${config.activityGetUrl}${activityId-1}`)\n\n    const override = css`display: block; margin: 0 auto;`;\n    if (!data) return <BounceLoader color={\"#F19820\"} loading={true} css={override} size={100} />\n\n    return (\n        <div className=\"Activity\">\n            { showActivityIntroduction && !props.skipIntro ?\n                (\n                    <ActivityIntroduction activityId={activityId} activity={data.activity} handleStartActivity={startActivity}/>\n                )\n                :\n                (\n                    <ActivityCarousel activityId={activityId} activity={data.activity}/>\n                )\n            }  \n        </div>\n    )\n}","import React from 'react';\nimport Slide from '@material-ui/core/Slide';\nimport Dialog from '@material-ui/core/Dialog';\n\nimport CardComponent from '../Card/CardComponent';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function ActivityPreviewDialog(props) {\n  const { onClose, activity, open } = props;\n\n  return (\n    <Dialog onClose={onClose} open={open} TransitionComponent={Transition}>\n        <CardComponent activities={[activity]} skipIntro={true} margin={0}/>\n    </Dialog>\n  );\n}","/* eslint-disable jsx-a11y/alt-text */\nimport React, { useRef } from 'react'\nimport { Parallax, ParallaxLayer } from '@react-spring/parallax'\nimport styles from './styles.module.css'\n\nimport { withRouter } from 'react-router-dom';\n\nimport ActivityPreviewDialog from './ActivityPreviewDialog';\n\nconst url = (name, wrap) =>\n  `${wrap ? 'url(' : ''}https://awv3node-homepage.surge.sh/build/assets/${name}.svg${wrap ? ')' : ''}`\n\nvar leftMargin = (window.innerWidth > 600 ? 150 : window.innerWidth / 6);\nconst progressiveLeftMargin = () => {\n  leftMargin += (window.innerWidth > 600 ? 250 : window.innerWidth / 4);\n  return leftMargin\n}\n\nconst topMargins = ['30vh', '40vh', '50vh', '60vh', '65vh', '60vh', '50vh', '45vh', '40vh', '35vh', '40vh', '50vh', '60vh', '65vh', '60vh', '50vh', '40vh', '35vh', '40vh', '45vh']\n\nconst Page = ({ activities, offset, gradient, handleClick }) => (\n  <>\n    <ParallaxLayer offset={offset} speed={0.2}>\n      <div className={styles.slopeBegin} />\n    </ParallaxLayer>\n\n    <ParallaxLayer\n      offset={0} speed={0} factor={3} style={{\n        backgroundImage: url('stars', true),\n        backgroundSize: 'cover',\n      }}\n    />\n\n    <ParallaxLayer offset={offset} speed={0.6}>\n      <div className={`${styles.slopeEnd} ${styles[gradient]}`} />\n    </ParallaxLayer>\n\n    <ParallaxLayer className={`${styles.text} ${styles.number}`} offset={0} speed={0.3}>\n      <span>Spark</span>\n    </ParallaxLayer>\n\n    <ParallaxLayer className={`${styles.text} ${styles.description}`} offset={0} speed={0.3}>\n      <p>Your personalised creative journey</p>\n    </ParallaxLayer>\n\n    <ParallaxLayer offset={0.5} speed={0.2} style={{ opacity: 0.2 }}>\n      <img src={url('cloud')} style={{ display: 'block', width: '10%', marginBottom: '34%' }} />\n      <img src={url('cloud')} style={{ display: 'block', width: '20%', marginBottom: '50%' }} />\n    </ParallaxLayer>\n\n    <ParallaxLayer offset={0.7} speed={-0.1} style={{ opacity: 0.4 }}>\n      <img src={url('cloud')} style={{ display: 'block', width: '20%', marginBottom: '26%' }} /> \n    </ParallaxLayer>\n\n    <ParallaxLayer offset={1.5} speed={0.4} style={{ opacity: 0.6 }}>\n      <img src={url('cloud')} style={{ display: 'block', width: '20%', marginBottom: '30%' }} />\n    </ParallaxLayer>\n\n    <ParallaxLayer offset={2.0} speed={0.4} style={{ opacity: 1}}>\n      <h1>“Every child is an artist. The problem is how to remain an artist once he grows up.” </h1>\n    </ParallaxLayer>\n    \n    <ParallaxLayer offset={2.0} speed={0.4} style={{ opacity: 0.6 }}>\n      <p>- Pablo Picasso</p>\n    </ParallaxLayer>\n\n    {activities.map((activity, i) => (\n      (offset === 0 ?\n\n        <ParallaxLayer \n          key={i} \n          className={`${styles.activityIcon}`} \n          style={{ marginTop: topMargins[i], marginLeft: progressiveLeftMargin() , backgroundImage: `url(\"/activities/${activity.activityId}/${activity.thumbnail}\"` }} \n          offset={0} speed={1} \n          onClick={() => handleClick(i)}>\n            <span></span>\n        </ParallaxLayer>\n        : null\n      )\n    ))}\n\n  </>\n)\n\nfunction ParallaxView(props) {\n\n  const activities = props.activities\n  \n  const [dialogOpen, setDialogOpen] = React.useState(false);\n  const [selectedActivity, setSelectedActivity] = React.useState([])\n  \n  const handleClick = (i) => {\n    setSelectedActivity (activities[i])\n    setDialogOpen(true)\n  }\n\n  // Reset left margin if we are not refreshing the page\n  leftMargin = (window.innerWidth > 600 ? 150 : window.innerWidth / 6);\n\n  const parallax = useRef(null)\n\n  return (\n    <div style={{ background: '#dfdfdf' }}>\n      <ActivityPreviewDialog activity={selectedActivity} open={dialogOpen} onClose={() => setDialogOpen(false)}/>\n\n      <Parallax className={styles.container} ref={parallax} pages={3} horizontal>\n        <Page handleClick={handleClick} activities={activities} offset={0} gradient=\"pink\" />\n        <Page handleClick={handleClick} activities={activities} offset={1} gradient=\"teal\" />\n        <Page handleClick={handleClick} activities={activities} offset={2} gradient=\"tomato\" />\n      </Parallax>\n    </div>\n  )\n}\n\nexport default withRouter(ParallaxView)","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport useSWR from 'swr'\n\nimport { css } from \"@emotion/core\";\nimport BounceLoader from \"react-spinners/BounceLoader\";\n\nimport UserOnboarding from '../UserOnboarding/UserOnboarding'\n\nimport './Spark.css';\nimport Parallax from './Parallax.jsx';\n\nimport config from '../../config';\n\n\nfunction Spark() {\n\n    const bounceLoaderCss = css`display: block; margin: 0 auto;`;\n\n    // Check if user has completed onboarding\n    var { data: onboarding, mutate } = useSWR(config.onboardingStatusUrl);\n    var { data: activities } = useSWR(config.getSparkPlan);\n\n    if (!onboarding) return <BounceLoader color=\"#F19820\" loading={true} css={bounceLoaderCss} size={100} />\n    if (!activities) return <BounceLoader color=\"#F19820\" loading={true} css={bounceLoaderCss} size={100} />\n\n    if (onboarding.hasOwnProperty('error')) {\n        return (\n            <UserOnboarding onComplete={mutate} />\n        )\n    }\n\n    return (\n        <div className=\"Spark\">\n            <Parallax activities={activities.activities} />\n        </div>\n    )\n}\n\nexport default withRouter(Spark);","import React from \"react\"\nimport useSWR from 'swr'\nimport './Create.css'\n\nimport { css } from \"@emotion/core\";\nimport BounceLoader from \"react-spinners/BounceLoader\";\n\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\n\nimport config from '../../config';\n\nexport default function Create() {\n\n    const bounceLoaderCss = css`display: block; margin: 0 auto;`;\n\n    const { data } = useSWR(config.activitiesListUrl)\n\n    if (!data) return <BounceLoader color='#F19820' loading={true} css={bounceLoaderCss} size={100} />\n\n    var activities;\n    const setActivities = () => {\n        activities = [...data.activities]\n    }\n    setActivities();\n\n    return (\n        <div className=\"Create\">\n            <h1>Create</h1>\n            <ButtonGroup variant=\"contained\" size=\"large\" color=\"primary\">\n                <Button>Draw</Button>\n                <Button>Write</Button>\n            </ButtonGroup>\n        </div>\n    )\n}","// React imports\nimport React, { useEffect } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\n// Authentication imports\nimport { PrivateRoute } from './components/Auth/PrivateRoute';\nimport Login from './components/Auth/Login';\nimport Logout from './components/Auth/Logout';\nimport ResetWithToken from './components/Auth/ResetWithToken';\nimport Reset from './components/Auth/Reset';\nimport SignUp from './components/Auth/SignUp';\nimport ConfirmEmail from './components/Auth/ConfirmEmail';\nimport UserOnboarding from './components/UserOnboarding/UserOnboarding'\n\n// App styling\nimport './App.css';\nimport './fonts/font.css';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles'\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\n// Navigation components\nimport Navbar from './components/Navbar/Navbar';\nimport TopBar from './components/TopBar/TopBar';\n\n// Page components\nimport SplashScreen from './components/SplashScreen/SplashScreen';\nimport UserMenu from './components/UserMenu/UserMenu.jsx';\nimport ViewActivitiesComponent from './components/ViewActivities/ViewActivitiesComponent';\nimport Activity from './components/Activity/Activity';\nimport Spark from './components/Spark/Spark';\nimport Create from './components/Create/Create';\n\n// Notifications\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nexport const SnackbarContext = React.createContext();\n\n\nexport default function App() {\n\n  const [splashScreen, setSplashScreen] = React.useState(true)\n\n  useEffect(() => {\n    setTimeout(() => {\n      setSplashScreen(false)\n    }, 1500);\n  }, []);\n\n  const theme = createMuiTheme({\n    palette: {\n      type: (useMediaQuery('(prefers-color-scheme: dark)') ? 'dark' : 'light'),\n      primary: {\n        main: '#F19820'\n      },\n      secondary: {\n        main: '#CAE8FF'\n      }\n    },\n    typography: {\n      fontFamily: [\n        'F37 Ginger',\n        '-apple-system',\n        'BlinkMacSystemFont',\n        '\"Segoe UI\"',\n        'Roboto',\n        '\"Helvetica Neue\"',\n        'Arial',\n        'sans-serif',\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"',\n      ].join(',')\n    },\n    overrides: {\n      MuiTouchRipple: {\n        child: {\n          backgroundColor: '#F19820'\n        }\n      }\n    }\n  });\n\n  // Snackbar\n  const [snackbar, setSnackbar] = React.useState({\n    text: '',\n    severity: '',\n    open: false,\n  });\n  const handleClose = () => {\n    setSnackbar({ open: false });\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <div className=\"App\">\n        <link rel=\"shortcut icon\" href=\"./favicon.ico\" />\n        <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\n\n        <header className=\"App-header\">\n\n          <SnackbarContext.Provider value={{ snackbar, setSnackbar }}>\n\n            <Snackbar open={snackbar.open} autoHideDuration={6000} onClose={handleClose}>\n              <MuiAlert onClose={handleClose} severity={snackbar.severity}>\n                {snackbar.text}\n              </MuiAlert>\n            </Snackbar>\n\n            {splashScreen ? (<SplashScreen />) : (\n\n              <BrowserRouter>\n\n                <TopBar />\n\n                <div className=\"AppWrapper\">\n\n                  <Switch>\n                    <Route exact path=\"/\"> <ViewActivitiesComponent /> </Route>\n\n                    <Route exact path=\"/activity/:activityId\"> <Activity /> </Route>\n                    \n                    <Route exact path=\"/activity/:activityId/go\"> <Activity skipIntro={true}/> </Route>\n\n                    <PrivateRoute exact path=\"/spark\" component={Spark} />\n\n                    <PrivateRoute exact path=\"/create\" component={Create} />\n\n                    <PrivateRoute exact path=\"/user\" component={UserMenu} />\n\n                    <PrivateRoute exact path=\"/onboarding\" component={UserOnboarding} />\n\n                    <Route exact path=\"/login\" component={Login} />\n\n                    <Route exact path=\"/logout\" component={Logout} />\n\n                    <Route exact path=\"/reset\" component={Reset} />\n\n                    <Route exact path=\"/register\" component={SignUp} />\n\n                    <Route exact path=\"/confirm/:token\" component={ConfirmEmail} />\n\n                    <Route exact path=\"/reset/:token\" component={ResetWithToken} />\n                  </Switch>\n\n                </div>\n\n                <Navbar />\n\n              </BrowserRouter>\n            )}\n\n          </SnackbarContext.Provider>\n        </header>\n      </div>\n    </ThemeProvider>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import axios from 'axios';\n\nimport { authenticationService } from '../services';\nimport { refreshToken } from '../helpers';\nimport config from '../config';\n\naxios.interceptors.response.use(\n    (response) => {\n      return response\n    },\n    (error) => {\n      return new Promise((resolve) => {\n        const originalRequest = error.config\n        const refreshTokenString = refreshToken()\n        \n        if (error.response && error.response.status === 401 && error.config && !error.config.__isRetryRequest && refreshTokenString) {\n          originalRequest._retry = true\n  \n          const response = fetch(config.authRefresh, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `Bearer ${refreshTokenString}`\n            },\n            body: JSON.stringify({\n              refresh: refreshToken,\n            }),\n          })\n            .then((res) => res.json())\n            .then((data) => {\n              const currentUser = JSON.parse(localStorage.getItem('currentUser'));\n              currentUser['access_token'] = data.access_token;\n              authenticationService.updateUser(currentUser);\n\n              window.location.reload();\n            })\n          resolve(response)\n        }\n  \n        return Promise.reject(error)\n      })\n    },\n  )","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { SWRConfig } from 'swr'\n\nimport './interceptors/axios-interceptor';\nimport { fetcher } from './services';\n\nReactDOM.render(\n\n    <SWRConfig value={{ fetcher }}>\n        <App />\n    </SWRConfig>\n    ,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__GYYmZ\",\"text\":\"styles_text__2nqlF\",\"number\":\"styles_number__Uxrv2\",\"description\":\"styles_description__1M0dc\",\"activityIcon\":\"styles_activityIcon__2PYIz\",\"slopeBegin\":\"styles_slopeBegin__C_PD3\",\"slopeEnd\":\"styles_slopeEnd__3hgvL\",\"pink\":\"styles_pink__23YfJ\",\"teal\":\"styles_teal__1Wtgr\",\"tomato\":\"styles_tomato__1VsmE\"};"],"sourceRoot":""}